<?xml version='1.0' encoding='UTF-8'?>
<schemas xmlns="http://www.intertrust.ru/schema/palette/tn-schema">
    <schema extends="TNObject" name="RefRegister">
        <meta>
            <category name="Система\Делопроизводство"/>
        </meta>
        <string name="showIdent" temporal="true" computed="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA['Дело']]></script>
            </calc-values>
        </string>
        <string name="printformname" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA['fileregisterprintform']]></script>
            </calc-values>
        </string>
        <string name="$currentUserRoles" array="true" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[#this.currentUserRoles]]></script>
            </calc-values>
        </string>
        <boolean name="$isNotDeleted" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[!isDeleted()]]></script>
            </calc-values>
        </boolean>
        <enum-ref ref="FileStatusGeneralEnum" name="statusGeneral" system="true" createlog="true"/>
        <enum-ref ref="FileStatusExtendedEnum" name="statusExtended" system="true" createlog="true"/>
        <boolean name="hasExtended" system="true"/>
        <string name="indexTitleSpel" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA['Индекс дела:']]></script>
            </calc-values>
        </string>
        <string name="indexPrefix" system="true" createlog="true"/>
        <string name="indexNum" system="true" createlog="true"/>
        <string name="indexSuffix" system="true" createlog="true"/>
        <string name="separatorPref" system="true"/>
        <string name="separatorSuff" system="true"/>

        <string name="indexFile" system="true"/>
        <string name="titleFile" system="true" createlog="true"/>
        <string name="titleFileReserved" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA['Резервное']]></script>
            </calc-values>
        </string>
        <enum-ref ref="EFileType" name="eFile" system="true" default-value="PHYSICAL"/>
        <boolean name="inPO" system="true"/>
        <boolean name="reserved" system="true"/>
        <boolean name="movable" system="true"/>
        <string name="dateYear" system="true"/>
        <boolean name="electronic" system="true"/>
        <boolean name="outOfSystem" system="true"/>
        <boolean name="notExist" system="true"/>
        <string name="spd" system="true"/>
        <boolean name="ek" system="true"/>
        <date name="dateOfBeginning" system="true"/>
        <string name="dateOfBeginningStr" system="true"/>

        <enum-ref ref="StorageDateType" name="dateOfBeginningType" default-value="YEAR" system="true"/>

        <date name="dateOfEnd" system="true"/>
        <string name="dateOfEndStr" system="true"/>

        <enum-ref ref="StorageDateType" name="dateOfEndType" default-value="YEAR" system="true"/>

        <string name="numRegister" system="true"/>
        <string name="numArchive" system="true"/>
        <string name="countTomeSections" system="true">
            <validate>
                <regex>^[-0-9]*$</regex>
            </validate>
        </string>
        <integer name="countSheets" system="true"/>
        <integer name="countIntInventorySheets" system="true"/>

        <string name="ndFormat" system="true"/>

        <boolean name="hasCopies" system="true"/>
        <schema-ref ref="FrFileInfo" name="fileWithOriginal" system="true"/>
        <actor name="responsibles" system="true" array="true"/>

        <actor name="assigners" array="true" system="true"/>

        <string name="storage" system="true"/>
        <string name="storagePeriod" system="true" createlog="true"/>
        <schema-ref ref="StoragePeriodInfo" name="periodInfo" system="true" createlog="true">
            <recalc-processing-class>ru.intertrust.cmj.rest.fileregister.file.RecalcForSpDescription</recalc-processing-class>
        </schema-ref>
        <string name="spDescription" system="true" createlog="true"/>
        <string array="true" system="true" name="indexFilePrev"/>
        <string  array="true" system="true" name="titleFilePrev"/>
        <string  array="true" system="true" name="storagePeriodPrev"/>
        <string  array="true" system="true" name="spDescriptionPrev"/>
        <string  array="true" temporal="true" name="periodDescriptionShowPrev"/>
        <string  array="true" system="true" name="depOrDirectionPrev"/>

        <string name="fileRkk_ref" system="true"/>

        <actor name="organization" system="true"/>
        <actor name="orgDepartment" system="true"/>
        <boolean name="orgDepartmentIsNull" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[orgDepartment == null]]></script>
            </calc-values>
        </boolean>
        <string name="statusDisplay" temporal="true" computed="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA["Проект"]]></script>
            </calc-values>
        </string>
        <string name="branchDivision" system="true"/>
        <actor name="soUnit" system="true"/>
        <boolean name="soUnitIsNotNull" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[(branchDivision == null || "".equals(branchDivision)) && soUnit != null]]></script>
            </calc-values>
        </boolean>
        <string name="soUnitFullName" default-value="">
            <storage-field name="soUnitFullName"/>
        </string>
        <string name="$id" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[#this.id]]></script>
            </calc-values>
        </string>
        <string name="showRkks" temporal="true"/>
        <string name="mode" temporal="true"/>
        <boolean name="isSuffixUsed" system="true" temporal="true"/>
        <boolean name="$isProject" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[statusGeneral != null && "PROJECT".equals(statusGeneral.toString())]]></script>
            </calc-values>
        </boolean>
        <hyperlink name="selfHyperLink" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[T(ru.intertrust.cmj.af.misc.HyperLink).createHyperLink('Открыть'+'~#'+T(ru.intertrust.cmj.ws.base.servlet.ServletUrlHolder).getServerUrlStr() +link.?[rel=='self'].get(0).href+'~#newTab~#local')]]></script>
            </calc-values>
        </hyperlink>
        <string name="autoCountSheets" temporal="true">
            <recalc-processing-class>ru.intertrust.cmj.rest.fileregister.file.FrAutoCountSheetsRecalcHandler</recalc-processing-class>
        </string>
        <string name="autoFillDateOfBeginning" temporal="true">
            <recalc-processing-class>ru.intertrust.cmj.rest.fileregister.file.FrAutoFillDateRecalcHandler</recalc-processing-class>
        </string>
        <string name="autoFillDateOfEnd" temporal="true">
            <recalc-processing-class>ru.intertrust.cmj.rest.fileregister.file.FrAutoFillDateRecalcHandler</recalc-processing-class>
        </string>
        <boolean name="$canCompleteFrFileFormation" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[link.?[rel=='file.complete.formation'].size() > 0]]></script>
            </calc-values>
        </boolean>
        <boolean name="$curUserIsFileFormationResponsible" temporal="true">
            <calc-values>
                <script event="open"><![CDATA[$currentUserRoles.contains("FileFormationResponsible")]]></script>
            </calc-values>
        </boolean>
        <boolean name="$canEditRespFormerWithStatusGeneralIsFormedChanged" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL">
                    <![CDATA[
                        statusGeneral != null && "FORMED".equals(statusGeneral.toString()) &&
                            (statusExtended == null || "".equals(statusExtended.toString()) || "CHANGED".equals(statusExtended.toString()))
                                && ($curUserIsFileFormationResponsible || $currentUserRoles.contains("FormerNDPUnit"))
                    ]]>
                </script>
            </calc-values>
        </boolean>
        <boolean name="$canEditRespFormerWithStatusGeneralIsFormed" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL">
                    <![CDATA[
                        statusGeneral != null && "FORMED".equals(statusGeneral.toString()) &&
                            (statusExtended == null || "".equals(statusExtended.toString()))
                                && ($curUserIsFileFormationResponsible || $currentUserRoles.contains("FormerNDPUnit"))
                    ]]>
                </script>
            </calc-values>
        </boolean>
        <boolean name="ParentNDPIsActive" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[
                    !#this.isNew() && {
                    #parentsStatusesGeneral = #this.getAllParentUnitRegistersStatusesGeneral(),
                    (!#parentsStatusesGeneral.isEmpty() && #parentsStatusesGeneral.?[#this != null && "ACTIVE".equals(#this.toString())].size() != 0)
                    }[1]
                ]]></script>
            </calc-values>
        </boolean>
        <boolean name="ParentNDPIsOnlyOneActiveOrNotActive" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[
                    !#this.isNew() &&
                    {#parentsStatusesGeneral = #this.getAllParentUnitRegistersStatusesGeneral(),
                    (!#parentsStatusesGeneral.isEmpty() && #parentsStatusesGeneral.?[#this != null && "ACTIVE".equals(#this.toString())].size() < 2)
                    &&
                    (!#parentsStatusesGeneral.isEmpty() && #parentsStatusesGeneral.?[#this != null && "NOT_ACTIVE".equals(#this.toString())].size() <2)
                    }[1]
                ]]></script>
            </calc-values>
        </boolean>
        <boolean name="ParentNDPIsOnlyActive" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[
                    !#this.isNew() &&
                    {#parentsStatusesGeneral = #this.getAllParentUnitRegistersStatusesGeneral(),
                    (!#parentsStatusesGeneral.isEmpty() && #parentsStatusesGeneral.?[#this != null && "ACTIVE".equals(#this.toString())].size() != 0)
                    &&
                    (!#parentsStatusesGeneral.isEmpty() && #parentsStatusesGeneral.?[#this != null && "NOT_ACTIVE".equals(#this.toString())].size() == 0)
                    }[1]
                ]]></script>
            </calc-values>
        </boolean>
        <boolean name="canEditIsReserveNDPChangeCondition" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[
                    {
                    #unitRegisterChanges = #this.getUnitRegisterChanges(),
                    statusGeneral != null && "RESERVED".equals(statusGeneral.toString()) &&
                    statusExtended != null && "CHANGED".equals(statusExtended.toString()) &&
                    (!#unitRegisterChanges.isEmpty() && #unitRegisterChanges.?[#this != null &&
                    ("PROJECT".equals(#this.getStatusGeneral().toString()) && (#this.getStatusExtended() == null ||
                    "".equals(#this.getStatusExtended().toString()) ||
                    "ROLLBACK_TO_REWORK".equals(#this.getStatusExtended().toString())))].size() != 0)
                    }[1]
                ]]></script>
            </calc-values>
        </boolean>
        <boolean name="canEditIsReserveNDPCondition" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[
                    {
                    #unitRegisters = #this.getParents(),
                    statusGeneral != null && "RESERVED".equals(statusGeneral.toString()) &&
                    (statusExtended == null || "".equals(statusExtended.toString())) &&
                    (!#unitRegisters.isEmpty() && #unitRegisters.?[#this != null &&
                    ("PROJECT".equals(#this.getStatusGeneral().toString()) && (#this.getStatusExtended() == null ||
                    "".equals(#this.getStatusExtended().toString()) ||
                    "ROLLBACK_TO_REWORK".equals(#this.getStatusExtended().toString())))].size() != 0)
                    }[1]
                ]]></script>
            </calc-values>
        </boolean>
        <boolean name="ParentNDPIsActiveOrNotActive" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[
                    !#this.isNew() &&
                    {#parentsStatusesGeneral = #this.getAllParentUnitRegistersStatusesGeneral(),
                    (!#parentsStatusesGeneral.isEmpty() && #parentsStatusesGeneral.?[#this != null && "ACTIVE".equals(#this.toString())].size() != 0)
                    ||
                    (!#parentsStatusesGeneral.isEmpty() && #parentsStatusesGeneral.?[#this != null && "NOT_ACTIVE".equals(#this.toString())].size() != 0)
                    }[1]
                ]]></script>
            </calc-values>
        </boolean>
        <boolean name="ParentNDPIsOnlyNotActive" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[
                    !#this.isNew() &&
                    {#parentsStatusesGeneral = #this.getAllParentUnitRegistersStatusesGeneral(),
                    (!#parentsStatusesGeneral.isEmpty() && #parentsStatusesGeneral.?[#this != null && "ACTIVE".equals(#this.toString())].size() == 0)
                    &&
                    (!#parentsStatusesGeneral.isEmpty() && #parentsStatusesGeneral.?[#this != null && "NOT_ACTIVE".equals(#this.toString())].size() != 0)
                    }[1]
                ]]></script>
            </calc-values>
        </boolean>
        <boolean name="StatusGeneralIsReservedAndStatusExtendedIsChanged" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL">
                    <![CDATA[
                        statusGeneral != null && "RESERVED".equals(statusGeneral.toString())
                        &&
                        statusExtended != null && "CHANGED".equals(statusExtended.toString())
                    ]]>
                </script>
            </calc-values>
        </boolean>
        <boolean name="$canEditMovableWithStatusGeneralIsFormed" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL">
                    <![CDATA[
                        statusGeneral != null && "FORMED".equals(statusGeneral.toString()) &&
                            (statusExtended == null || "".equals(statusExtended.toString()) || "CHANGED".equals(statusExtended.toString()))
                                && ($curUserIsFileFormationResponsible || $currentUserRoles.contains("FormerNDPUnit"))
                                && (movable || ParentNDPIsOnlyOneActiveOrNotActive)
                    ]]>
                </script>
            </calc-values>
        </boolean>
        <boolean name="StatusGeneralIsCompleted" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL">
                    <![CDATA[
                        statusGeneral != null && "COMPLETED".equals(statusGeneral.toString())
                        &&
                        (statusExtended == null || statusExtended != null && "".equals(statusExtended.toString()))
                    ]]>
                </script>
            </calc-values>
        </boolean>
        <boolean name="StatusGeneralIsFormedAndStatusExtendedIsChanged" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL">
                    <![CDATA[
                        statusGeneral != null && "FORMED".equals(statusGeneral.toString())
                        &&
                        statusExtended != null && "CHANGED".equals(statusExtended.toString())
                    ]]>
                </script>
            </calc-values>
        </boolean>
        <boolean name="StatusGeneralIsFormedAndStatusExtendedIsNullOrReservedChanged" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL">
                    <![CDATA[
                        statusGeneral != null && "FORMED".equals(statusGeneral.toString())
                        &&
                        (statusExtended == null || statusExtended != null && "".equals(statusExtended.toString()))
                        ||
                        (statusGeneral != null && "RESERVED".equals(statusGeneral.toString())
                        && statusExtended != null && "CHANGED".equals(statusExtended.toString()))
                    ]]>
                </script>
            </calc-values>
        </boolean>
        <schema-ref ref="ContentResourceDocuments" name="contentDocuments" createlog="true"/>
        <schema-ref ref="ContentResourceAddInformations" name="contentAddInformations" createlog="true"/>
        <boolean name="contentDocumentsNotEmpty" createlog="true" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[contentDocuments != null && ((contentDocuments.richtext != null && !contentDocuments.richtext.isEmpty()) || (contentDocuments.content != null && !contentDocuments.content.isEmpty()))]]></script>
            </calc-values>
        </boolean>
        <boolean name="contentAddInformationsNotEmpty" createlog="true" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[contentAddInformations != null && ((contentAddInformations.richtext != null && !contentAddInformations.richtext.isEmpty()) || (contentAddInformations.content != null && !contentAddInformations.content.isEmpty()))]]></script>
            </calc-values>
        </boolean>
        <boolean name="spdUsedFile" system="true"/>
        <boolean name="$canAddRkk" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL">
                    <![CDATA[
                        statusGeneral != null && "FORMED".equals(statusGeneral.toString())
                        && $curUserIsFileFormationResponsible
                    ]]>
                </script>
            </calc-values>
        </boolean>
        <boolean name="StatusGeneralIsFormed" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL">
                    <![CDATA[
                        statusGeneral != null && "FORMED".equals(statusGeneral.toString())
                    ]]>
                </script>
            </calc-values>
        </boolean>
        <boolean name="$statusGeneralIsFormedOrCompletedAndCurUserIsFileFormationResponsible" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL">
                    <![CDATA[
                        statusGeneral != null && ("FORMED".equals(statusGeneral.toString()) || "COMPLETED".equals(statusGeneral.toString()))
                        && $curUserIsFileFormationResponsible
                    ]]>
                </script>
            </calc-values>
        </boolean>
        <boolean name="$showPrevReqValues" temporal="true" createlog="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[#this.hasPrevValues()]]></script>
            </calc-values>
        </boolean>
        <string name="title" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[titleFile]]></script>
            </calc-values>
        </string>
        <string name="spDescriptionHint" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA["Обоснование срока хранения"]]></script>
            </calc-values>
        </string>
        <boolean name="periodInfoIsEmpty">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[periodInfo == null]]></script>
            </calc-values>
        </boolean>
        <boolean name="isReserved" temporal="true">
            <calc-values>
                <script event="open"><![CDATA[reserved]]></script>
            </calc-values>
<!--            <recalc-processing-class>ru.intertrust.cmj.rest.fileregister.file.operation.ToggleIsReserve</recalc-processing-class>-->
        </boolean>
        <boolean name="isNotReserved" temporal="true">
            <calc-values>
                <script event="open"><![CDATA[!reserved]]></script>
            </calc-values>
            <recalc-processing-class>ru.intertrust.cmj.rest.fileregister.file.operation.ToggleIsReserve</recalc-processing-class>
        </boolean>
        <boolean name="$isNotReserved" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[isReserved == null || (isReserved != null && isReserved.equals(false))]]></script>
            </calc-values>
        </boolean>
        <boolean name="canEditIsReservedWhenStatusGeneralIsProject" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[$isProject && (#this.isNew() || isReserved != null && isReserved)]]></script>
            </calc-values>
        </boolean>
        <boolean name="$canEditResponsiblesWithStatusCompleted" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL">
                    <![CDATA[
                        statusGeneral != null &&
                            $curUserIsFileFormationResponsible
                             && "COMPLETED".equals(statusGeneral.toString())
                    ]]>
                </script>
            </calc-values>
        </boolean>
        <boolean name="$canEditResponsiblesWithStatusGeneralIsFormedOrCompleted" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL">
                    <![CDATA[
                        statusGeneral != null && (
                            ($curUserIsFileFormationResponsible
                             && ("FORMED".equals(statusGeneral.toString())
                                 || "COMPLETED".equals(statusGeneral.toString()) && (statusExtended == null || "".equals(statusExtended.toString()))))
                            || ($currentUserRoles.contains("FormerNDPUnit") && "FORMED".equals(statusGeneral.toString())
                                && statusExtended != null && "CHANGED".equals(statusExtended.toString()))
						)
                    ]]>
                </script>
            </calc-values>
        </boolean>
        <boolean name="$canEditCount" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL">
                    <![CDATA[
                        statusGeneral != null && "FORMED".equals(statusGeneral.toString()) &&
                            (statusExtended == null || "".equals(statusExtended.toString()))
                                && ($curUserIsFileFormationResponsible || $currentUserRoles.contains("FormerNDPUnit"))
                                && !ParentNDPIsOnlyActive
                    ]]>
                </script>
            </calc-values>
        </boolean>
        <boolean name="securityStampIsNotEmpty" createlog="true" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[securityStamp != null && securityStamp != ""]]></script>
            </calc-values>
        </boolean>
        <string computed="true" createlog="true" name="editSecurityStampField">
            <storage-field name="editSecurityStampField"/>
            <calc-values>
                <script lang="SPEL" event="open">
                    <![CDATA[(editSecurityStampField == null || editSecurityStampField == '') ? (securityStampIsNotEmpty ? 'No' : 'Yes') : editSecurityStampField]]></script>
            </calc-values>
        </string>
        <string name="PaperDocNumbers" createlog="true">
            <storage-field name="paperDocNumbers"/>
        </string>
        <string array="true" temporal="true" name="personGrifs">
            <calc-values>
                <script lang="SPEL" event="open"><![CDATA[T(ru.intertrust.cmj.af.core.AFSession).get().currentUser().getPerson().getPersonStampGrifs()]]></script>
            </calc-values>
        </string>
        <string name="securityStamp" system="true" createlog="true"/>
        <boolean name="supportSecurityStamp" system="true" temporal="true"/>

        <schema-ref name="addLinkedDocGrif" ref="SelectGrifLinkedDocDialogResource" temporal="true"/>
        <string temporal="true" name="DOPName">
            <calc-values>
                <script lang="SPEL" event="open"><![CDATA['FR_File_Extended']]></script>
            </calc-values>
        </string>
        <schema-ref null-empty="true" ref="ReasonDoc" createlog="true" name="docReasonWithdrawlObj"/>
        <boolean default-value="false" temporal="true" name="docReasonWithdrawalIsView">
            <calc-values>
                <script lang="SPEL" event="open"><![CDATA[(docReasonWithdrawlObj != null && docReasonWithdrawlObj.id != null
                && T(ru.intertrust.cmj.af.core.AFEntityStorage).getEntityByUNID(docReasonWithdrawlObj.id)!=null
                && (securityStamp == null || securityStamp == ''))]]></script>
            </calc-values>
        </boolean>
        <boolean default-value="false" temporal="true" name="docReasonWithdrawalManualIsView">
            <calc-values>
                <script lang="SPEL" event="open"><![CDATA[(docReasonWithdrawlObj != null &&
                (docReasonWithdrawlObj.id == null || T(ru.intertrust.cmj.af.core.AFEntityStorage).getEntityByUNID(docReasonWithdrawlObj.id)==null )
                && docReasonWithdrawlObj.docType != null && docReasonWithdrawlObj.withdrawStampReasonText==null && (securityStamp == null || securityStamp == ''))]]></script>
            </calc-values>
        </boolean>
        <boolean default-value="false" temporal="true" name="docReasonWithdrawalReasonIsView">
            <calc-values>
                <script lang="SPEL" event="open"><![CDATA[(docReasonWithdrawlObj != null && docReasonWithdrawlObj.id == null && docReasonWithdrawlObj.docType == null && docReasonWithdrawlObj.withdrawStampReasonText!=null && (securityStamp == null || securityStamp == ''))]]></script>
            </calc-values>
        </boolean>
        <boolean default-value="false" temporal="true" name="supportSecurityStampCalc">
            <calc-values>
                <script lang="SPEL" event="open">
                    <![CDATA[(supportSecurityStamp) || ( isNew && T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'DOPName') && T(ru.intertrust.cmj.af.utils.BeansUtils).getBean('securityStampImpl').isSupportSecurityStamp(DOPName) && T(ru.intertrust.cmj.af.core.AFCMDomino).getDbInfoByReplicaID(id.substring(0,16)).usedSecurityStamp)]]></script>
            </calc-values>
        </boolean>
        <boolean name="showSecurityStampField" createlog="true" temporal="true">
            <calc-values>
                <script lang="SPEL" event="open">
                    <![CDATA[(securityStamp != null && securityStamp != "") ||
                    (docReasonWithdrawlObj != null && (docReasonWithdrawlObj.id != null || docReasonWithdrawlObj.docType != null) && (securityStamp == null || securityStamp == '')) ||
                    supportSecurityStampCalc]]></script>
            </calc-values>
        </boolean>
        <boolean name="isNotExist">
            <calc-values>
                <script event="open"><![CDATA[notExist]]></script>
            </calc-values>
            <recalc-processing-class>ru.intertrust.cmj.rest.fileregister.file.operation.ToggleIsNotExist</recalc-processing-class>
        </boolean>
        <boolean name="cantEditBeginYear" temporal="true">
            <calc-values>
                <script event="open">
                    <![CDATA[(statusGeneral != null && "FORMED".equals(statusGeneral.toString()) && statusExtended == null && $curUserIsFileFormationResponsible && ParentNDPIsActive)]]>
                </script>
            </calc-values>
        </boolean>

        <boolean name="$canEditDateOfEnd" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL">
                    <![CDATA[
                         statusGeneral != null && "FORMED".equals(statusGeneral.toString()) &&
                            (statusExtended == null || "".equals(statusExtended.toString()) || "CHANGED".equals(statusExtended.toString()))
                                && ($curUserIsFileFormationResponsible || $currentUserRoles.contains("FormerNDPUnit"))
                                && ParentNDPIsOnlyNotActive
                    ]]>
                </script>
            </calc-values>
        </boolean>
        <boolean name="$canEditTome" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL">
                    <![CDATA[
                        statusGeneral != null && "FORMED".equals(statusGeneral.toString()) &&
                            (statusExtended == null || "".equals(statusExtended.toString()))
                                && ($curUserIsFileFormationResponsible || $currentUserRoles.contains("FormerNDPUnit"))
                                && ParentNDPIsOnlyNotActive
                    ]]>
                </script>
            </calc-values>
        </boolean>
        <boolean name="cannotEditNdFormatHasCopiesAndIndexes" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL">
                    <![CDATA[((statusGeneral != null && "FORMED".equals(statusGeneral.toString()) && statusExtended == null) && $curUserIsFileFormationResponsible && ParentNDPIsActiveOrNotActive)]]>
                </script>
            </calc-values>
        </boolean>
        <hyperlink computed="true" name="linkNDP" temporal="true">
            <calc-values>
                <script lang="SPEL" event="open"><![CDATA[
                ("FORMED".equals(statusGeneral.toString())) ?
                {
                    #parentUnid = T(ru.intertrust.cmj.af.utils.BeansUtils).getTypedBean(T(ru.intertrust.cmj.ssrv.fileregister.Base.FrEntityGetter)).getParentURUnidByFileUnid(#root.id.split(':')[1]),
                    #parentUnid == null ? null : T(ru.intertrust.cmj.af.misc.HyperLink).createHyperLink('НД подразделения' + '~#'+T(ru.intertrust.cmj.ws.base.servlet.ServletUrlHolder).getServerUrlStr() + '/ids/'
                         + #parentUnid
                         + '~#newTab~#local')
                }[1]
                : (("PROJECT".equals(statusGeneral.toString()) || "COMPLETED".equals(statusGeneral.toString()))
                    ? {
                        #parentUnid = T(ru.intertrust.cmj.af.utils.BeansUtils).getTypedBean(T(ru.intertrust.cmj.ssrv.fileregister.Base.FrEntityGetter)).getParentURUnidByFileUnidStatusNotActive(#root.id.split(':')[1]),
                        (#parentUnid == null) ? null : T(ru.intertrust.cmj.af.misc.HyperLink).createHyperLink('НД подразделения' + '~#'+T(ru.intertrust.cmj.ws.base.servlet.ServletUrlHolder).getServerUrlStr() + '/ids/'
                             + #parentUnid
                             + '~#newTab~#local')
                      }[1]
                    : null
                    )
                ]]></script>
            </calc-values>
        </hyperlink>
        <boolean name="$canDeleteFromTrash" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA[
                    statusGeneral != null && "DELETED".equals(statusGeneral.toString()) && #this.currentUserRoles.contains("[SuperUser]")]]></script>
            </calc-values>
        </boolean>
        <boolean name="$canEditNdFormatWithStatusGeneralIsFormedOrCompleted" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL">
                    <![CDATA[
                        statusGeneral != null && ("FORMED".equals(statusGeneral.toString()) || "COMPLETED".equals(statusGeneral.toString()))
                        && (statusExtended == null || "".equals(statusExtended.toString()))
                        && $curUserIsFileFormationResponsible
                    ]]>
                </script>
            </calc-values>
        </boolean>
        <boolean name="StatusGeneralIsFormedAndStatusExtendedIsTransferred" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL">
                    <![CDATA[
                        statusGeneral != null && "FORMED".equals(statusGeneral.toString())
                        &&
                        statusExtended != null && "TRANSFERRED".equals(statusExtended.toString())
                    ]]>
                </script>
            </calc-values>
        </boolean>
        <string name="emptyStr" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL"><![CDATA['']]></script>
            </calc-values>
        </string>
        <boolean name="$canEditStatusGeneralIsFormedNdpOnlyActive" temporal="true">
            <calc-values>
                <script event="open" lang="SPEL">
                    <![CDATA[
                        statusGeneral != null && "FORMED".equals(statusGeneral.toString()) &&
                            (statusExtended == null || "".equals(statusExtended.toString()))
                                && ($curUserIsFileFormationResponsible || $currentUserRoles.contains("FormerNDPUnit"))
                                && ParentNDPIsOnlyActive
                    ]]>
                </script>
            </calc-values>
        </boolean>
        <custom-event-handler lang="JavaScript"><![CDATA[
importPackage(Packages.java.util);
importPackage(Packages.java.util.ArrayList);
importPackage(Packages.ru.intertrust.cmj.af.so);
importPackage(Packages.ru.intertrust.cmj.dp);
importPackage(Packages.ru.intertrust.cmj.rest.tuning);
importClass(Packages.ru.intertrust.cmj.tunable.object.common.TunableObjectHelper);
importClass(Packages.ru.intertrust.cmj.af.core.AFSession);
importClass(Packages.ru.intertrust.cmj.af.fileregister.file.FrFile);
importClass(Packages.ru.intertrust.cmj.af.fileregister.file.FrFileEx);
importClass(Packages.ru.intertrust.cmj.af.fileregister.file.FrFile.EFileType);
importClass(Packages.ru.intertrust.cmj.af.fileregister.FileRegisterApplicationImpl);
importClass(Packages.ru.intertrust.cmj.af.fileregister.FileRegisterApplication);
importClass(Packages.ru.intertrust.cmj.af.tuning.impl.CEHHttpStatusException);
importClass(Packages.ru.intertrust.cmj.af.misc.AFDate);
importClass(Packages.org.springframework.util.StringUtils);
importClass(Packages.ru.intertrust.cmj.af.core.AFCMDomino);
importClass(Packages.ru.intertrust.cmj.af.history.FieldBase);

function querySave(object, document) {
    if (object instanceof FrFile) {
        computeIndexFile(object);

        var frFileEx = object.getFrFileEx();
        var securityStamp = frFileEx.getSecurityStamp();
		var notExist = frFileEx.isNotExist();
		var canChangeNotExist = false;
		var isReserved = frFileEx.isResrved();

        if (!isReserved) {
            var titleFile = object.getTitleFile();
            if (titleFile == null || titleFile.isEmpty()) {
                throw "Заполните заголовок.";
            }
        }

		if (!object.isNew()) {
			if ("FORMED".equals(object.getStatusGeneral().toString())) {
				if (object.getStatusExtended() == null) {
					if (AFCMDomino.getDocByUNID(object.getUNID()).getParentDatabase().getView("(doc_from_fr)").getAllDocumentsByKey(AFCMDomino.ormUNIDToCMFullUNID(AFCMDomino.getDocByUNID(object.getUNID()).getUniversalID())[0]).getCount() == 0) {
						var parents = AFSession.get().getApplication(FileRegisterApplicationImpl.class).getUnitRegistersByFileId(object.getUNID());
						var parentsStatusesGeneral = new ArrayList();
						for each (var p in parents) {
							parentsStatusesGeneral.add(p.getStatusGeneral().toString());
						}
						if (parentsStatusesGeneral.contains("NOT_ACTIVE") || !parentsStatusesGeneral.contains("ACTIVE")) {
							canChangeNotExist = true;
						}
					}
				}
			}
			if (frFileEx.getUNID() != null) {
			    var doc = AFCMDomino.getDocByUNID(frFileEx.getUNID()).getDocument();
                var secStamp = doc.getEntity().getAllFields().get("security_stamp_name");
                if (!StringUtils.isEmpty(secStamp) && StringUtils.isEmpty(securityStamp)) {
                    writeSecurityStampHistory(object);
                }
            }
		}

		if (notExist && !canChangeNotExist) {
			throw new CEHHttpStatusException(406, "Дело не может быть переведено в статус 'Не заводилось'. Проверьте, исключены ли из него все документы и истек ли срок действия сводной номенклатуры дел, в которую оно включено.");
		}
        if(object.tuning()!= null && object.tuning().getValues()!= null) {
          var editSecurityStampField = securityStamp != null && securityStamp != "" ? "No" : "Yes";
          object.tuning().getValues().put("editSecurityStampField",TuningHelper.createPropertyValue(editSecurityStampField, object.tuning().getSchema().getProperty("editSecurityStampField")));
        }
        if (StringUtils.isEmpty(securityStamp) && !StringUtils.isEmpty(document.getItemValueString("security_stamp_name"))) {
            var needGrifWarning = true;
            if (needGrifWarning) {
              var reasonWithdraw = TunableObjectHelper.getAFInstanceTypedValue(object.tuning(), "docReasonWithdrawlObj.description");
              needGrifWarning = reasonWithdraw==null || reasonWithdraw=="" || reasonWithdraw=="null";
            }
            if (needGrifWarning) {
              throw "Для удаления грифа доступа воспользуйтесь кнопкой \"Снять гриф доступа\".";
            }
        }
        if (isReserved) {
                object.setTitleFile("Резервное");
                frFileEx.setResrved(true);
                object.setStoragePeriod("");
                object.setSpDescription("");
                object.setHasCopies(false);
                object.setSpdPeriodInfo(null);
                frFileEx.setStorage("");
                frFileEx.setAssigners(null);
                frFileEx.setNdFormat("");
                object.setIndexSuffix("");
                frFileEx.setDateOfBeginningType(FrFile.StorageDateType.YEAR);
                frFileEx.setDateOfEndType(FrFile.StorageDateType.YEAR);
                object.setDateOfBegining(null);
                object.setDateOfEnd(null);
                frFileEx.setDateYear(null);
                frFileEx.setMovable(false);
                frFileEx.setOutOfSystem(false);
                frFileEx.setOutOfSystem(false);
                frFileEx.setNotExist(false);
        }
	}
    return true;
}

function postSave(object, document) {
    if (object instanceof FrFile) {
        var frFileEx = object.getFrFileEx();
        if (frFileEx.isNotExist() && object.getStatusGeneral().equals(FrFile.StatusGeneral.FORMED)) {
            AFCMDomino.replaceItemValue(document, "StatusGeneral", "NOT_STARTED");
			document.save();
        } else if (frFileEx.isResrved()) {
			AFCMDomino.replaceItemValue(document, "StatusGeneral", "RESERVED");
			document.save();
        }
    }
}

function recalc(object, changedField) {
    if (changedField == 'isReserved') {
        var isReserved = TunableObjectHelper.getAFInstanceValue(object.tuning().getValues().get("isReserved"));
        object.getFrFileEx().setResrved(isReserved);
    }

	var eFile = object.iseFile();

	if (eFile != null && "DIGITAL".equals(eFile.toString())) {
        object.getFrFileEx().setCountTomeSections("1");
    }

    if (object instanceof FrFile) {
        if (changedField == 'periodInfo') {
            if (object.getSpdPeriodInfo() == null) {
                TunableObjectHelper.putAFInstanceValue(object.tuning(), "periodInfoIsEmpty", true);
            } else {
                TunableObjectHelper.putAFInstanceValue(object.tuning(), "periodInfoIsEmpty", false);
            }
        }
        if (changedField == 'addLinkedDocGrif') {
            var values = object.tuning().getValues();
            var addLinkedDoc = values.get('addLinkedDocGrif');
            var ids = addLinkedDoc.getValues().get("ids") != null? addLinkedDoc.getValues().get("ids").getValues(): null;
            var docGrifUnid = (ids==null || ids.isEmpty())?null:getIdFromHref(ids.get(0).getValue());
            var docGrifSubject = null;
            var docGrifType = null;
            var docGrifRegDate = null;
            var docGrifRNum = null;
            if (docGrifUnid!=null && !docGrifUnid.equals("")) {
                var appdp = AFSession.get().getApplication(DPApplication.class);
                var grifRkk = appdp.getEntityByUNID(docGrifUnid);
                docGrifSubject = grifRkk.getSubject();
                docGrifType = grifRkk.getType();
                docGrifRNum = grifRkk.registration().getRegisteredInfo().getNumber().toString();
                docGrifRegDate = AFDate.fromJavaDate(grifRkk.registration().getDate()).toString();
            } else {
                // ручной ввод реквизитов
                var manDoc = addLinkedDoc.getValues().get("manualDoc");
                docGrifSubject = TunableObjectHelper.getAFInstanceTypedValue(manDoc, "subject");
                docGrifType = TunableObjectHelper.getAFInstanceTypedValue(manDoc, "docInfo");
            }
            if ((docGrifUnid!=null && docGrifUnid!="") || (docGrifType!=null && docGrifType!="")){
                TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.id", docGrifUnid);
                TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.docType", docGrifType);
                TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.subject", docGrifSubject);
                TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.docNumber", docGrifRNum);
                TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.regDate", docGrifRegDate);
                TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.withdrawStampReasonText", null);
                object.getFrFileEx().setSecurityStamp("");
            }
            TunableObjectHelper.putAFInstanceValue(object.tuning(), "addLinkedDocGrif", null);
        }

        if(changedField=='docReasonWithdrawlObj.withdrawStampReasonText') {
            TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.id", null);
            TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.docType", null);
            TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.subject", null);
            TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.docNumber", null);
            TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.regDate", null);
            object.getFrFileEx().setSecurityStamp("");
        }
    }
}

function getIdFromHref(href) {
    var index = href.lastIndexOf("/", href.length())+1;
	if (index < 0) {
		return href;
	} else {
		return href.substring(index);
	}
}

function writeSecurityStampHistory(object) {
    var histMessage;
    var withdrawStampReasonText;
    var withdrawDoc;
    var reasonObj = object.tuning().getValues().get("docReasonWithdrawlObj");
    if (reasonObj != null) {
        var reason = reasonObj.getValues().get("withdrawStampReasonText")
        var descr = reasonObj.getValues().get("description");

        if (reason != null) {
            withdrawStampReasonText = reason.getValue();
        } else if (descr != null) {
            withdrawDoc = descr.getValue();
        }
        histMessage = (withdrawStampReasonText != null) ? "Гриф снят. Причина: "
                        + withdrawStampReasonText
                        : (withdrawDoc == null || withdrawDoc.isEmpty()) ? ""
                        : "Гриф снят. Основание - " + withdrawDoc;
    }

    var dx = object.history().getRecord(FieldBase.RKK_GRIF_WITHDRAW);
    dx.update(histMessage, null, object.getUNID());
}

function queryCreate(object){
    if (object instanceof FrFile) {
        var parent = object.tuning().getRelatedLinkObjects().get("parent");
        if (parent!=null) {
           object.setOrganization(parent.getOrganization());
           object.setBranchDivision(parent.getBranchDivision());
           object.setSoUnit(parent.getSoUnit());

           var frApp = AFSession.get().getApplication(FileRegisterApplication.class);
           var indexNum = frApp.getNextFileIndexNum(parent.getUNID(), 1, false).get(0);
           var frSetting = frApp.findFileSettingByOrgId(object.getOrganization().getUNID());
           object.setSpdUsed(frSetting != null && frSetting.getSpdUsedFile());
           TunableObjectHelper.putAFInstanceValue(object.tuning(), "indexPrefix", parent.getIndex());
           TunableObjectHelper.putAFInstanceValue(object.tuning(), "indexNum", padLeadingZeros(indexNum, frSetting != null ? frSetting.getNumOfSignsFile() : 3));
           TunableObjectHelper.putAFInstanceValue(object.tuning(), "separatorPref", frSetting != null ? frSetting.getPrefixSplitterFile() : "-");
           TunableObjectHelper.putAFInstanceValue(object.tuning(), "separatorSuff", frSetting != null ? frSetting.getSuffixSplitterFile() : "-");
           computeIndexFile(object);
           object.getFrFileEx().setElectronic(true);
        }
    }
}

function getTuningFieldValue(source, sourceFieldName) {
   var tuningVal = source.tuning().getValues().get(sourceFieldName);
    if (tuningVal==null) {
        return null;
    }
   return tuningVal.getValue()
}

function copyTuningField(source, target, sourceFieldName, targetFieldName) {
    var tuningVal = source.tuning().getValues().get(sourceFieldName);
    if (tuningVal==null) {
        return;
    }
    target.tuning().put(targetFieldName,
           TuningHelper.createPropertyValue(tuningVal.getValue(),
                target.tuning().getSchema().getProperty(targetFieldName)));
}

function padLeadingZeros(num, size) {
    var s = num + "";
    while (s. length < size) s = "0" + s;
    return s;
}

function computeIndexFile(object){
    var updated = false;
    var values = object.tuning().getValues();
    var str = object.getIndexPrefix();
    var nextVal = object.getSeparatorPref();
    str += nextVal == null ? "" : nextVal;
    nextVal = object.getIndexNum();
    str += nextVal == null ? "" : nextVal;
    var suff = object.getIndexSuffix();
    if (suff!=null && suff!="") {
        str += object.getSeparatorSuff();
        str += suff;
    }
    if (object.getIndexFile() != str) {
        object.setIndexFile(str);
        updated = true;
    }
    return updated;
}
]]></custom-event-handler>
    </schema>
</schemas>