<?xml version='1.0' encoding='UTF-8'?>
<schemas xmlns="http://www.intertrust.ru/schema/palette/tn-schema">
  <schema extends="SOTNObject" name="SODepartment">
    <meta>
      <category name="РМ Администратора"/>
    </meta>
    <boolean name="IsUseArchiveModule" temporal="true" computed="true">
      <calc-values>
        <script event="open" lang="SPEL">
          <![CDATA[T(ru.intertrust.cmj.af.core.AFCMDomino).getDbInfoByIdentNear("FileRegister", T(ru.intertrust.cmj.af.core.AFSession).get().currentUser().getCurrentSoReplica())?.useArchiveModule]]>
        </script>
      </calc-values>
    </boolean>
    <string name="fillCases" temporal="true">
      <recalc-processing-class>ru.intertrust.cmj.rest.admin.so.department.RecalcForChangeDepartmentFillCases</recalc-processing-class>
    </string>
    <string name="emptyField" temporal="true">
      <storage-field name="incontrol"/>
    </string>
    <string array="true" name="afScanFiels" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[{"Met", "GDBaseName", "GroupZam_My_Beards", "EShortName", "AllIDs", "GroupZam", "ZamAudit", "OName", "EKNumber", "EPhone", "DocID",
"RPA_Input_GDs", "RPA_Output_GDs", "RPA_Internal_GDs", "RPA_ORD_GDs", "RPA_Contracts_GDs", "RPA_Requests_GDs", "GroupInput","GroupOutput", "GroupInternal", "GroupORD", "GroupContracts", "GroupRequests", "InputSW", "OutputSW", "InternSW", "ORDSW", "ContractsSW", "RequestsSW", "EPost", "ParentShortName", "EFullName", "OName_L10n", "OName_1_L10n", "OGRN"}]]></script>
      </calc-values>
    </string>
    <string name="nameInfo" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[(fullname!=null  ? fullname : '') + ( (shortname!=null && shortname!=fullname)  ? (' ('+shortname+') ') : '')]]></script>
      </calc-values>
    </string>
    <hyperlink name="selfHyperLink" createlog="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[T(ru.intertrust.cmj.af.misc.HyperLink).createHyperLink('Открыть карточку в новой вкладке' +'~#'+T(ru.intertrust.cmj.ws.base.servlet.ServletUrlHolder).getServerUrlStr() +link.?[rel=='self'].get(0).href+'~#newTab~#local')]]></script>
      </calc-values>
    </hyperlink>
    <string name="headInfo" temporal="true"/>
    <string name="country">
      <storage-field name="OCountry"/>
    </string>
    <string name="empty_systname" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['']]></script>
      </calc-values>
    </string>
    <string name="empty" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['']]></script>
      </calc-values>
    </string>
    <boolean name="isAf5Storage" temporal="true"/>
    <string name="refreshNoticeReceivers" temporal="true">
      <recalc-processing-class>ru.intertrust.cmj.rest.admin.so.department.RecalcForChangeZamDepartment</recalc-processing-class>
    </string>
    <string name="basedocid" temporal="true"/>
    <string name="newParent" temporal="true"/>
    <string name="rang" system="true">
      <storage-field name="rang"/>
    </string>
    <string name="depType" createlog="true">
      <recalc-processing-class>ru.intertrust.cmj.rest.admin.so.department.RecalcForChangeDepartmentRang</recalc-processing-class>
      <storage-field name="DepType"/>
    </string>
    <string name="fullname">
      <storage-field name="OName"/>
    </string>
    <boolean name="IsGAS" createlog="true">
      <storage-field name="IsGAS"/>
      <storage-string value="1"/>
    </boolean>
    <schema-ref ref="AddressSOUnit" array="true" name="addressList" createlog="true" temporal="true">
      <recalc-processing-class>ru.intertrust.cmj.rest.admin.so.RecalcAddressList</recalc-processing-class>
    </schema-ref>
    <schema-ref ref="AdminSOUnit" array="true" name="noticeReceived" temporal="true"/>
    <schema-ref ref="NameList" name="hist_audit" temporal="true"/>
    <schema-ref ref="NameList" name="hist_zam" temporal="true"/>
    <schema-ref ref="NameList" name="hist_zam_temp" temporal="true"/>
    <schema-ref ref="ClientContext_SaveWithDialogSOStruct" name="$clientContext" system="true" createlog="true" temporal="true"/>
    <schema-ref ref="AdminSOUnit" array="true" name="parentUnitsList" temporal="true"/>
    <schema-ref ref="AdminSOUnit" array="true" name="systemEditors" createlog="true" temporal="true"/>
    <string name="region">
      <storage-field name="ORegion"/>
    </string>
    <string name="office">
      <storage-field name="Addr_Office"/>
    </string>
    <string name="housing">
      <storage-field name="Addr_Build"/>
    </string>
    <string name="house">
      <storage-field name="Addr_House"/>
    </string>
    <string name="sendIndex">
      <storage-field name="Addr_ZipCode"/>
    </string>
    <string name="city">
      <storage-field name="Addr_City"/>
    </string>
    <string name="street">
      <storage-field name="Addr_Street"/>
    </string>
    <string name="shortname">
      <storage-field name="OName_1"/>
    </string>
    <string name="codedep">
      <storage-field name="Index"/>
      <recalc-processing-class>ru.intertrust.cmj.rest.admin.so.RecalcForChangeCodeDepFields</recalc-processing-class>
    </string>
    <boolean name="hasCodeDep" temporal="true" computed="true">
      <calc-values>
        <script event="open" lang="SPEL">
          <![CDATA[codedep != null && codedep != '']]>
        </script>
      </calc-values>
    </boolean>
    <boolean name="iscodeni">
      <storage-field name="AsClass"/>
      <storage-string value="1"/>
      <recalc-processing-class>ru.intertrust.cmj.rest.admin.so.RecalcForChangeCodeDepFields</recalc-processing-class>
    </boolean>
    <string name="parentHierarchy" temporal="true"/>
    <schema-ref ref="NameListClerk" name="hist_clerk" temporal="true"/>
    <schema-ref null-empty="true" ref="AdminSOUnit" name="delegate_beard" temporal="true"/>
    <boolean name="selfunit" system="true" temporal="true">
      <storage-string value="1"/>
    </boolean>
    <boolean name="separateunit" system="true" temporal="true">
      <storage-string value="1"/>
    </boolean>
    <boolean name="legalentity" system="true" temporal="true">
      <storage-string value="1"/>
    </boolean>
    <string name="description" createlog="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Подразделение ']]></script>
      </calc-values>
    </string>
    <string name="area">
      <storage-field name="HomeNet"/>
    </string>
    <string computed="true" name="emptyRow">
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA[""]]></script>
      </calc-values>
    </string>
    <boolean name="notauto">
      <storage-field name="ProtectFromSignal"/>
      <storage-string value="1"/>
    </boolean>
    <string name="worksfor" system="true" createlog="true" temporal="true"/>
    <string name="WorksForRegistration" system="true" createlog="true" temporal="true"/>
    <schema-ref null-empty="true" ref="WorkTimeProfile" name="WorkingProfile"/>
    <schema-ref null-empty="true" ref="AdminSOUnit" name="receiving" temporal="true"/>
    <schema-ref ref="SystemGroup" name="systemGroup" temporal="true"/>
    <schema-ref ref="SystemNameForDepartment" name="systemName" temporal="true"/>
    <schema-ref ref="Notification" name="notification" temporal="true"/>
    <schema-ref ref="DescriptionCases" name="case"/>
    <schema-ref ref="LocalDepartment" array="true" name="local"/>
    <string name="tmpDelegateUnid" temporal="true"/>
    <string name="guidccty">
      <storage-field name="SSTUGUID"/>
    </string>
    <string name="phone">
      <storage-field name="EPhone"/>
    </string>
    <string name="fax">
      <storage-field name="Fax"/>
    </string>
    <string name="email">
      <storage-field name="EMail"/>
    </string>
    <string name="site">
      <storage-field name="Telex"/>
    </string>
    <string name="okved">
      <storage-field name="COKONH"/>
    </string>
    <string name="okato">
      <storage-field name="OKATO"/>
    </string>
    <string name="check">
      <storage-field name="CCountR"/>
    </string>
    <string name="delegatingTitle" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['При удалении дела передаются:']]></script>
      </calc-values>
    </string>
    <string name="bankname">
      <storage-field name="CBank"/>
    </string>
    <string name="bikbank">
      <storage-field name="CBIK"/>
    </string>
    <string name="ccheck">
      <storage-field name="CCountCor"/>
    </string>
    <string name="GDBaseName">
      <storage-field name="GDBaseName"/>
    </string>
    <boolean name="isSharedAccessDep">
      <storage-field name="isSharedAccessDep"/>
    </boolean>
    <schema-ref ref="AddressUnit" array="true" name="address" temporal="true"/>
    <string name="$parentunid" temporal="true"/>
    <string name="structLevel">
      <storage-field name="StructLevel"/>
    </string>
    <string name="parentShortName" system="true">
      <storage-field name="ParentShortName"/>
    </string>
    <string name="personalID" system="true">
      <storage-field name="personalID"/>
    </string>
    <schema-ref null-empty="true" ref="AdminSOUnit" name="organizationUnit" system="true" temporal="true"/>
    <string name="depName" createlog="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[nameInfo+(codedep!=null  ? (' ('+codedep+')') : '')]]></script>
      </calc-values>
    </string>
    <boolean name="isEqualDepNames" createlog="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[shortname !=null && fullname !=null && shortname.equals(fullname) ? true : false]]></script>
      </calc-values>
    </boolean>
    <string name="labelBankRequizits" createlog="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Банковские реквизиты']]></script>
      </calc-values>
    </string>
    <string name="labelAddress" createlog="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Адрес']]></script>
      </calc-values>
    </string>
    <string name="labelContacts" createlog="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Контактные данные']]></script>
      </calc-values>
    </string>
    <string name="chiefTabNumber" createlog="true">
      <storage-field name="chiefTabNumber"/>
    </string>
    <schema-ref null-empty="true" ref="AdminSOUnit" name="isolatedDep" createlog="true" temporal="true"/>
    <string name="headInfoWithPost" createlog="true" temporal="true"/>
    <string name="nomenclatureIndex" createlog="true">
      <storage-field name="nomenclatureIndex"/>
    </string>
    <string name="nomenclatureIndexPrefix">
      <storage-field name="nomenclatureIndexPrefix"/>
    </string>
    <boolean name="inheritNomIndex" default-value="false">
      <storage-field name="inheritNomIndex"/>
      <recalc-processing-class>ru.intertrust.cmj.rest.fileregister.filesetting.RecalcForInheritNomIndex</recalc-processing-class>
    </boolean>
    <string name="ndSeparate1">
      <storage-field name="ndSeparate1"/>
    </string>
    <string name="nomenclatureIndexReadMode" computed="true">
      <storage-field name="nomenclatureIndexReadMode"/>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[(inheritNomIndex == true && nomenclatureIndexPrefix != null && nomenclatureIndexPrefix != '' ? (nomenclatureIndexPrefix + ' ' + (ndSeparate1 == null ? '' : ndSeparate1) + ' ') : '') + (nomenclatureIndex != null ? nomenclatureIndex : '')]]></script>
        <script event="save" lang="SPEL"><![CDATA[(inheritNomIndex == true && nomenclatureIndexPrefix != null && nomenclatureIndexPrefix != '' ? (nomenclatureIndexPrefix + ' ' + (ndSeparate1 == null ? '' : ndSeparate1) + ' ') : '') + (nomenclatureIndex != null ? nomenclatureIndex : '')]]></script>
      </calc-values>
    </string>
    <string name="comment" createlog="true">
      <storage-field name="comment"/>
    </string>
    <boolean name="hasNDO" default-value="false">
      <storage-field name="hasNDO"/>
    </boolean>
    <boolean name="hasAnotherDepNd" default-value="false">
      <storage-field name="hasAnotherDepNd"/>
    </boolean>
    <schema-ref null-empty="true" ref="AdminSOUnit" name="anotherDepNdUnit" createlog="true" temporal="true"/>
    <schema-ref ref="AdminSOUnit" array="true" name="formerNDPUnit" temporal="true"/>
    <schema-ref ref="AdminSOUnit" array="true" name="responsibleNdUnit" temporal="true"/>
    <string name="structBossAC" createlog="true">
      <storage-field name="struct_boss_ac"/>
    </string>
    <string array="true" name="AddedTempSubsNoticeReceivers" system="true" temporal="true"/>
    <string array="true" name="DeletedTempSubsNoticeReceivers" system="true" temporal="true"/>
    <schema-ref null-empty="true" ref="AdminSOUnit" name="delegatedTo" temporal="true"/>
    <boolean name="hasHrModule" createlog="true" temporal="true"/>
    <schema-ref null-empty="true" ref="AdminSOUnit" name="curator" createlog="true" temporal="true"/>
    <boolean name="isHeadOfficeOrRegionalBranch" createlog="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[depType != null && ('го: головной офис'.equalsIgnoreCase(depType) || 'рф: региональный филиал'.equalsIgnoreCase(depType))]]></script>
      </calc-values>
    </boolean>
    <string name="reasonSubstitution" >
      <storage-field name="reasonSubstitution"/>
    </string>
    <schema-ref name="russianPostTable" ref="PostTable" null-empty="true" array="true"/>
    <schema-ref null-empty="true" ref="AdminSOUnit" name="parentUnit" temporal="true">
      <recalc-processing-class>ru.intertrust.cmj.rest.admin.so.RecalcForChangeParentUnit</recalc-processing-class>
    </schema-ref>
    <string name="selfOrSeparLabel" createlog="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[(separateunit!=null && separateunit) ? 'Обособленное ' : ((selfunit!=null && selfunit) ? 'Самостоятельное ' : '')]]></script>
      </calc-values>
    </string>
    <string name="codeDepLabel" createlog="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[codedep!=null  ? ('Код: ' + codedep ) : '']]></script>
      </calc-values>
    </string>
    <string name="ogrn" createlog="true">
      <storage-field name="OGRN" />
      <validate>
        <regex>^([0-9]{13}|[0-9]{15})?$</regex>
        <message locale="ru">Допустимый формат - 13 арабских цифр без разделителей</message>
      </validate>
    </string>
    <string name="medoGuid">
      <storage-field name="MedoGuid"/>
    </string>
    <boolean name="hasMedoGuid" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[medoGuid != null && !''.equals(medoGuid)]]></script>
      </calc-values>
    </boolean>
    <string name="operatorMedoGuid">
      <storage-field name="OperatorMedoGuid"/>
    </string>
    <integer name="medoTransferStatus">
      <storage-field name="TransferStatus"/>
      <default-values>
        <default-value>0</default-value>
      </default-values>
    </integer>
    <string name="medoTransferResponse">
      <storage-field name="TransferResponse"/>
    </string>
    <string name="medoTransferResponseWithStatus" temporal="true">
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA[medoTransferStatus == 3 ? 'Запрос принят' : medoTransferStatus == 2 ? 'Запрос отклонен: ' + medoTransferResponse : '']]></script>
      </calc-values>
    </string>
    <custom-event-handler lang="JavaScript"><![CDATA[importClass(Packages.java.lang.System);
importPackage(Packages.java.lang);
importPackage(Packages.java.util);
importPackage(Packages.ru.intertrust.cmj.af.so);
importPackage(Packages.ru.intertrust.cmj.rest.tuning);
importClass(Packages.ru.intertrust.cmj.rest.tuning.TuningHelper);
importClass(Packages.ru.intertrust.cmj.af.so.SOBeard);
importClass(Packages.ru.intertrust.cmj.af.core.AFSession);
importClass(Packages.ru.intertrust.cmj.af.core.AFCMDomino);
importClass(Packages.org.apache.commons.lang3.StringUtils);
importClass(Packages.java.lang.String);
importClass(Packages.ru.intertrust.cmj.af.so.impl.DepartmentUnit);
importClass(Packages.ru.intertrust.cmj.tunable.object.TunableObjectApplication);
importClass(Packages.ru.intertrust.cmj.af.utils.DominoUtils);
importClass(Packages.ru.intertrust.cmj.af.so.impl.AppointmentHead);
importClass(Packages.ru.intertrust.cmj.af.utils.BeansUtils);
importClass(Packages.ru.intertrust.cmj.admin.AdminApplicationImpl);
importClass(Packages.ru.intertrust.cmj.admin.so.worktimeprofile.SOWorkTimeProfile);
importClass(Packages.java.util.Calendar);
importClass(Packages.java.util.Date);
importClass(Packages.java.util.ArrayList);
importClass(Packages.java.lang.Integer);
importClass(Packages.ru.intertrust.cmj.tunable.object.history.TunableHistoryHelper);
importClass(Packages.ru.intertrust.cmj.af.history.FieldBase);
importClass(Packages.ru.intertrust.cmj.af.history.HasHistory);
importClass(Packages.ru.intertrust.cmj.tunable.object.common.TunableObjectHelper);

function querySave(object, document) {
    writeHistory(object, document);
}

function writeHistory(object, document) {

    var hist = object.history();
    if (!object.isNew()) {
        writeTextHistory(object, document, hist, "reasonSubstitution", "reasonSubstitution", "reasonsubstitution.created");
    }
    object.history = hist;
}

function writeTextHistory(object, document, hist, fieldName, propertyName, eventName) {
    var oldValue = getFieldValue(document, fieldName);
    var newValue = getPropertyValue(object, propertyName);

    if (!oldValue.equals(newValue)) {
        TunableHistoryHelper.hist_addTextOne(hist, eventName, oldValue, newValue);
    }
}

function getFieldValue(document, fieldName) {
    var value = null;
    if (document != null) {
        value = document.getItemValueString(fieldName);
    }
    return value != null ? value : "";
}

function getPropertyValue(object, propertyName) {
    var value = null;
    if (object != null && object.tuning().getValues().get(propertyName) != null && object.tuning().getValues().get(propertyName).getValue() != null) {
        value = object.tuning().getValues().get(propertyName).getValue();
    }
    return value != null ? value : "";
}

function recalc(object, changedField) {

    if (changedField == "depType") {
		 if (object.tuning().getValues().get('depType') != null && object.tuning().getValues().get('depType').getValue() != null) {
          		var depType = object.tuning().getValues().get('depType').getValue();
						if (!"го: головной офис".equalsIgnoreCase(depType) || !"рф: региональный филиал".equalsIgnoreCase(depType)){
							object.tuning().getValues().put("systemEditors", null);
						}

        }
    }

    if ("separateunit".equals(changedField)) {
        var separateunit = object.tuning().getValues().get("separateunit").value;
        object.tuning().getValues().put("isSharedAccessDep", TuningHelper.createPropertyValue(separateunit, object.tuning().getSchema().getProperty("isSharedAccessDep")));
        if (!separateunit) {
           TunableObjectHelper.putAFInstanceValue(object.tuning(), "hasNDO", false);
        }


    }

    if ("codedep".equals(changedField)) {
		 if (object.tuning().getValues().get('codedep') != null && object.tuning().getValues().get('codedep').getValue() != null) {
          		var codedep = object.tuning().getValues().get('codedep').getValue();
						if ("".equalsIgnoreCase(codedep)){
						    object.tuning().getValues().put("iscodeni", TuningHelper.createPropertyValue(false, object.tuning().getSchema().getProperty("iscodeni")));
						}

        }
    }
}
]]></custom-event-handler>
  </schema>
</schemas>