<?xml version='1.0' encoding='UTF-8'?>
<schemas xmlns="http://www.intertrust.ru/schema/palette/tn-schema">
  <schema recalc="true" extends="Actions" name="AgreementResource">
    <meta>
      <category name="Система\Договоры"/>
    </meta>
    <string array="true" name="category" system="true"/>
    <boolean name="tagsEmpty" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[tags==null || tags.isEmpty()]]></script>
      </calc-values>
    </boolean>
    <schema-ref ref="RegistrationInfo_Contracts" name="regInfo" system="true"/>
    <schema-ref ref="SignatureInfoContractsAgreement" name="signatureContracts" system="true"/>
    <string name="subject" system="true"/>
    <date name="started" system="true"/>
    <date name="finished" system="true"/>
    <string name="duration" system="true"/>
    <actor array="true" name="preparedBy" system="true"/>
    <actor array="true" name="responsibles" system="true"/>
    <actor array="true" name="sendlist" system="true"/>
    <actor name="f_read_allowbyctx" array="true" computed="true" >
      <calc-values>
        <script event="save" lang="SPEL"><![CDATA[#joinCols(#toCol(signatureContracts?.ours?.signer), signatureContracts?.ours?.signers?.?[#this != null]?.![signer], responsibles)]]></script>
      </calc-values>
    </actor>
    <string name="copies" system="true"/>
    <string name="pages" system="true"/>
    <string name="pagename" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Доп. соглашение № ' + regInfo.number]]></script>
      </calc-values>
    </string>
    <boolean name="isPersonal" system="true" createlog="true"/>

    <string name="appendices" system="true"/>
    <string name="appendicesPages" system="true"/>
    <string name="$contract" system="true"/>
    <schema-ref ref="ContractValue" name="value" system="true"/>
    <boolean name="isNotEmptyValueTotal" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[value.total != null ? true : false]]></script>
      </calc-values>
    </boolean>
    <string name="$paymentTable" system="true"/>
    <string name="objectType" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Дополнительное соглашение']]></script>
      </calc-values>
    </string>
    <string name="$tagsHeader" system="true" temporal="true"/>
    <string name="$approvStatusInfo" system="true"/>
    <string name="$signStatusInfo" system="true"/>
    <string name="$reviewStatusInfo" system="true" temporal="true"/>
    <string name="$certifiedStatusInfo" system="true" temporal="true"/>
    <string name="$regStatusInfo" system="true" temporal="true"/>
    <string name="$titleHeader" system="true"/>
    <schema-ref ref="ShowRegInfoAddAgr" name="showRegInfo" temporal="true"/>
    <string name="completed" system="true"/>
    <enum-ref ref="DogStatus" name="status" system="true"/>
    <boolean name="$canFillFiles" createlog="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[(signatureContracts.ours.state == null || !'sent'.equals(signatureContracts.ours.state.status) && !'signed'.equals(signatureContracts.ours.state.status)) && apre == null && link.?[rel=='http://intertrust.ru/cmj/relations#save.and.fill.files'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <string name="$preparationStatusInfo" system="true"/>
    <string array="true" name="tags" system="true"/>
    <boolean name="disableLinkAccess" system="true"/>
    <string name="approvingTemplateId" system="true" createlog="true"/>
    <string name="$id" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[id]]></script>
      </calc-values>
    </string>
    <string name="dialogueCommentReg" createlog="true">
      <storage-field name="dialogueCommentReg"/>
    </string>
    <string name="dialogueComment" createlog="true">
      <storage-field name="dialogueComment"/>
    </string>
      <boolean name="isSignedOrOnSign" createlog="true" temporal="true">
          <calc-values>
              <script event="open" lang="SPEL"><![CDATA[!"sent".equals(signatureContracts?.ours?.state?.status) && !"signed".equals(signatureContracts?.ours?.state?.status)]]></script>
          </calc-values>
      </boolean>
    <boolean default-value="false" temporal="true" system="true" name="hasParentGriff">
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA[hasParentGriff==true]]></script>
      </calc-values>
    </boolean>
    <boolean name="isNew" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[isNew==true]]></script>
      </calc-values>
    </boolean>
    <string name="securityStamp" system="true" createlog="true"/>
    <boolean name="supportSecurityStamp" system="true" createlog="true" temporal="true"/>
    <boolean name="showSecurityStampField" createlog="true" temporal="true">
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA[(securityStamp != null && securityStamp != "") || (docReasonWithdrawlObj != null && docReasonWithdrawlObj.id != null && (securityStamp == null || securityStamp == '')) || (supportSecurityStamp) || ( isNew && T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'DOPName') && T(ru.intertrust.cmj.af.utils.BeansUtils).getBean('securityStampImpl').isSupportSecurityStamp(DOPName) && T(ru.intertrust.cmj.af.core.AFCMDomino).getDbInfoByReplicaID(id.substring(0,16)).usedSecurityStamp)]]></script>
      </calc-values>
    </boolean>
    <string name="PaperDocNumbers" createlog="true">
      <storage-field name="paperDocNumbers"/>
    </string>
    <boolean name="securityStampIsNotEmpty" createlog="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[securityStamp != null && securityStamp != '']]></script>
      </calc-values>
    </boolean>
    <string array="true" temporal="true" name="personGrifs">
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA[T(ru.intertrust.cmj.af.core.AFSession).get().currentUser().getPerson().getPersonStampGrifs()]]></script>
      </calc-values>
    </string>
    <string computed="true" createlog="true" name="editSecurityStampField">
      <storage-field name="editSecurityStampField"/>
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA[(editSecurityStampField == null || editSecurityStampField == '') ? (securityStampIsNotEmpty ? 'No' : 'Yes') : editSecurityStampField]]></script>
      </calc-values>
    </string>
    <string computed="true" createlog="true" name="docReasonWithdrawal">
      <storage-field name="docReasonWithdrawal" />
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA[(docReasonWithdrawlObj != null && docReasonWithdrawlObj.id != null && (securityStamp == null || securityStamp == '')) ? (((docReasonWithdrawlObj.docNumber != null && docReasonWithdrawlObj.docNumber != '') ? '№:' + docReasonWithdrawlObj.docNumber : '') + (docReasonWithdrawlObj.regDate != null ? ' от ' + docReasonWithdrawlObj.regDate : '')) : '']]></script>
      </calc-values>
    </string>
    <schema-ref null-empty="true" ref="ReasonDoc" createlog="true" name="docReasonWithdrawlObj" />
    <string computed="true" temporal="true" name="securityStampText">
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA[(docReasonWithdrawlObj != null && docReasonWithdrawlObj.id != null && (securityStamp == null || securityStamp == '')) ? 'Гриф снят' : securityStamp]]></script>
      </calc-values>
    </string>
    <boolean default-value="false" temporal="true" name="docReasonWithdrawalIsView">
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA[(docReasonWithdrawlObj != null && docReasonWithdrawlObj.id != null && (securityStamp == null || securityStamp == ''))]]></script>
      </calc-values>
    </boolean>
    <string name="$signersTitle" system="true" temporal="true"/>
    <boolean name="hasMultipleSigners" system="true" temporal="true">
      <calc-values>
        <script event="open">
          <![CDATA[signatureContracts != null && !(signatureContracts.signingMode == T(ru.intertrust.cmj.af.core.SigningMode).STD)]]>
        </script>
      </calc-values>
    </boolean>
    <schema-ref ref="ContractAttributes" name="contractAttributes" system="true"/>
    <boolean name="$firstPartyIsCurrentOrg" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[contractAttributes != null && contractAttributes.party1 != null && contractAttributes.party1.id != null && (contractAttributes.party1.id.equals(T(ru.intertrust.cmj.af.core.AFSession).get().getCurrentOrganization().getBeard().getUNID()) || (T(ru.intertrust.cmj.af.so.SOBeard.Type).SYS_DEPARTMENT).equals( contractAttributes.party1.type))]]></script>
      </calc-values>
    </boolean>
    <string name="$secondPartySelectedType" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[contractAttributes != null && (contractAttributes.party2 == null || contractAttributes.party2.id.equals(T(ru.intertrust.cmj.af.core.AFSession).get().getCurrentOrganization().getBeard().getUNID())) ? "1" : (contractAttributes != null && contractAttributes.party2 != null && (T(ru.intertrust.cmj.af.so.SOBeard.Type).PRIVATE_HUMAN).equals( contractAttributes.party2.type)) ? "3" : "2"]]></script>
      </calc-values>
    </string>
    <boolean default-value="false" temporal="true" name="supportSecurityStampCalc">
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA[(supportSecurityStamp) || ( isNew && T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'DOPName') && T(ru.intertrust.cmj.af.utils.BeansUtils).getBean('securityStampImpl').isSupportSecurityStamp(DOPName) && T(ru.intertrust.cmj.af.core.AFCMDomino).getDbInfoByReplicaID(id.substring(0,16)).usedSecurityStamp)]]></script>
      </calc-values>
    </boolean>
    <string temporal="true" name="DOPName">
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA['F_DP_ContractRkk']]></script>
      </calc-values>
    </string>
    <actor name="signers" array="true" temporal="true">
      <calc-values>
        <script event="open"><![CDATA[T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'signatureContracts') && #this?.signatureContracts?.ours?.signers != null ? #this.signatureContracts.ours.signers.![signer] : null]]></script>
      </calc-values>
      <recalc-processing-class>ru.intertrust.cmj.rest.tuning.RecalcOnContractAddAgrSignerChangeEventHandler</recalc-processing-class>
    </actor>
    <string name="whoCancelCertifiedPIDTune" temporal="true">
      <storage-field name="WhoCancelCertifiedPID"/>
    </string>
    <boolean name="needAskNotifyVerify" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[(#this.whoCancelCertifiedPIDTune != null && !#this.whoCancelCertifiedPIDTune.isEmpty())]]>
        </script>
      </calc-values>
    </boolean>
    <boolean name="isHasLinkApprovingWithSign" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#hasApprovingWithSign'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <custom-event-handler lang="JavaScript"><![CDATA[
    importPackage(Packages.ru.intertrust.cmj.af.tuning.impl);
    importPackage(Packages.ru.intertrust.cmj.af.tuning);
    importPackage(Packages.ru.intertrust.cmj.rest.tuning);
    importClass(Packages.ru.intertrust.cmj.tunable.object.common.TunableObjectHelper);
    importClass(Packages.ru.intertrust.cmj.pkd.session.PkdSession);
    importClass(Packages.ru.intertrust.cmj.pkd.session.TaskChangeInfo);

    importClass(Packages.java.util.List);
    importClass(Packages.ru.intertrust.cmj.dp._stdimpl.dao.entity.rkk.full.RKKFRegistration);
    importClass(Packages.ru.intertrust.cmj.dp._stdimpl.dao.entity.rkk.full.RKKFRegistration.Operation.Recall);
    importClass(Packages.ru.intertrust.cmj.dp._stdimpl.operations.entity.rkk.full.RKKFRegistrationRegistrate);
    importClass(Packages.ru.intertrust.cmj.af.pkd.EventCode);

    function querySave(object, document) {

    if (object.tuning() != null && object.tuning().getValues() != null){
        var securityStamp = object.getSecurityStamp();
        var editSecurityStampField = securityStamp != null && securityStamp != "" ? "No" : "Yes";
        object.tuning().getValues().put("editSecurityStampField",TuningHelper.createPropertyValue(editSecurityStampField, object.tuning().getSchema().getProperty("editSecurityStampField")));
    }

    return true;
}

function postSave(object, document) {
	if (object.signing().wasUnSigned  ) {
        var to = RKKFRegistrationRegistrate.getDPs(object);
		if (!to.isEmpty()) {
        	new PkdSession().deleteEvent(to, EventCode.getByString("RGST1_11"), object);
	 	}
	}
}]]></custom-event-handler>
  </schema>
</schemas>