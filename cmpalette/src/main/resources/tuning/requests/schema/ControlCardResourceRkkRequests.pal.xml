<?xml version='1.0' encoding='UTF-8'?>
<schemas xmlns="http://www.intertrust.ru/schema/palette/tn-schema">
  <schema recalc="true" extends="ControlCardResource" name="ControlCardResourceRkkRequests">
    <meta>
      <category name="Система\Обращение граждан"/>
    </meta>
    <enum-ref ref="RequestsControlEnum" name="controltype" system="true"/>
    <boolean name="isRKKRegistered" system="true" createlog="true" temporal="true"/>
    <date name="rkkRDate" system="true" createlog="true" temporal="true"/>
    <custom-event-handler lang="JavaScript"><![CDATA[importPackage(Packages.ru.intertrust.cmj.dp); importPackage(Packages.ru.intertrust.cmj.af.utils); importPackage(Packages.ru.intertrust.cmj.rest.bf); importPackage(Packages.ru.intertrust.cmj.af.misc); importPackage(Packages.ru.intertrust.cmj.af.tuning.impl); importPackage(Packages.ru.intertrust.cmj.af.tuning); importPackage(Packages.ru.intertrust.cmj.rest.tuning); importPackage(Packages.java.util); function querySave(object, document) { } function recalc(rkk, changedField) { 

if(rkk.tuning().getValues().get("isRKKRegistered").getValue() == false) { 
	if(changedField=="controltype") { 
		if(rkk.tuning().getValues().get("controltype") !=null && rkk.tuning().getValues().get("controltype").getValue().toString()=="1"){ 
			var executionDurationSpec = ModuleID.REQUESTS.getModule().getRKKExecutionDurationSpecByDefault(rkk.getApplicationObjectType().getComplect().complect); 
			var resultTime = Calendar.getInstance();			
			var rkkRDate= rkk.tuning().getValues().get("rkkRDate").getValue(); 
			if (rkkRDate != null) {
				resultTime.setTime(rkkRDate.toJavaDate());				
				} 
				if (executionDurationSpec > 0) { 
					resultTime = CalendarUtils.adjustDayHolidays(resultTime, executionDurationSpec);
					} else {
					resultTime = CalendarUtils.adjustDayHolidays(resultTime, 15);
					} 
				var resultDate = new AFDate(resultTime); 
				rkk.tuning().getValues().put("deadline",TuningHelper.createPropertyValue(resultDate, rkk.tuning().getSchema().getProperty("deadline")));
		} else if(rkk.tuning().getValues().get("controltype") !=null && rkk.tuning().getValues().get("controltype").getValue().toString()=="2") { 
			var executionDuration = ModuleID.REQUESTS.getModule().getRKKExecutionDurationByDefault(rkk.getApplicationObjectType().getComplect().complect); 
			var resultTime = Calendar.getInstance();			
			var rkkRDate= rkk.tuning().getValues().get("rkkRDate").getValue(); 
			if (rkkRDate != null) {
				resultTime.setTime(rkkRDate.toJavaDate());				
				} 
				if (executionDuration > 0) { 
					resultTime = CalendarUtils.adjustDayHolidays(resultTime, executionDuration);					
					} else {
					resultTime = CalendarUtils.adjustDayHolidays(resultTime, 30);
					}
					var resultDate = new AFDate(resultTime); 
					rkk.tuning().getValues().put("deadline",TuningHelper.createPropertyValue(resultDate, rkk.tuning().getSchema().getProperty("deadline")));
		}
	} 
} 	
	} 
function postSave(object, document) {}]]></custom-event-handler>
  </schema>
</schemas>