<collection name="JobOrders_(vw_cmj_trash)" idField="id" replace="runtime">
    <prototype>
        <![CDATA[
SELECT id,
		 self_1,
		 self_2,
		 self_3,
		 Module,
		 created_date,
		 hasGriff,
		 hasAttachments,
		 orderStatus,
		 reqType,
		 subject,
		 respForPlacementName,
		 execManagerName,
		 orderNumber,
		 orderDate,
		 consumerName,
		 deadline AS orderDeadline,
		 plannedDeadline,
		 docDeadline,
		 vatSum,
		 theme,
		 fullRegNumber,
		 comment
FROM
	(SELECT rkkbase.id AS id,
		 rkkbase.created_date AS created_date,
		 rkkbase.type AS reqType,
		 rkkbase.module AS Module,
		 '<id>' AS self_1, ':' AS self_2, '</>' AS self_3, rkk.regdate AS orderDate,
		(SELECT coalesce(nullif(split_part(tfs."value",
		 '%', 1), '$'), split_part(tfs."value", '%', 2)) AS v
		FROM tn_field
		JOIN tn_field_string tfs
			ON tn_field.access_object_id = tfs.id
		WHERE tn_field."owner" = rkkbase.id
				AND tn_field.owner_type = rkkbase.id_type
				AND tn_field.cmjfield = 'consumer') AS consumerName,
			CASE
			WHEN rkkbase.security_stamp is NOT NULL THEN
			'<iconHint>Есть гриф</><iconId>165</>'
			ELSE ''
			END AS hasGriff,
			(SELECT coalesce(max(a),
		 cast(0 AS SMALLINT))
			FROM
				(SELECT cast(1 AS SMALLINT) a
				FROM f_ContentFiles_Rkk CF
				WHERE CF.f_dp_rkkbase = rkk.id
				UNION
				SELECT cast(1 AS SMALLINT)
				FROM f_ContentRichText_Rkk CRT
				WHERE CRT.f_dp_rkkbase = rkk.id
				UNION
				SELECT cast(1 AS SMALLINT)
				FROM f_VerifyImage_Rkk VI
				WHERE VI.f_dp_rkk = rkk.id ) t ) AS hasAttachments, coalesce(CASE
					WHEN (internalrkk.isafterapproving = 1) THEN
					CASE
					WHEN (internalrkk.appraddstatus = 'APPROVED_POSITIVE') THEN
					'Согласовано'
					WHEN (internalrkk.appraddstatus = 'APPROVED_COMMENTS') THEN
					'Согласовано с замечаниями'
					WHEN (internalrkk.appraddstatus = 'APPROVED_NEGATIVE') THEN
					'Не согласовано'
					WHEN (internalrkk.appraddstatus = 'INTERRUPT_INIT') THEN
					'Согласование прекращено'
					WHEN (internalrkk.appraddstatus = 'INTERRUPT_ADMIN') THEN
					'Согласование прекращено'
					WHEN (internalrkk.appraddstatus = 'INTERRUPT_EXPIRED') THEN
					'Согласование прекращено'
					WHEN (internalrkk.appraddstatus = 'INTERRUPT_NEGATIVE') THEN
					'Согласование прекращено'
					WHEN (internalrkk.appraddstatus = 'IF_APPROVED_POSITIVE') THEN
					'Замечания учтены'
					WHEN (internalrkk.appraddstatus = 'IF_APPROVED_NEGATIVE') THEN
					'Замечания не учтены'
					WHEN (internalrkk.appraddstatus = 'IF_INTERRUPT_INIT') THEN
					'Снятие замечаний прекращено'
					WHEN (internalrkk.appraddstatus = 'IF_INTERRUPT_ADMIN') THEN
					'Снятие замечаний прекращено'
					WHEN (internalrkk.appraddstatus = 'IF_INTERRUPT_EXPIRED') THEN
					'Снятие замечаний прекращено'
					WHEN (internalrkk.appraddstatus = 'IF_INTERRUPT_NEGATIVE') THEN
					'Снятие замечаний прекращено'
					END
					WHEN (internalrkk.apprisunder = 1) THEN
					'На согласовании'
					WHEN (internalrkk.signissigned = 1) THEN
					'Утвержден'
					WHEN (internalrkk.signissentto = 1) THEN
					'На утверждении'
					WHEN (internalrkk.signisrejected = 1) THEN
					'В утверждении отказано'
					WHEN (internalrkk.signissentto = 0
						AND internalrkk.signsenttodt is NOT null) THEN
					'Отозван с утверждения' END, 'Проект') AS orderStatus, rkkbase.subject AS subject, COALESCE(
					(SELECT string_agg(beardExec.Orig_ShortName,',') AS Orig_ShortName
					FROM F_DP_IntRkk_Executor intexec
					LEFT JOIN so_beard beardExec
						ON beardExec.id = intexec.Executor
					WHERE intexec.owner = rkkbase.id), '<Не указано>') AS respForPlacementName,
						(SELECT coalesce(nullif(split_part(tfs."value",'%', 1), '$'), split_part(tfs."value", '%', 2)) AS v
						FROM tn_field
						JOIN tn_field_string tfs
							ON tn_field.access_object_id = tfs.id
						WHERE tn_field."owner" = rkkbase.id
								AND tn_field.owner_type = rkkbase.id_type
								AND tn_field.cmjfield = 'execManager') AS execManagerName, rkk.CtrlDeadline AS deadline,
							(SELECT tfd."value" AS v
							FROM tn_field
							JOIN tn_field_dateonly tfd
								ON tn_field.id = tfd.id
							WHERE tn_field."owner" = rkk.id
									AND tn_field.owner_type = rkk.id_type
									AND tn_field.cmjfield = 'plannedDeadline') AS plannedDeadline,
								(SELECT tfd."value" AS v
								FROM tn_field
								JOIN tn_field_dateonly tfd
									ON tn_field.id = tfd.id
								WHERE tn_field."owner" = rkk.id
										AND tn_field.owner_type = rkkbase.id_type
										AND tn_field.cmjfield = 'Tn$_documentLink.deadline') AS docDeadline,
									(SELECT tfs."value" AS v
									FROM tn_field_decimal tfs
									JOIN tn_field tnf
										ON tnf.id = tfs.id
											AND tnf.cmjfield = 'vatSumContract'
									WHERE tnf."owner" = rkkbase.id
											AND tnf.owner_type = rkkbase.id_type) AS vatSum, coalesce(nullif( coalesce(rkk.regnumprist, '') || coalesce(cast(rkk.regnumcnt AS varchar), '') || coalesce(rkk.regnumfin, ''), ''), concat(rkk.prjnumprist, rkk.prjnumcounter, rkk.prjnumfin)) AS orderNumber,
										(SELECT array_to_string(array_agg( theme),';', '')
										FROM f_dp_rkkbase_theme themes
										WHERE themes.owner = rkkbase.id) AS theme, coalesce(rkk.regnumprist, '') || coalesce(cast(rkk.regnumcnt AS varchar), '') || coalesce(rkk.regnumfin, '') AS fullRegNumber, rkkworeg.comments AS comment
										FROM f_dp_rkkbase rkkbase
										JOIN f_dp_intrkk internalrkk
											ON rkkbase.id = internalrkk.id
										JOIN f_dp_rkk rkk
											ON rkk.id = rkkbase.id
										LEFT JOIN f_dp_rkkworegandctrl rkkworeg
											ON rkkworeg.id = internalrkk.id
										WHERE rkkbase.isdeleted = 1
												AND rkk.regnumcnt IS NULL ) s
									WHERE 1 = 1
									::where-clause
            ]]>
    </prototype>
    <counting-prototype>
        <![CDATA[
            SELECT
				COUNT(1)
			FROM (
				SELECT
					rkkbase.id
				FROM f_dp_rkkbase rkkbase
				  JOIN f_dp_intrkk internalrkk ON rkkbase.id = internalrkk.id
                  JOIN f_dp_rkk rkk ON rkk.id = rkkbase.id
				WHERE rkkbase.isdeleted = 1 AND rkk.regnumcnt IS NULL
			) s
			WHERE
				1 = 1
            ::where-clause
            ]]>
    </counting-prototype>
    <filter name="MODULE">
        <criteria placeholder="where-clause">
            <![CDATA[
				Module = {0}
			]]>
        </criteria>
    </filter>
    <filter name="self">
        <criteria placeholder="where-clause">
            <![CDATA[
                        Module = {0} and id = {1}
                    ]]>
        </criteria>
    </filter>
    <filter name="hasAttachments">
        <criteria placeholder="where-clause">
            <![CDATA[
                    hasAttachments = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="orderStatus">
        <criteria placeholder="where-clause">
            <![CDATA[
                    orderStatus = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="orderStatus_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    orderStatus iLIKE '%'||{0}||'%'
                ]]>
        </criteria>
    </filter>
    <filter name="consumerName">
        <criteria placeholder="where-clause">
            <![CDATA[
                    consumerName = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="consumerName_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                consumerName iLIKE ('%'||{0}||'%')
            ]]>
        </criteria>
    </filter>
    <filter name="subject">
        <criteria placeholder="where-clause">
            <![CDATA[
                    subject = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="subject_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    subject iLIKE '%'||{0}||'%'
                ]]>
        </criteria>
    </filter>
    <filter name="orderNumber">
        <criteria placeholder="where-clause">
            <![CDATA[
                orderNumber = {0}
            ]]>
        </criteria>
    </filter>
    <filter name="theme">
        <criteria placeholder="where-clause">
            <![CDATA[
                    theme = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="theme_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    theme iLIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="orderDate">
        <criteria placeholder="where-clause">
            <![CDATA[
                    cast(orderDate as date) = cast({0} as date)
                ]]>
        </criteria>
    </filter>
</collection>