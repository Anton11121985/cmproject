<?xml version='1.0' encoding='UTF-8'?>
<schemas xmlns="http://www.intertrust.ru/schema/palette/tn-schema">
  <schema name="Actions">
    <meta>
      <category name="Общее"/>
    </meta>
    <boolean name="$canSendToSign" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#sign.sent'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canRevokeInputRegistration" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#revoke.input.registration'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canSignCommon" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#sign'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canSignAndRegisterCommon" system="true" temporal="true">
      <meta>
        <documentation>ВАЖНО!!! изменяя условия отображения кнопки по подписанию с регистрацией с ЭП, нужно так же поправить условия в querySave в схеме RkkResourceDocuments в методе needRegister</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#sign.and.register'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="hasDefaultRegSettings" system="true" temporal="true"/>
    <boolean name="sendToRegisterAfterSigned" system="true" temporal="true"/>
    <boolean name="$canVerify" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#verify'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$CanSignLockerCommon" system="true" temporal="true">
      <meta>
        <documentation>ВАЖНО!!! изменяя условия отображения кнопки по подписанию с регистрацией с ЭП, нужно так же поправить условия в querySave в схеме RkkResourceDocuments в методе needRegister</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[(link.?[rel=='http://intertrust.ru/cmj/relations#sign.locker.sign'].size() > 0) || (link.?[rel=='http://intertrust.ru/cmj/relations#filesigning.locker.sign'].size() > 0) || (link.?[rel=='http://intertrust.ru/cmj/relations#sign.and.register.locker.sign'].size() > 0)]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canSignAndRegister" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[$canSignAndRegisterCommon && !$CanSignLockerCommon &&  hasDefaultRegSettings]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canSign" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[$canSignCommon && !$CanSignLockerCommon && !$canSignAndRegister]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canRecallSign" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#sign.recall'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canUnsign" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[(link.?[rel=='http://intertrust.ru/cmj/relations#unsign'].size() > 0)&&(link.?[rel=='http://intertrust.ru/cmj/relations#sign.locker.cancel'].size() ==0)]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canRejectSign" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#sign.reject'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canRegister" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#register'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canSendToRegister" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#register.sent'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canRejectRegister" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#register.reject'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canRegisterAndVerify" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#register.and.verify'].size() > 0 && #isClerk(#this, null)]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canRegisterAndVerifyAndResolution" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#register.and.verify.and.resolution'].size() > 0 && #isClerk(#this, null)]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canRegisterManual" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#register.manual'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canRegisterAndResolution" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#register.and.resolution'].size() > 0 && #isClerk(#this, null)]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canSendToApproving" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#approving.start'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canSendToApproveIssueFixing" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[(link.?[rel=='http://intertrust.ru/cmj/relations#approving.issue-fixing.start'].size() > 0) && (id == null ? false : T(ru.intertrust.cmj.af.core.AFEntityStorage).getEntityByUNID(id) == null ? false : T(ru.intertrust.cmj.af.core.AFEntityStorage).getEntityByUNID(id).approving() == null ? false : T(ru.intertrust.cmj.af.core.AFEntityStorage).getEntityByUNID(id).approving().hasExistResults()) && (T(ru.intertrust.cmj.af.core.AFEntityStorage).getEntityByUNID(id).approving().findExistResults().get(T(ru.intertrust.cmj.af.core.AFEntityStorage).getEntityByUNID(id).approving().findExistResults().size()-1).repliesSummary() == null ? false : T(ru.intertrust.cmj.af.core.AFEntityStorage).getEntityByUNID(id).approving().findExistResults().get(T(ru.intertrust.cmj.af.core.AFEntityStorage).getEntityByUNID(id).approving().findExistResults().size()-1).repliesSummary().?[getAnswer()==T(ru.intertrust.cmj.af.apre.approving.ARReplyApproving$Answer).NO].size()==0) && (T(ru.intertrust.cmj.af.core.AFEntityStorage).getEntityByUNID(id).approving().findExistResults().get(T(ru.intertrust.cmj.af.core.AFEntityStorage).getEntityByUNID(id).approving().findExistResults().size()-1).getAuthor().equals(T(ru.intertrust.cmj.af.core.AFSession).get().currentUser().getBeard()))]]></script>
      </calc-values>
    </boolean>
    <boolean name="canStartStandardApproving" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[T(ru.intertrust.cmj.af.core.AFSession).get().getApplication(T(ru.intertrust.cmj.af.apre.approving.ARApplicationApproving)).getApprovingSettings(id).isCanStartStandardApproving()]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canSendToReview" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#review.start'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canUnverify" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[(link.?[rel=='http://intertrust.ru/cmj/relations#remove-verification'].size() > 0)&&(link.?[rel=='http://intertrust.ru/cmj/relations#remove-verification.locker.cancel'].size() ==0)]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canCreateResolution" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#create-resolution'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canCreateReport" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#create-report'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$CanSignAndRegisterLocker" system="true" temporal="true">
      <meta>
        <documentation>ВАЖНО!!! изменяя условия отображения кнопки по подписанию с регистрацией с ЭП, нужно так же поправить условия в querySave в схеме RkkResourceDocuments в методе needRegister</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[$canSignAndRegisterCommon && $CanSignLockerCommon && hasDefaultRegSettings]]></script>
      </calc-values>
    </boolean>
    <boolean name="$CanSignLocker" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[$CanSignLockerCommon &&  !$CanSignAndRegisterLocker]]></script>
      </calc-values>
    </boolean>
    <boolean name="wasUnderAppr" system="true"/>
    <boolean name="$canTrash" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#move.to.trash'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canRestore" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#restore.from.trash'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canDelete" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='delete'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canUnsignLocker" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#sign.locker.cancel'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canUnverifyLocker" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#remove-verification.locker.cancel'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canSendToReviewContracts" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['active'.equals(status)&&link.?[rel=='http://intertrust.ru/cmj/relations#review.start'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <string name="$hasStandartContent" computed="true"/>
    <boolean name="$canDiscuss" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#discussion'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$hasApprovingChilds" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#approving.childs'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="canSeeTypeButtonSendToSignature" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL">
          <![CDATA[!T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'signature')  ||  !"rejected".equals(#this?.signature?.state?.status)]]></script>
      </calc-values>
    </boolean>
    <boolean name="$hasExecutionChilds" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#child.resolutions.reports'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$hasReviewChilds" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#review.childs'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$canCreateReply" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#reply'].size() > 0]]></script>
      </calc-values>
    </boolean>

    <!--Вкладка "Нахождение" -->
    <schema-ref name="receivingRkkLogs" ref="EmbeddedView" system="true">
      <meta>
        <documentation>Вкладка "Нахождение"</documentation>
      </meta>
    </schema-ref>

    <!--Автор и доп. информация -->
    <actor name="author" system="true">
      <meta>
        <documentation>Автор</documentation>
      </meta>
    </actor>

    <!--Исполнитель и доп. информация -->
    <actor name="executor" array="true" system="true">
      <meta>
        <documentation>Исполнители</documentation>
      </meta>
    </actor>
    <string name="execPost" system="true">
      <meta>
        <documentation>Должность исполнителя</documentation>
      </meta>
    </string>
    <string name="execPhone" system="true">
      <meta>
        <documentation>Телефон исполнителя</documentation>
      </meta>
    </string>
    <actor name="execDepartment" system="true">
      <meta>
        <documentation>Подразделение исполнителя</documentation>
      </meta>
    </actor>
    <actor name="execParentDepartment" system="true">
      <meta>
        <documentation>Вышестоящее подразделение исполнителя</documentation>
      </meta>
    </actor>

    <!-- Подписанты -->
    <actor name="signers" array="true" temporal="true" createlog="true">
      <meta>
        <documentation>Подписант</documentation>
      </meta>
      <calc-values>
        <script event="open"><![CDATA[T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'signature') && #this?.signature?.signers != null && #this?.signature?.signers.size() > 0  ? #this.signature.signers.![signer] : T(java.util.Collections).emptyList()]]></script>
      </calc-values>
      <recalc-processing-class>ru.intertrust.cmj.rest.rkk.RecalcAddSignersButton</recalc-processing-class>
    </actor>

    <string name="$hasContentWithAffirm" temporal="true"/>

    <boolean name="$canEditByServer" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='edit'].size() > 0]]></script>
      </calc-values>
    </boolean>

    <!-- Согласование -->
    <enum-ref ref="APREStatus" name="apre" system="true"/>
    <boolean name="statusOnApproving" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'apre')  &&  "ON_APPROVING".equals(#this?.apre)]]></script>
      </calc-values>
    </boolean>
    <string name="OnAproving" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.apre == T(ru.intertrust.cmj.rest.rkk.APREStatus).ON_APPROVING ? "ON_APPROVING": ""]]></script>
      </calc-values>
    </string>
    <boolean name="$sendApproving" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.apre == T(ru.intertrust.cmj.rest.rkk.APREStatus).ON_APPROVING]]></script>
      </calc-values>
    </boolean>
    <boolean name="isAfterApproving" system="true"/>
    <string name="approveAddStateText" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[!getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceOutput))
&& !getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceInternal))
&& !getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceMissions))
&& !getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceContracts))
&& !getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.addagr.Agreement.Resource))
&& !getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.finances.Finance.Resource))
&& !getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.document.Document.Resource)) ? null :
#this.approveAddState == null || #this.approveAddState.state == null ? null :
#this.isSigned==true ? null : #this.apre == T(ru.intertrust.cmj.rest.rkk.APREStatus).ON_APPROVING ? null :
#this.isRegisteredOrNotProject==true ? null :
(#this.approveAddState.state.title()+
(!getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceContracts))
&& !getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.addagr.Agreement.Resource))
&& !getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.finances.Finance.Resource))
&& !getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.document.Document.Resource))?"":
#this.approveAddState.isContentChanged == true ? T(System).getProperty('line.separator')+"Содержание изменено после согласования" : "")
)]]></script>
      </calc-values>
    </string>
    <string name="approveAddStateContentChanged" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[!getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceOutput))
&& !getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceInternal))
&& !getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceMissions)) ? null :
#this.approveAddState == null || #this.approveAddState.state == null ? null :
#this.isSigned==true ? null : #this.apre == T(ru.intertrust.cmj.rest.rkk.APREStatus).ON_APPROVING ? null :
#this.isRegisteredOrNotProject==true ? null :
#this.approveAddState.isContentChanged == true ? "Содержание изменено после согласования" : ""]]></script>
      </calc-values>
    </string>
    <boolean name="approveAddStateTextNotIsEmpty" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.tuning()!=null && #this.tuning().getValues()!=null && #this.tuning().getValues().get("approveAddStateText")!=null && !approveAddStateText.equals("")]]></script>
      </calc-values>
    </boolean>

    <!-- Снятие замечаний -->
    <boolean name="statusOnIssueFixing" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#approving.issue-fixing.lists'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <string name="OnIssueFixing" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.apre == T(ru.intertrust.cmj.rest.rkk.APREStatus).ON_ISSUEFIXING ? "ON_ISSUEFIXING": ""]]></script>
      </calc-values>
    </string>
    <boolean name="isOnIssueFixing" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[OnIssueFixing == "ON_ISSUEFIXING"]]></script>
      </calc-values>
    </boolean>
    <boolean name="OnApprovingOrIssueFixing" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[(#this.apre == T(ru.intertrust.cmj.rest.rkk.APREStatus).ON_APPROVING || #this.apre == T(ru.intertrust.cmj.rest.rkk.APREStatus).ON_ISSUEFIXING) ? true : false]]></script>
      </calc-values>
    </boolean>

    <!-- Подписание на бумаге -->
    <boolean name="sendToSignOnPaper" system="true"/>

    <!-- Подписание -->
    <boolean name="isPersonal" system="true" createlog="true"/>
    <boolean name="isSignerWithEdit" system="true" temporal="true"/>
    <string name="dialogueComment" createlog="true">
      <meta>
        <documentation>Причина повторной отправки на подписание</documentation>
      </meta>
      <storage-field name="dialogueComment"/>
    </string>
    <boolean name="dialogueCommentNotIsEmpty" temporal="true" computed="true">
      <calc-values>
        <script event="open" lang="SPEL">
          <![CDATA[
            #this.tuning()!=null && #this.tuning().getValues()!=null && #this.tuning().getValues().get("dialogueComment")!=null && !dialogueComment.equals("")
          ]]>
        </script>
      </calc-values>
    </boolean>
    <boolean name="needRemoveSignSentInWDLink" temporal="true">
      <meta>
        <documentation>Удаление ссылки "На подписание". WebDocs</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[documentStatus != null && 'sent_to_registration'.equals(documentStatus.getOrDefault('main', '')) && 'Webdocs2.0'.equals(T(ru.intertrust.cmj.af.core.AFSession).get().currentUser().extendedAttributes().getOrDefault('ClientAlias', '')) && T(ru.intertrust.cmj.rest.tuning.TuningHelper).removeLinks(link, 'http://intertrust.ru/cmj/relations#sign.sent')]]>
        </script>
      </calc-values>
    </boolean>
    <boolean name="isSigned" temporal="true">
      <meta>
        <documentation>Подписан</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceOutput)) || getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceInternal)) || getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceMissions)) || getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.finances.Finance.Resource)) || getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.document.Document.Resource)) ? #this.signature != null && #this.signature.state != null && #this.signature.state.status != null && (#this.signature.state.status == "signed") ? true : false :  getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceContracts)) || getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.addagr.Agreement.Resource)) ? #this.signatureContracts != null && #this.signatureContracts.ours != null && #this.signatureContracts.ours.state != null && #this.signatureContracts.ours.state.status != null && (#this.signatureContracts.ours.state.status == "signed") ? true : false : false]]></script>
      </calc-values>
    </boolean>
    <boolean name="isSignRejected" temporal="true">
      <meta>
        <documentation>Отказано в подписании</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceOutput)) ||
        getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceInternal)) ||
        getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceMissions)) ||
        getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.finances.Finance.Resource)) ||
        getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.document.Document.Resource)) ?
        #this.signature != null && #this.signature.state != null && #this.signature.state.status != null
        && (#this.signature.state.status == "rejected") ? true : false :
        getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceContracts)) ||
        getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.addagr.Agreement.Resource)) ?
        #this.signatureContracts != null && #this.signatureContracts.ours != null
        && #this.signatureContracts.ours.state != null && #this.signatureContracts.ours.state.status != null
        && (#this.signatureContracts.ours.state.status == "rejected") ? true : false : false]]></script>
      </calc-values>
    </boolean>
    <boolean name="isOnSign" temporal="true">
      <meta>
        <documentation>На подписании</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceOutput)) ||
        getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceInternal)) ||
        getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceMissions)) ||
        getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.finances.Finance.Resource)) ||
        getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.document.Document.Resource)) ?
        #this.signature != null && #this.signature.state != null && #this.signature.state.status != null
        && (#this.signature.state.status == "sent") ? true : false :
        getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceContracts)) ||
        getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.addagr.Agreement.Resource)) ?
        #this.signatureContracts != null && #this.signatureContracts.ours != null
        && #this.signatureContracts.ours.state != null && #this.signatureContracts.ours.state.status != null
        && (#this.signatureContracts.ours.state.status == "sent") ? true : false : false]]></script>
      </calc-values>
    </boolean>
    <boolean name="signStateNotRejected" temporal="true">
      <meta>
        <documentation>Не отказано в подписании</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL">
          <![CDATA[T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'signature')  &&  !"rejected".equals(#this?.signature?.state?.status)]]></script>
      </calc-values>
    </boolean>
    <boolean name="SignIsRecalled" default-value="false" temporal="true">
      <meta>
        <documentation>Отозван с подписания</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[
          getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceOutput))
          || getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceInternal))
          || getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceMissions))
          || getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.finances.Finance.Resource))
          || getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.document.Document.Resource))
          ?
          (#root?.signature?.signIsRecalled)
          :
            getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceContracts))
            || getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.addagr.Agreement.Resource))
            ?
            #root?.signatureContracts?.signIsRecalled
            : false
        ]]></script>
      </calc-values>
    </boolean>
    <boolean name="signStateStatusRecalled" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL">
          <![CDATA[
                        (#this.isNew() || SignIsRecalled != true ) ?  false
                        : ((isOnIssueFixing != null && isOnIssueFixing)
                            || ($sendApproving != null && $sendApproving)
                            || (isAfterApproving != null && isAfterApproving)
                            || (isOnRework != null && isOnRework)
                            || (isSigned != null && isSigned)
                            || (isRegisteredOrNotProject != null && isRegisteredOrNotProject)
                            || (sendToSignOnPaper != null && sendToSignOnPaper)) ? false
                        : (T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).getEntityByUNID(#this.id)).isDeleted() ? false
                        : true
                    ]]>
        </script>
      </calc-values>
    </boolean>

    <!-- На доработке -->
    <boolean name="isOnRework" system="true">
      <meta>
        <documentation>На доработке</documentation>
      </meta>
    </boolean>
    <boolean name="UnsignWithRework" temporal="true">
      <meta>
        <documentation>Отзыв с подписания с доработкой</documentation>
      </meta>
    </boolean>

    <!--Регистрация -->
    <boolean name="isRegisteredOrNotProject" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceOutput)) ||
        getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceInternal)) ||
        getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceMissions)) ?
        #this.registration != null && #this.registration.state != null &&
        #this.registration.state.status != null && #this.registration.state.status == "registered" ? true : false :
        getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceContracts)) ||
        getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.addagr.Agreement.Resource)) ||
        getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.finances.Finance.Resource)) ||
        getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.document.Document.Resource)) ?
        #this.status != null && #this.status != "project" ? true : false : false]]></script>
      </calc-values>
    </boolean>
    <boolean name="regStateStatusRejected" temporal="true">
      <meta>
        <documentation>Отказано в регистрации</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'registration')
        && "rejected".equals(#this?.registration?.state?.status)]]></script>
      </calc-values>
    </boolean>
    <boolean name="regStateStatusRegistered" temporal="true">
      <meta>
        <documentation>Зарегистрирован</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'registration')
        && "REGISTERED".equalsIgnoreCase(#this?.registration?.state?.status)]]></script>
      </calc-values>
    </boolean>
    <boolean name="regStateStatusSent" temporal="true">
      <meta>
        <documentation>На регистрацию</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'registration')
        &&  "sent".equals(#this?.registration?.state?.status)]]></script>
      </calc-values>
    </boolean>

    <!-- Ознакомление -->
    <string name="OnReview" temporal="true">
      <meta>
        <documentation>На ознакомление</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.apre == T(ru.intertrust.cmj.rest.rkk.APREStatus).ON_REVIEW ? "ON_REVIEW": ""]]></script>
      </calc-values>
    </string>
    <boolean name="$sendReviewing" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.OnReview.equals("ON_REVIEW")]]></script>
      </calc-values>
    </boolean>
    <boolean name="isAfterReview" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[
          isNew ? false : {
            #reviewEntries = new ru.intertrust.cmj.rest.apre.result.ReviewResultCollectionReference(new java.net.URI("/rkks/" + #this.id + "/review/history"))?.readResource()?.entry,
            #reviewEntries != null && #reviewEntries.size() > 0 && 'stopped | finished'.contains(#reviewEntries.get(#reviewEntries.size() - 1)?.status)
          }[1]
        ]]></script>
      </calc-values>
    </boolean>

    <!--Сформировать образ-->
    <boolean name="canManualStamp" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#manualStamp'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="isInStamp" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#stampConvert'].size() > 0 || link.?[rel=='http://intertrust.ru/cmj/relations#stamp.progress'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <string name="stampInfo" computed="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Идет формирование образа документа']]></script>
      </calc-values>
    </string>

    <!--Текущий пользователь -->
    <boolean name="curUserIsExecWithoutSub" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'executor')
        && #this.executor != null ? #this?.executor?.contains(T(ru.intertrust.cmj.rest.vcards.VCardResource).beardToVCardThrow.apply(T(ru.intertrust.cmj.af.core.AFSession).get().currentUser().getBeard())) :  false]]></script>
      </calc-values>
    </boolean>
    <boolean name="curUserIsExec" temporal="true">
      <meta>
        <documentation>Текущий пользователь является исполнителем</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL">
          <![CDATA[T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'executor') && #this.executor != null? #this?.executor?.contains( T(ru.intertrust.cmj.rest.vcards.VCardResource).beardToVCardThrow.apply(T(ru.intertrust.cmj.af.core.AFSession).get().currentUser().getBeard()) ) || !#this.isNew() && T(ru.intertrust.cmj.af.core.AFSession).get().getApplication(T(ru.intertrust.cmj.dp.DPApplication)).getEntityByUNID(#this.id).executors().getList().?[T(ru.intertrust.cmj.pkd.tools.PkdTools).getBeardsSubstitutes(#this, true).?[getUNID().equals(T(ru.intertrust.cmj.af.core.AFSession).get().currentUser().getBeard().getAccessUnit().getUNID())].size() > 0].size() > 0 :  false]]></script>
      </calc-values>
    </boolean>
    <boolean name="curUserIsSigner" temporal="true">
      <meta>
        <documentation>Текущий пользователь является подписантом или замом подписанта</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[(getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceOutput)) ||
                getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceInternal)) ||
                getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceMissions)) ||
                getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.finances.Finance.Resource)) ||
                getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.document.Document.Resource))) &&
                signature != null && (signature.signer != null || signature.signers != null) && (signature?.signingMode == T(ru.intertrust.cmj.af.core.SigningMode).STD ?
                (T(com.google.common.collect.Lists).transform(#this?.signature?.signer, T(ru.intertrust.cmj.rest.vcards.VCardResource).vcardTobeard).contains(T(ru.intertrust.cmj.af.core.AFSession).get().currentUser().getBeard()) ||
                  T(com.google.common.collect.Lists).transform(#this?.signature?.signer, T(ru.intertrust.cmj.rest.vcards.VCardResource).vcardTobeard).?[T(ru.intertrust.cmj.af.core.AFSession).get().currentUser().isSigningSubstituteOf(#this)].size() > 0
                ):(
                #this?.signature?.signers.?[T(com.google.common.collect.Lists).transform(signer, T(ru.intertrust.cmj.rest.vcards.VCardResource).vcardTobeard).contains(T(ru.intertrust.cmj.af.core.AFSession).get().currentUser().getBeard())].size() > 0 ||
                #this?.signature?.signers.?[T(com.google.common.collect.Lists).transform(signer, T(ru.intertrust.cmj.rest.vcards.VCardResource).vcardTobeard).?[T(ru.intertrust.cmj.af.core.AFSession).get().currentUser().isSigningSubstituteOf(#this)].size() > 0].size() > 0)
                )]]></script>
      </calc-values>
    </boolean>
    <boolean name="currentUserIsSigner" temporal="true">
      <meta>
        <documentation>Текущий пользователь является подписантом или замом подписанта</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[id == null ? false : T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).getEntityByUNID(id) == null ? false : T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).getEntityByUNID(id).signing() == null ? false : T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).getEntityByUNID(id).signing().getSigner() == null ? false : T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).getEntityByUNID(id).signing().getSigner().equals(T(ru.intertrust.cmj.af.core.AFSession).get().currentUser().getBeard()) ? true : false]]></script>
      </calc-values>
    </boolean>
    <boolean name="isSupervisor" temporal="true">
      <meta>
        <documentation>У текущего пользователя включена роль 'Supervisor'</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[T(ru.intertrust.cmj.af.core.AFSession).get().currentUser() != null && #hasRole(#this, 'Supervisor')]]></script>
      </calc-values>
    </boolean>
    <boolean name="isAllDelo" temporal="true">
      <meta>
        <documentation>У текущего пользователя включена роль 'AllDelo'</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#hasRole(#this, 'AllDelo')]]></script>
      </calc-values>
    </boolean>
    <boolean name="isClerk" temporal="true">
      <meta>
        <documentation>Текущий пользователь является делопроизводителем</documentation>
      </meta>
      <calc-values>
        <script event="open">
          <![CDATA[#hasRole(#this, '$Clerk') || #hasRole(#this, 'AllDelo')]]>
        </script>
      </calc-values>
    </boolean>
    <boolean name="curUserOnlyIsAuthor" temporal="true">
      <meta>
        <documentation>Текущий пользователь является автором</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL">
          <![CDATA[
{
#session = T(ru.intertrust.cmj.af.core.AFSession).get(),
#curUser = #session.currentUser(),
#author = #session.getApplication(T(ru.intertrust.cmj.dp.DPApplication)).getEntityByUNID(#this.id)?.getAuthor()?.getUNID(),
#author != null && #author.equals(#curUser.getBeard()?.getUNID())
}[3]]]></script>
      </calc-values>
    </boolean>
    <boolean name="curUserIsAuthor" temporal="true">
      <meta>
        <documentation>Текущий пользователь является автором или замом автора</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[
{
    #session = T(ru.intertrust.cmj.af.core.AFSession).get(),
	#curUser = #session.currentUser(),
	#author = #session.getApplication(T(ru.intertrust.cmj.dp.DPApplication)).getEntityByUNID(#this.id)?.getAuthor()?.getUNID(),
	#author != null && (#author.equals(#curUser.getBeard()?.getUNID()) || #curUser.isSubstituteOf(#author))
}[3]]]>
        </script>
      </calc-values>
    </boolean>
    <boolean name="curUserIsResponsible" temporal="true">
      <meta>
        <documentation>Текущий пользователь является ответственным или замом ответственного в документе по договору</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[
getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.document.Document.Resource))
?   {
     #curUser = T(ru.intertrust.cmj.af.core.AFSession).get().currentUser(),
     responsibles != null && (responsibles.contains(#curUser.getBeard()) || responsibles.?[T(com.google.common.collect.Lists).transform(#this, T(ru.intertrust.cmj.rest.vcards.VCardResource).vcardTobeard).?[#curUser.isSubstituteOf(#this)].size() > 0].size() > 0)
    }[1]
: false
          ]]>
        </script>
      </calc-values>
    </boolean>
    <boolean name="curUserIsExecutor" temporal="true">
      <meta>
        <documentation>Текущий пользователь является исполнителем или замом исполнителя в ДС и документе по договору</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[
getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.document.Document.Resource))
|| getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.addagr.Agreement.Resource))
?   {
     #curUser = T(ru.intertrust.cmj.af.core.AFSession).get().currentUser(),
     #root.preparedBy != null && (#root.preparedBy.contains(#curUser.getBeard()) || #root.preparedBy.?[T(com.google.common.collect.Lists).transform(#this, T(ru.intertrust.cmj.rest.vcards.VCardResource).vcardTobeard).?[#curUser.isSubstituteOf(#this)].size() > 0].size() > 0)
    }[1]
: false
          ]]>
        </script>
      </calc-values>
    </boolean>

    <!-- Множественное подписание -->
    <actor name="signersWithOtherSigners" temporal="true" array="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[T(org.apache.commons.collections.ListUtils).union((signers != null ? signers : #this?.signature?.signer != null ? T(java.util.Collections).singletonList(#this?.signature?.signer) : T(java.util.Collections).emptyList()),
        (#this instanceof T(ru.intertrust.cmj.rest.rkk.RkkResourceDP) && advSigner != null ? advSigner : T(java.util.Collections).emptyList()))]]></script>
      </calc-values>
    </actor>
    <boolean name="isMultipleSigningEnabled" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL">
          <![CDATA[T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'signature')  && #this.signature != null && !(#this.signature.signingMode == T(ru.intertrust.cmj.af.core.SigningMode).STD)]]>
        </script>
      </calc-values>
    </boolean>
    <boolean name="isMultipleSigningForContractEnabled" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL">
          <![CDATA[
            T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'signatureContracts')  &&
            #this.signatureContracts != null &&
            !(#this.signatureContracts.signingMode == T(ru.intertrust.cmj.af.core.SigningMode).STD)
          ]]>
        </script>
      </calc-values>
    </boolean>
    <boolean name="isRkkHasMultipleSigners" temporal="true" computed="true">
      <calc-values>
        <script event="open" lang="SPEL">
          <![CDATA[#this.isMultipleSigningEnabled && (T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'signature')  && #this.signature != null && #this.signature.signers != null
          && signature.signers.size() > 1)]]>
        </script>
      </calc-values>
    </boolean>
    <boolean name="canSeeSigningModeOnWrite" temporal="true" computed="true">
      <calc-values>
        <script event="open" lang="SPEL">
          <![CDATA[#this.isMultipleSigningEnabled && (T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'signature')  && #this.signature != null && #this.signature.signers != null && #this.signature.signers.size() > 1) && (#this.$isProject || #this.isOnSign)]]>
        </script>
      </calc-values>
    </boolean>
    <boolean name="$canSeeSigningModeOnWriteContract" temporal="true" computed="true">
      <calc-values>
        <script event="open" lang="SPEL">
          <![CDATA[
            #this.isMultipleSigningForContractEnabled &&
            (T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'signatureContracts') &&
            #this.signatureContracts != null &&
            #this.signatureContracts.ours != null &&
            #this.signatureContracts.ours.signers != null &&
            #this.signatureContracts.ours.signers.size() > 1) &&
            (#this.$isProject || #this.isOnSign)
          ]]>
        </script>
      </calc-values>
    </boolean>
    <boolean name="$canSeeSigningModeOnReadContract" temporal="true" computed="true">
      <calc-values>
        <script event="open" lang="SPEL">
          <![CDATA[
            #this.isMultipleSigningForContractEnabled &&
            (
              (
                T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'signatureContracts') &&
                #this.signatureContracts != null &&
                #this.signatureContracts.signers != null &&
                #this.signatureContracts.signers.size() > 1
              ) ||
              (
                T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'signers') &&
                #this.signers != null &&
                #this.signers.size() > 1
              )
            ) &&
            #this.isOnSign
          ]]>
        </script>
      </calc-values>
    </boolean>
    <boolean name="canSeeSigningModeOnRead" temporal="true" computed="true">
      <calc-values>
        <script event="open" lang="SPEL">
          <![CDATA[#this.isMultipleSigningEnabled && (T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'signature')  && #this.signature != null && #this.signature.signers != null && #this.signature.signers.size() > 1) && #this.isOnSign]]>
        </script>
      </calc-values>
    </boolean>

    <!--Номенклатура дел-->
    <boolean name="$isOldFrCompatible" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[T(ru.intertrust.cmj.af.utils.BeansUtils).getTypedBean(T(ru.intertrust.cmj.af.fdnd.FrCompatibleService)).isOldFrCompatible()]]></script>
      </calc-values>
    </boolean>
    <string name="$fdndFiles" temporal="true"/>
    <string name="$fdndFilesWithCopies" temporal="true"/>
    <boolean name="addLinksForNd" temporal="true">
      <calc-values>
        <script event="open">
          <![CDATA[
                    $isOldFrCompatible?
            #this.link.add(
               new ru.intertrust.cmj.rest.core.ResourceLink(
                    T(ru.intertrust.cmj.rest.core.ResourceLink).rel("fdnd.for.regplace.old"),
                    T(ru.intertrust.cmj.rest.core.ReferenceFactory).get().getReference("NodeListByAliasCategorized",
                            "inventory-all-case",
                             ((#this instanceof T(ru.intertrust.cmj.rest.contracts.document.Document.Resource)) ||
                              (#this instanceof T(ru.intertrust.cmj.rest.contracts.finances.Finance.Resource)) || #this.registration == null) ? '' : (#this.registration.place == null ? '' : (T(ru.intertrust.cmj.rest.vcards.VCardResource).vcardTobeard.apply(#this.registration.place).getUNID().split(':')[1])),
                             null, true)
                            )):
            #this.link.add(
               new ru.intertrust.cmj.rest.core.ResourceLink(
                    T(ru.intertrust.cmj.rest.core.ResourceLink).rel("fdnd.for.regplace.with.originalInfo"),
                    T(ru.intertrust.cmj.rest.core.ReferenceFactory).get().getReference("NodeListByAliasCategorized",
                            "inventory-all-cases-{originalInfo}",
                             ((#this instanceof T(ru.intertrust.cmj.rest.contracts.document.Document.Resource)) || (#this instanceof T(ru.intertrust.cmj.rest.contracts.finances.Finance.Resource)) || #this.registration == null) ? '' :
                              (#this.registration.place == null ? '' :
                              (T(ru.intertrust.cmj.rest.vcards.VCardResource).vcardTobeard.apply(#this.registration.place).getUNID().split(':')[1])),
                             null, true)
                            ))
                            &&
              #this.link.add(
                new ru.intertrust.cmj.rest.core.ResourceLink(
                    T(ru.intertrust.cmj.rest.core.ResourceLink).rel("fdnd.all.with.originalInfo"),
                    "/collections/byAlias/PROGRAMMED/inventory-all-cases-{originalInfo}/true/true/false", ''
                            ))
]]>
        </script>
      </calc-values>
    </boolean>

    <!--Доступ к кастомным кнопкам-->
    <boolean name="canSeeCustomButtonSendForSign" temporal="true">
      <meta>
        <documentation>Отобразить кнопку "На подписание"</documentation>
      </meta>
      <calc-values>
        <script event="open"><![CDATA[!signStateNotRejected && ($canSendToSign || curUserIsExec && isSignRejected) && !OnAproving.equals("ON_APPROVING") && (sendToSignOnPaper == null || !sendToSignOnPaper)]]></script>
      </calc-values>
    </boolean>
    <boolean name="showSendToSignContractRepeat" temporal="true">
      <meta>
        <documentation>Отобразить кнопку "На подписание". Повторная отправка Договора/ДС/Документа по договору/Фин.документа на подписание</documentation>
      </meta>
      <calc-values>
        <script event="open"><![CDATA[!signStateNotRejected && ($canSendToSign || curUserIsExecutor && SignIsRecalled) && !$canSign && !$CanSignLocker && (sendToSignOnPaper == null || !sendToSignOnPaper) && !OnAproving.equals("ON_APPROVING")]]></script>
      </calc-values>
    </boolean>
    <boolean name="hasRoleToSeeSignOnPaperButton" temporal="true">
      <meta>
        <documentation>Отобразить кнопку "Отправка\На подписание на бумаге"</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#hasRole(#this, '$Clerk') || #hasRole(#this, 'AllDelo') || #hasRole(#this, 'Supervisor') || curUserIsAuthor || curUserIsExecutor]]>
        </script>
      </calc-values>
    </boolean>
    <boolean name="showOnReworkButton" temporal="true">
      <meta>
        <documentation>Отобразить кнопку "На доработку"</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[
{
#session = T(ru.intertrust.cmj.af.core.AFSession).get(),
#curUser = #session.currentUser(),
#tuning = #this.tuning().getValues(),

(#this.isNew() || (T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'isDeleted') && #this.isDeleted)
 || #this.isOnRework != null && #this.isOnRework || OnAproving == "ON_APPROVING" || OnIssueFixing == "ON_ISSUEFIXING"
 || (T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'registration')
	 && (#this.registration?.state?.status == "registered" || #this.registration?.state?.status == "sent"))
 || (T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'signature')
	 &&  "sent".equals(#this?.signature?.state?.status))) ? false :
(!getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceOutput))
 && !getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceInternal))
 && !getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceMissions))
 && !getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceContracts))
 && !getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.addagr.Agreement.Resource))
 && !getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.finances.Finance.Resource))
 && !getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.document.Document.Resource))) ? false :
(getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.contracts.addagr.Agreement.Resource))
 && ((#this.registration.state.status == "sent" && #this.objectType == "Дополнительное соглашение")
	 || #this.isOnSign)) ? false : (#this.regStateStatusRegistered != null && #this.regStateStatusRegistered) ? false :
(((#this.isAfterApproving != null && #this.isAfterApproving) || approveAddStateTextNotIsEmpty || #this.isSignRejected != null && #this.isSignRejected ||
(#this.regStateStatusRejected != null && #this.regStateStatusRejected)
  || (getClass().isAssignableFrom(T(ru.intertrust.cmj.rest.rkk.RkkResourceMissions)) && T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'sendtodrawing') && #this.sendtodrawing != null && #this.sendtodrawing) || (statusOnApproving)) &&
 (((#session.getApplication(T(ru.intertrust.cmj.dp.DPApplication)).getEntityByUNID(#this.id)?.getAuthor() != null
	&& #curUser.getBeard().getUNID().equalsIgnoreCase(#session.getApplication(T(ru.intertrust.cmj.dp.DPApplication)).getEntityByUNID(#this.id)?.getAuthor()?.getUNID()))
   || (T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#root, 'executor') && #root.executor != null && !#root.executor.isEmpty()
          && (#curUser.getBeard().equals(T(ru.intertrust.cmj.rest.vcards.VCardResource).vcardTobeard.apply(#root.executor.get(0)))|| #curUser.getSubstituteOf().contains(T(ru.intertrust.cmj.rest.vcards.VCardResource).vcardTobeard.apply(#root.executor.get(0))) ))
	 || (T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#root, 'preparedBy') && #root.preparedBy != null && !#root.preparedBy.isEmpty()
          && (#curUser.getBeard().equals(T(ru.intertrust.cmj.rest.vcards.VCardResource).vcardTobeard.apply(#root.preparedBy.get(0)))|| #curUser.getSubstituteOf().contains(T(ru.intertrust.cmj.rest.vcards.VCardResource).vcardTobeard.apply(#root.preparedBy.get(0))) ))
	  ))) ? true : false
}[3]
]]></script>
      </calc-values>
    </boolean>
    <boolean name="canSeeCustomButtonSendToSignatureContacts" temporal="true">
      <meta>
        <documentation>Отобразить кнопку "На подписание". Для Договора</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'signatureContracts')  &&  "rejected".equals(#this?.signatureContracts?.ours?.state?.status) && !OnAproving.equals("ON_APPROVING")]]></script>
      </calc-values>
    </boolean>

    <!--Права доступа-->
    <boolean name="currUserCantEditDocument" temporal="true">
      <meta>
        <documentation>Права доступа редактирования ДС/Документа/Фин.документа</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[
        OnAproving.equals("ON_APPROVING") && !curUserIsResponsible
        ||
        $sendReviewing && !(curUserIsExecutor || curUserIsResponsible || #hasRole(#this, '$Clerk') || #hasRole(#this, 'Supervisor'))
        ||
        isAfterApproving != null && isAfterApproving && !(curUserIsAuthor || curUserIsExecutor || #hasRole(#this, '$Clerk'))
        ]]></script>
      </calc-values>
    </boolean>
    <boolean name="canNotEditSigners" temporal="true">
      <meta>
        <documentation>Управление редактированием поля "Подписанты"</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#root, 'signature')  &&  ("sent".equals(#root?.signature?.state?.status) ||
        "signed".equals(#root?.signature?.state?.status)) || #root.OnApprovingOrIssueFixing==true || (#root.sendToSignOnPaper != null && #root.sendToSignOnPaper)]]></script>
      </calc-values>
    </boolean>

    <!-- Статусное состояние документа -->
    <string name="labelOnRework" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['На доработке']]></script>
      </calc-values>
    </string>
    <string name="stateApproval" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Обработка согласования']]></script>
      </calc-values>
    </string>
    <string name="labelStatusExec" temporal="true">
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA['На исполнении']]></script>
      </calc-values>
    </string>
    <string name="signRecallStatusInfo" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Отозван с подписания']]></script>
      </calc-values>
    </string>
    <string name="sendtosignonpaperv" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[(sendToSignOnPaper != null && sendToSignOnPaper) ? 'На подписании на бумаге' : '']]></script>
      </calc-values>
    </string>

    <!-- Заголовки разделов -->
    <string name="labelMain" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Основные']]></script>
      </calc-values>
    </string>
    <string name="labelAdditional" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Дополнительные']]></script>
      </calc-values>
    </string>
    <string name="labelSign" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA["Подписант:"]]></script>
      </calc-values>
    </string>
    <string name="labelExecutor" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA["Исполнитель"]]></script>
      </calc-values>
    </string>

    <!-- Вспомогательные св-ва -->
    <string name="fakeString" temporal="true">
      <meta>
        <documentation>Пустая строка</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[""]]></script>
      </calc-values>
    </string>
    <string name="$emptyString" temporal="true" system="true"/>
    <string name="emptyfield" temporal="true" system="true"/>
    <boolean name="alwaysFalse" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL">
          <![CDATA[false]]></script>
      </calc-values>
    </boolean>

    <!-- Остальное -->
    <boolean name="closeContextObject" temporal="true"/>
    <string name="mode" temporal="true"/>
    <boolean name="$isProject" temporal="true">
      <meta>
        <documentation>Проект</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'registration')?(#this.registration==null || #this.registration.number==null):false]]></script>
      </calc-values>
    </boolean>

    <!-- Заверено -->
    <boolean name="certified" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#hasLink(#this,'verification')]]></script>
      </calc-values>
    </boolean>
    <boolean name="$isAllResolutionCompleted" temporal="true">
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA[T(ru.intertrust.cmj.af.core.AFCMDomino).getDocByUNID(getId())?.getParentDatabase()?.getView("(NotCompletedResForRkk_FOR_COUNT)")?.getAllDocumentsByKey(T(ru.intertrust.cmj.af.core.AFCMDomino)?.ormUNIDToCMFullUNID(T(ru.intertrust.cmj.af.core.AFCMDomino)?.getDocByUNID(getId())?.getUniversalID())[0])?.getCount() == 0]]></script>
      </calc-values>
    </boolean>

    <!-- Дата создания объекта -->
    <datetime name="createdTime" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.isNew()? null:T(ru.intertrust.cmj.af.misc.AFDateTime).convertFromDate(T(java.util.Date).from(T(ru.intertrust.cmj.af.core.AFEntityStorage).getEntityByUNID(#this.id).created.getTime()))]]></script>
      </calc-values>
    </datetime>

    <!--Вычисление даты подписания и регистрации -->
    <datetime name="dtStateSign" temporal="true">
      <meta>
        <documentation>Дата подписания/отправки на подпись/отказа в подписании</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'signature') && #this?.signature?.state?.changedAt != null? #this.signature.state.changedAt:
        T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'signatureContracts') && #this.signatureContracts?.ours?.state?.changedAt != null? #this.signatureContracts.ours.state.changedAt:
        createdTime]]></script>
      </calc-values>
    </datetime>
    <datetime name="dtStateReg" temporal="true">
      <meta>
        <documentation>Дата регистрации/отправки на регистрацию/отказа в регистрации</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'registration') && #this.registration?.state?.changedAt != null? #this.registration.state.changedAt:createdTime]]></script>
      </calc-values>
    </datetime>
    <boolean name="isDTSignMoreDTReg" temporal="true">
      <meta>
        <documentation>Дата подписания больше даты регистрации</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.dtStateReg==#this.dtStateSign?true:#this.dtStateSign>#this.dtStateReg?true:false]]></script>
      </calc-values>
    </boolean>

    <!--Заголовки разделов-->
    <string name="labelInitiator" temporal="true">
      <calc-values>
        <script lang="SPEL" event="open">
          <![CDATA['Инициаторы']]>
        </script>
      </calc-values>
    </string>
    <string name="labelVersion" temporal="true">
      <calc-values>
        <script lang="SPEL" event="open">
          <![CDATA['Версия']]>
        </script>
      </calc-values>
    </string>

    <!--Статусные состояния-->
    <string name="stateProject" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Проект']]></script>
      </calc-values>
    </string>
    <string name="stateRework" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['На доработке']]></script>
      </calc-values>
    </string>
    <string name="stateApprProc" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Обработка согласования']]></script>
      </calc-values>
    </string>
    <string name="stateSignReject" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Отказано в подписании']]></script>
      </calc-values>
    </string>
    <string name="stateSignRecall" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Отозван с подписания']]></script>
      </calc-values>
    </string>
    <string name="stateReg" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Зарегистрирован']]></script>
      </calc-values>
    </string>
    <string name="stateSign" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Подписано']]></script>
      </calc-values>
    </string>
    <string name="stateCertified" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Заверено']]></script>
      </calc-values>
    </string>
    <string name="stateDelete" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Удален']]></script>
      </calc-values>
    </string>
    <string name="stateStatusExec" temporal="true">
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA['На исполнении']]></script>
      </calc-values>
    </string>
    <string name="stateStatusComplete" temporal="true">
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA['Исполнен']]></script>
      </calc-values>
    </string>
    <string name="stateSendToSignOnPaper" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[(#this.sendToSignOnPaper != null && #this.sendToSignOnPaper) ? 'На подписании на бумаге' : '']]></script>
      </calc-values>
    </string>
    <string name="stateApprove" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.approveAddState?.state == null ? '': #this.approveAddState.state.title()]]></script>
      </calc-values>
    </string>
    <string name="stateChangeContent" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL">
          <![CDATA[#this.approveAddState?.isContentChanged == null? '': #this.approveAddState.isContentChanged? 'Содержание изменено после согласования' : '']]></script>
      </calc-values>
    </string>

    <!-- Ознакомление -->
    <boolean name="$showStateReview" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA["on_review".equals(documentStatus?.additional) || #this.apre == T(ru.intertrust.cmj.rest.rkk.APREStatus).ON_REVIEW ? true:false]]></script>
      </calc-values>
    </boolean>

    <!-- Предыдущие статусные состояния -->
    <string name="infoStateApprove" temporal="true">
      <meta>
        <documentation>Результат согласования</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.approveAddState?.state == null ? '': #this.approveAddState.state.title()]]></script>
      </calc-values>
    </string>

    <!-- Изменено содержание после согласования -->
    <string name="infoStateChangeContent" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL">
          <![CDATA[#this.approveAddState == null || #this.approveAddState.isContentChanged == null? '': #this.approveAddState.isContentChanged? 'Содержание изменено после согласования' : '']]></script>
      </calc-values>
    </string>
    <boolean name="$showInfoStateChangeContent" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.approveAddState == null || #this.approveAddState.isContentChanged == null? false: #this.approveAddState.isContentChanged]]></script>
      </calc-values>
    </boolean>

    <!-- Регистрация и подписание -->
    <string name="infoStateSign" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.isSignRejected? 'Отказано в подписании': #this.isSigned? 'Подписано':'']]></script>
      </calc-values>
    </string>
    <boolean name="$showInfoStateSign" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL">
          <![CDATA[!(#this.isOnRework ||
          #this.$sendApproving ||
          #this.isOnSign ||
          #this.regStateStatusSent ||
          (#this.regStateStatusRejected && !#this.isDTSignMoreDTReg)  ||
          #this.regStateStatusRegistered)? false: #this.isSignRejected? true: #this.isSigned? true: false]]></script>
      </calc-values>
    </boolean>

    <string name="infoStateReg" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.regStateStatusRejected?'Отказано в регистрации':#this.regStateStatusRegistered?'Зарегистрирован':'']]></script>
      </calc-values>
    </string>
    <boolean name="$showInfoStateReg" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL">
          <![CDATA[!(#this.isOnRework ||
          #this.$sendApproving ||
          #this.isOnSign ||
          #this.isSignRejected ||
          (#this.isSigned && #this.isDTSignMoreDTReg) ||
          #this.isInStamp ||
          #this.certified ||
          !#this.$isAllResolutionCompleted ||
          #this.$showStateReview)? false:#this.regStateStatusRejected? true: #this.regStateStatusRegistered?true:false]]></script>
      </calc-values>
    </boolean>

    <string name="infoStateCertified" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.certified?'Заверено':'']]></script>
      </calc-values>
    </string>
    <boolean name="$showInfoStateCertified" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[!(#this.$showStateReview)?false:#this.certified?true:false]]></script>
      </calc-values>
    </boolean>

    <string name="infoStateReview" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.$showStateReview?'На ознакомлении':'']]></script>
      </calc-values>
    </string>
    <boolean name="$showInfoStateReview" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.$isAllResolutionCompleted?false:#this.$showStateReview?true:false]]></script>
      </calc-values>
    </boolean>

    <string name="dialogueCommentReg" createlog="true" system="true">
      <storage-field name="dialogueCommentReg"/>
    </string>

    <!--Сообщения по статусам -->
    <string name="stateCommentWarn" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'signature') && #this.signature?.lastRefuseInfo?.comment != null ? #this.signature.lastRefuseInfo.comment:
          T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'signatureContracts') && #this.signatureContracts?.ours?.state?.comment != null ? #this.signatureContracts.ours.state.comment:
          T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'registration') && #this.registration?.state?.comment != null ? #this.registration.state.comment:'']]></script>
      </calc-values>
    </string>
    <string name="stateCommentLabelWarn" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'signature') && #this.signature?.lastRefuseInfo?.comment != null ? 'Причина отказа в подписании:':
         T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'signatureContracts') && #this.signatureContracts?.ours?.state?.comment != null?  'Причина отказа в подписании:':
         T(ru.intertrust.cmj.rest.tuning.expressions.TuningFunctions).isObjectContains(#this, 'registration') && #this.registration?.state?.comment != null?  'Причина отказа в регистрации:':'']]></script>
      </calc-values>
    </string>
    <string name="stateCommentInfo" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.regStateStatusSent && #this.dialogueCommentReg!= null? #this.dialogueCommentReg:
        #this.isOnSign && #this.dialogueComment != null? #this.dialogueComment:'']]></script>
      </calc-values>
    </string>
    <string name="stateCommentLabelInfo" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.regStateStatusSent && #this.dialogueCommentReg!= null?'Повторная отправка на регистрацию:':
        #this.isOnSign && #this.dialogueComment != null?'Повторная отправка на подписание:':'']]></script>
      </calc-values>
    </string>
    <boolean name="showStateCommentWarn" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.stateCommentWarn != ''?true:false]]></script>
      </calc-values>
    </boolean>
    <boolean name="showStateCommentInfo" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.stateCommentInfo != ''?true:false]]></script>
      </calc-values>
    </boolean>

    <custom-event-handler lang="JavaScript"><![CDATA[importClass(Packages.ru.intertrust.cmj.dp._stdimpl.dao.entity.rkk.full.RKKF);
importClass(Packages.ru.intertrust.cmj.dp.DPM);
importClass(Packages.ru.intertrust.cmj.dp.DPMOutput);
importClass(Packages.ru.intertrust.cmj.dp.DPMContracts);
importClass(Packages.ru.intertrust.cmj.rest.tuning.TuningHelper);
importClass(Packages.ru.intertrust.cmj.dp._stdimpl.operations.entity.rkk.full.RKKFSigningOnRework);

importClass(Packages.ru.intertrust.cmj.af.apre.approving.ARApplicationApproving);
importClass(Packages.ru.intertrust.cmj.af.apre.approving.ARHasApproving);
importClass(Packages.ru.intertrust.cmj.af.core.AFSession);
importClass(Packages.ru.intertrust.cmj.af.core.AFCMDomino);

importClass(Packages.ru.intertrust.cmj.af.pkd.EventCode);
importClass(Packages.ru.intertrust.cmj.pkd.domain.PkdEntity);
importClass(Packages.ru.intertrust.cmj.pkd.domain.events.EventEntity);
importClass(Packages.ru.intertrust.cmj.pkd.session.TaskChangeInfo);
importClass(Packages.ru.intertrust.cmj.pkd.session.PkdSession);
importClass(Packages.ru.intertrust.cmj.tunable.object.common.TunableObjectHelper);

importPackage(Packages.java.util);
importPackage(Packages.java.lang);

function querySave(object, document) {

    var f_read = TunableObjectHelper.getAFInstanceValue(object.tuning().getValues().get("f_read_allowbyctx"));
    if (f_read != null && !f_read.isEmpty()) {
      object.setLinkAccessDisabled(true);
    }

    if (object.isDeleted()) {
        return true;
    }

   var values = object.tuning().getValues();

   var needDropSignRecalled = false;
   var needDrop = false;
   var needDropAfterApproving = false;

   var isSigningReject = false;
   var isRegistrationReject = false;

   if (object.isDeleted()) {
      needDropSignRecalled = true;
   }

   if (object instanceof DPM.RKK.HasSigning) {
      //отправка на подпись
      if (object.signing().getState() == DPM.RKK.HasSigning.Signing.State.SENT && !document.getItemValueString("SendToSign").equals("1")) {
         needDrop = true;
         needDropSignRecalled = true;
      }
      //подписание
      if (object.signing().getState() == DPM.RKK.HasSigning.Signing.State.SIGNED && !document.getItemValueString("Signed").equals("1")) {
         needDrop = true;
         needDropSignRecalled = true;
      }
      //отзыв с подписания
      if (object.signing().getState() == null && document.getItemValueString("SendToSign").equals("1")) {
         var bUnsignWithRework = TunableObjectHelper.getBooleanValue(object.tuning(), "UnsignWithRework");
         // не был сделан кнопкой "Отозвать+версия"
         if (!bUnsignWithRework) {
            needDrop = true;
            object.signing().setSignIsRecalled(true);
         }
      }
      isSigningReject = !document.getItemValueString("Otkaz").equals("") && object.signing().state == DPM.RKK.HasSigning.Signing.State.REJECTED;
   }

   if (object instanceof RKKF) {
      //отправка на регистрацию
      if (object.registration().getState() == DPM.RKK.Registration.State.SENT && !document.getItemValueString("RegProc").equals("1")) {
         needDrop = true;
         needDropSignRecalled = true;
      }
      //регистрация
      if (object.registration().isSaveWithRegistration) {
         needDrop = true;
         needDropSignRecalled = true;
      }
      isRegistrationReject = !document.getItemValueString("OtkazReg").equals("") && object.registration().getState() == DPM.RKK.Registration.State.REJECTED;
   }

   var executors = null;
   if (object instanceof DPM.RKKOrRKKTemplate.HasExecutors) {
      executors = object.executors().getList();
   } else if (object instanceof DPMContracts.Entity.HasResponsiblesAndPreparedBy) {
      executors = object.preparedBy().getList();
   }
   var curUserIsExecOrAuthor = (executors!=null && AFSession.get().currentUser()!=null && AFSession.get().currentUser().isSubstituteOfAny(executors))||
   (object.getAuthor()!=null && AFSession.get().currentUser().getBeard().getUNID().equals(object.getAuthor().getUNID()));

   var isSystemSession = AFSession.get().isRunSystemSessionFromUserSession() || AFSession.get().isRunAsSystem() || AFSession.get().isRunWithFakeUser();
   var isAfterApproving = (object instanceof ARHasApproving)?object.approving().isAfterApproving():false;
   var isOnRework = object.isOnRework();
   var showOnReworkButton = values.get("showOnReworkButton") != null && values.get("showOnReworkButton").getValue();
   var isClerk = object.tuning().getValues().get("curUserIsClerk") != null && object.tuning().getValues().get("curUserIsClerk").getValue();
   var medoGateState = (object instanceof DPMOutput.RKK)?object.getMedoGateState():null;
   var isMedoSent = medoGateState != null && medoGateState == 2;

    if (needDrop || (isAfterApproving && !isSystemSession && showOnReworkButton)) {
        needDropAfterApproving = true;
    }
    if (isAfterApproving && needDropAfterApproving) {
       var code = "AFAP1_11";
      var taskOwner = object.getAuthor();
      var objectForTask = object;

      // снять статус "Обработка согласования"
      object.approving().setIsAfterApproving(false);
      var application = AFSession.get().getApplication(ARApplicationApproving.class);
        var parentReplica = object.getUNID().split(":")[0];
        var approvingDbReplica = AFCMDomino.getDbReplicaIdByIdentNear(AFCMDomino.AFDB_SYSTEM_ID_APPROVING, parentReplica);
        var lists = application.findARListsApprovingCorp(object.getUNID(), approvingDbReplica);
        if (!lists.isEmpty() && lists.get(lists.size() - 1) != null) {
            taskOwner = lists.get(lists.size() - 1).getAuthor();
            objectForTask = lists.get(lists.size() - 1);
        }

      //выполнить задачу "Обработка согласования"
      var taskChangeInfo = new TaskChangeInfo(objectForTask, taskOwner, EventCode.getByString(code),
                     PkdEntity.EventStatus.COMPLETED, EventEntity.TaskEntity.Status.NONE, TaskChangeInfo.NONE_FORMAT);
      var pkdSession = new PkdSession();
      pkdSession.changeProcessStatus(taskChangeInfo);

   }

   if (isOnRework && needDrop) {
      var code = "RWRK1_11";
      var taskOwner = object.getAuthor();
      var objectForTask = object;

      object.setOnRework(false);

      //выполнить задачу "На доработке"
      var taskChangeInfo = new TaskChangeInfo(objectForTask, taskOwner, EventCode.getByString(code),
                     PkdEntity.EventStatus.COMPLETED, EventEntity.TaskEntity.Status.NONE, TaskChangeInfo.NONE_FORMAT);
      var pkdSession = new PkdSession();
      pkdSession.changeProcessStatus(taskChangeInfo);
   }

   if (needDropSignRecalled && (object instanceof DPM.RKK.HasSigning)) {
      object.signing().setSignIsRecalled(false);
   }


   if (showOnReworkButton && curUserIsExecOrAuthor && !isOnRework && !isMedoSent &&
        (document.getItemValue("version").get(0)==Double.valueOf(object.versionInfo.getVersion())) &&
        (isSigningReject || isRegistrationReject || isAfterApproving)) {
      object.setOnRework(true);
      var onReworkHandler = new RKKFSigningOnRework(object);
      onReworkHandler.onBeforeSave();

      if (object.registration() != null && object.registration().getState() != null && object.registration().getState().toString() == "REJECTED") {
		    var taskChangeInfo = new TaskChangeInfo(object, AFSession.get().currentUser().getBeard(), EventCode.getByString("RGST1_21"),
						   PkdEntity.EventStatus.COMPLETED, EventEntity.TaskEntity.Status.NONE, TaskChangeInfo.NONE_FORMAT);
		    var pkdSession = new PkdSession();
		    pkdSession.changeProcessStatus(taskChangeInfo);
	    }

	    if (object.signing() != null && object.signing().getState() != null && object.signing().getState() == DPM.RKK.HasSigning.Signing.State.REJECTED) {
		    var taskChangeInfo = new TaskChangeInfo(object, AFSession.get().currentUser().getBeard(), EventCode.getByString("SIGN1_21"),
						   PkdEntity.EventStatus.COMPLETED, EventEntity.TaskEntity.Status.NONE, TaskChangeInfo.NONE_FORMAT);
		    var pkdSession = new PkdSession();
		    pkdSession.changeProcessStatus(taskChangeInfo);
	    }
   }

    return true;
}]]></custom-event-handler>
  </schema>
</schemas>