<collection name="OutputDocs_(project_medo)" idField="id" replace="runtime">
    <prototype>
        <![CDATA[
            SELECT
  id,
  created_date,
  Module,
  self_1,
  self_2,
  self_3,
  hasAttachments,
  icon,
  signerName,
  docDate,
  reqType,
  addresseesName,
  executorName,
  subject,
  extSendWay
FROM (
       SELECT
         rkkbase.id                                          AS id,
         rkkbase.created_date                                AS created_date,
         rkkbase.module                                      AS Module,
         '<id>'                                              AS self_1,
         ':'                                                 AS self_2,
         '</>'                                               AS self_3,
         (SELECT string_agg(s.dispatchType, ', ')
            FROM (select DISTINCT dispatchType from F_DP_OutputRkk_Sender
            where F_DP_OutputRkk_Sender.owner = rkkbase.id and F_DP_OutputRkk_Sender.dispatchType <> '' limit 4) s
         )
         || (SELECT CASE when (SELECT count(*) FROM (select DISTINCT dispatchType from F_DP_OutputRkk_Sender
            where F_DP_OutputRkk_Sender.owner = rkkbase.id and F_DP_OutputRkk_Sender.dispatchType <> '') s) > 4
            then '...' ELSE '' END)                                                                     AS extSendWay,
         (SELECT coalesce(max(a), cast(0 AS SMALLINT))
          FROM (
                 SELECT cast(1 AS SMALLINT) a
                 FROM f_ContentFiles_Rkk CF
                 WHERE CF.f_dp_rkkbase = rkk.id
                 UNION SELECT cast(1 AS SMALLINT)
                       FROM f_ContentRichText_Rkk CRT
                       WHERE CRT.f_dp_rkkbase = rkk.id
                 UNION SELECT cast(1 AS SMALLINT)
                       FROM f_VerifyImage_Rkk VI
                       WHERE VI.f_dp_rkk = rkk.id
               ) t
         )                                                   AS hasAttachments,

         CASE
          WHEN outputrkk.ApprIsUnder = '1' THEN '<iconHint>На согласовании</><iconId>26</>'
          WHEN rkkworeg.rvz_link is not null and (rkkworeg.rvz_processed is null or rkkworeg.rvz_processed = 0) THEN '<iconHint>На утверждении</><iconId>38</>'
          WHEN outputrkk.SignIsSentTo = 1 THEN '<iconHint>Отправлен на подписание</><iconId>23</>'
          WHEN outputrkk.SignIsRejected = 1 THEN '<iconHint>В подписи отказано</><iconId>22</>'
          WHEN outputrkk.SignIsSigned = 1 THEN '<iconHint>Подписано</><iconId>21</>'
          WHEN rkk.RegIsInProcess = 1 THEN '<iconHint>На регистрации</><iconId>31</>'
          WHEN rkk.RegIsRejected = 1 THEN '<iconHint>В регистрации отказано</><iconId>32</>'
          ELSE ''
          END                                                                    as icon,

         coalesce(signer.orig_shortname, '') AS signerName,

               coalesce(
                  (SELECT
                      CASE WHEN regplace.orig_shortname IS NULL THEN 'Не указано'
                      ELSE regplace.orig_shortname
                      END
                  FROM so_beard RegPlace
                  WHERE RegPlace.id = rkkbase.RegCode),
                  CASE WHEN rkkbase.RegCode IS NULL THEN 'Не указано' END
              )  AS regPlace,
         rkk.regdate                                         AS docDate,
         rkkbase.type                                        AS reqType,
         (
                            SELECT string_agg(CASE
	                            WHEN beard.orig_shortname IS NULL
	                                THEN 'Физическое лицо'
	                            ELSE beard.orig_shortname
	                            END || '->' || (
		                            SELECT (string_agg(CASE
		                                        WHEN orig_type = 10 or addr.addressee IS NULL
		                                            THEN 'Нет адресатов'
		                                        ELSE beard.orig_shortname
		                                        END, ', ')
		                            )
		                            FROM f_dp_outputrkk_orginfaddr addr
		                            LEFT JOIN so_beard beard ON beard.id = addr.addressee
		                            WHERE addr.OWNER = org.id
	                            ), '; ')
                            FROM f_dp_outputrkk_orginf org
                            LEFT JOIN so_beard beard ON beard.id = org.firmid
                            WHERE org.OWNER = outputrkk.id
         ) addresseesName,

         (SELECT coalesce(string_agg('<id>' || link.docreplid || ':' || link.docunid || '</>', ';'), '<id></>')
          FROM F_DP_RkkWORegAndCtrl_ULnk link
          WHERE link.owner = outputrkk.id)                   AS linkedDoc,
         rkkbase.subject                                     AS subject,
         (SELECT
                            DISTINCT
                         coalesce(
                             string_agg(
                                 '<id>'
                                 || substring(beardexec.cmjunid, 33, 48)
                                 || ':'
                                 || substring(beardexec.cmjunid, 1, 32)
                                 || '</><shortName>'
                                 || beardexec.Orig_ShortName
                                 || '</>', ';'
                             ),
                             '<id></><shortName></>'
                         )
                          FROM
                            F_DP_OutputRkk_Executor outputexec
                            LEFT JOIN so_beard beardexec ON beardexec.id = outputexec.Executor
                          WHERE outputexec.owner = outputrkk.id
                         )                                                AS executorName
       FROM
         F_DP_OutputRkk outputrkk
         JOIN f_dp_rkk rkk ON rkk.id = outputrkk.id
         JOIN f_dp_rkkbase rkkbase ON rkkbase.id = rkk.id
         join F_DP_OutputRkk_MedoOrg medoorg on medoorg.Owner = outputrkk.id
         LEFT JOIN so_beard signer ON signer.id = outputrkk.SignSigner
         LEFT JOIN F_DP_OutputRkk_OrgInf orgInf ON orgInf.Owner = outputrkk.id
         LEFT JOIN F_DP_OutputRkk_OrgInfAddr orgInfAddr ON orgInfAddr.owner = orgInf.id
         LEFT JOIN SO_Beard orgInfAddrBeard ON orgInfAddrBeard.id = orgInfAddr.Addressee
         LEFT JOIN f_dp_rkkworegandctrl rkkworeg ON rkkworeg.id = outputrkk.id
       WHERE
         rkk.RegNumCnt is null AND rkk.RegIsRejected <> 1 AND rkkbase.isdeleted <> 1
            AND exists(
                SELECT 1
                FROM f_dp_outputrkk_orginf AS org
                    LEFT JOIN SO_StructureUnit As unit ON unit.beard = org.firmid
                    LEFT JOIN so_orgdescriptionsys AS descr_sys ON descr_sys.orgsystem = unit.id
                    LEFT JOIN so_orgdescriptionnonsys AS descr_nonsys ON descr_nonsys.beard = org.firmid
                    JOIN SO_OrgDescription AS descr ON descr.id = coalesce(descr_sys.id, descr_nonsys.id)
                WHERE org.owner = outputrkk.id
                    AND descr.medoaddress != '' AND descr.medoaddress IS NOT NULL
                    AND descr.medoguid != '' AND descr.medoguid IS NOT NULL
                    AND descr.medoaddress != descr.medoguid
                    AND descr.id NOT IN (
                        SELECT inner_descr_sys.id
                        FROM Person
                            JOIN SO_PersonSys AS person_sys ON person.id = person_sys.platformperson
                            JOIN SO_OrgDescriptionSys AS inner_descr_sys ON inner_descr_sys.orgsystem = person_sys.organization
                        WHERE person.id = :CURRENT_PERSON
                    )
            )
     group by addresseesName, rkkbase.id, rkkbase.created_date, Module, self_1, self_2, self_3, hasAttachments,
  		icon, signerName, docDate, reqType, addresseesName, executorName, linkedDoc,
  		subject, regPlace
     ) t
WHERE 1=1 ::where-clause
            ]]>
    </prototype>
    <counting-prototype>
        <![CDATA[
            SELECT
                COUNT(1)
            FROM (
       SELECT
         rkkbase.id                                          AS id,
         rkkbase.created_date                                AS created_date,
         rkkbase.module                                      AS Module,

         coalesce(signer.orig_shortname, '') AS signerName
       FROM
         F_DP_OutputRkk outputrkk
         JOIN f_dp_rkk rkk ON rkk.id = outputrkk.id
         JOIN f_dp_rkkbase rkkbase ON rkkbase.id = rkk.id
         join F_DP_OutputRkk_MedoOrg medoorg on medoorg.Owner = outputrkk.id
         LEFT JOIN F_DP_OutputRkk_Executor resexec ON resexec.owner = outputrkk.id
         LEFT JOIN so_beard signer ON signer.id = outputrkk.SignSigner
       WHERE
         rkk.RegNumCnt is null AND rkk.RegIsRejected <> 1 AND rkkbase.isdeleted <> 1
            AND exists(
                SELECT 1
                FROM f_dp_outputrkk_orginf AS org
                    LEFT JOIN SO_StructureUnit As unit ON unit.beard = org.firmid
                    LEFT JOIN so_orgdescriptionsys AS descr_sys ON descr_sys.orgsystem = unit.id
                    LEFT JOIN so_orgdescriptionnonsys AS descr_nonsys ON descr_nonsys.beard = org.firmid
                    JOIN SO_OrgDescription AS descr ON descr.id = coalesce(descr_sys.id, descr_nonsys.id)
                WHERE org.owner = outputrkk.id
                    AND descr.medoaddress != '' AND descr.medoaddress IS NOT NULL
                    AND descr.medoguid != '' AND descr.medoguid IS NOT NULL
                    AND descr.medoaddress != descr.medoguid
                    AND descr.id NOT IN (
                        SELECT inner_descr_sys.id
                        FROM Person
                            JOIN SO_PersonSys AS person_sys ON person.id = person_sys.platformperson
                            JOIN SO_OrgDescriptionSys AS inner_descr_sys ON inner_descr_sys.orgsystem = person_sys.organization
                        WHERE person.id = :CURRENT_PERSON
                    )
            )
     ) t
    WHERE 1=1 ::where-clause
            ]]>
    </counting-prototype>
    <filter name="MODULE">
        <criteria placeholder="where-clause">
            <![CDATA[
                    Module = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="signerName">
        <criteria placeholder="where-clause">
            <![CDATA[
                    signerName = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="signerName_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    signerName ~* ('(^|\\W)'||{0})
                ]]>
        </criteria>
    </filter>
    <filter name="created_date">
        <criteria placeholder="where-clause">
            <![CDATA[
                    created_date = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="self">
        <criteria placeholder="where-clause">
            <![CDATA[
                    Module = {0} and id = {1}
                ]]>
        </criteria>
    </filter>
    <filter name="MODULE">
        <criteria placeholder="where-clause">
            <![CDATA[
                    Module = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="hasAttachments">
        <criteria placeholder="where-clause">
            <![CDATA[
                    hasAttachments = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="docDate">
        <criteria placeholder="where-clause">
            <![CDATA[
                    cast(docDate as date) = cast({0} as date)
                ]]>
        </criteria>
    </filter>
    <filter name="docDate_interval">
        <criteria placeholder="where-clause">
            <![CDATA[
              cast(docDate as date) >= cast({0} as date) and cast(docDate as date) <= cast({1} as date)
                ]]>
        </criteria>
    </filter>
    <filter name="reqType">
        <criteria placeholder="where-clause">
            <![CDATA[
                    reqType = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="reqType_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    reqType ~* ('(^|\\W)'||{0})
                ]]>
        </criteria>
    </filter>
    <filter name="addresseesName">
        <criteria placeholder="where-clause">
            <![CDATA[
                    addresseesName ~* ('(^|\\W)'||{0})
                ]]>
        </criteria>
    </filter>
    <filter name="subject_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    subject ~* ('(^|\\W)'||{0})
                ]]>
        </criteria>
    </filter>
    <filter name="created_date_L">
        <criteria placeholder="where-clause">
            <![CDATA[
                    created_date < {0}
                ]]>
        </criteria>
    </filter>
    <filter name="created_date_GE">
        <criteria placeholder="where-clause">
            <![CDATA[
                        created_date >= {0}
                ]]>
        </criteria>
    </filter>
    <filter name="created_date_Partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                        created_date LIKE {0}
                ]]>
        </criteria>
    </filter>
    <filter name="created_date_interval">
        <criteria placeholder="where-clause">
            <![CDATA[
              cast(created_date as date) >= cast({0} as date) and cast(created_date as date) <= cast({1} as date)
                ]]>
        </criteria>
    </filter>
    <filter name="executorName_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    executorName ~* ('(^|\W)'||{0})
                ]]>
        </criteria>
    </filter>
    <filter name="executorName">
        <criteria placeholder="where-clause">
            <![CDATA[
                    executorName = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="addresseesName_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    addresseesName ~* ('(^|\W)'||{0})
                ]]>
        </criteria>
    </filter>
    <filter name="linkedDoc">
        <criteria placeholder="where-clause">
            <![CDATA[
                    linkedDoc = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="extSendWay">
        <criteria placeholder="where-clause">
            <![CDATA[
                    extSendWay = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="extSendWay_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    extSendWay ~* ('(^|\W)'||{0})
                ]]>
        </criteria>
    </filter>
</collection>