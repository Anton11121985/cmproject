<collection name="ContractsLite_(vw_cmj_for_select_addagr)" idField="id" replace="runtime">
    <prototype>
        <![CDATA[
SELECT
   id,
  created_date,
  Module,
  self_1,
  self_2,
  self_3,
  rNumber,
  regNumberPar,
  concludedDatePar,
  regFullNumber,
  dogParty2,
  regDate,
  numberWOTags,
  hasAttachments,
  dogSignStatus,
  dogStatus,
  signer,
  linkedDoc,
  dogStatusNotAnIcon,
  subject,
  hasGriff,
  docnumber_tag,
  subject_tag,
  regDate_tag,
  numberWOTags as docNumber,
  numberWOTags || ', ' || regDate || ', ' || subject as description

FROM (
       SELECT
         rkkbase.id,
         rkkbase.created_date,
         rkkbase.module                      AS Module,
         '<id>'                              AS self_1,
         ':'                                 AS self_2,
         '</>'                               AS self_3,
         CASE
         WHEN rkk.regnumcnt IS NULL THEN 0
         ELSE rkk.regnumcnt
         END                                 AS rNumber,

         CASE
         WHEN rkk.regnumcnt IS NULL THEN '<regNumberPrefix>' || '</>'
                                         || '<regNumberCounter#Number>' || '</>' || '<regNumberSuffix>' || '</>'
         ELSE
           '<regNumberPrefix>' || coalesce(rkk.regnumprist, '') || '</>'
           || '<regNumberCounter#Number>' || coalesce(cast(rkk.regnumcnt AS VARCHAR), '') || '</>'
           || '<regNumberSuffix>' || coalesce(rkk.regnumfin, '') || '</>'
         END                                 AS regNumberPar,
         CASE
         WHEN rkk.regnumcnt IS NULL THEN ''
         ELSE
           coalesce(rkk.regnumprist, '') ||
           coalesce(cast(rkk.regnumcnt AS VARCHAR), '') ||
           coalesce(rkk.regnumfin, '')
         END                                 AS numberWOTags,
         '<docNumber>'                       AS docnumber_tag,
         '<subject>'                         AS subject_tag,
		 '<regDate>'                         AS regDate_tag,

         contractds.regdate                  AS concludedDatePar,
         contractds.regnumber                AS regFullNumber,
         contractds.regdate                  AS regDate,
         (SELECT
         coalesce(max(a), cast(0 AS SMALLINT))
          FROM (
                 SELECT
                   cast(1 AS SMALLINT) a
                 FROM f_ContentFiles_Rkk CF
                 WHERE CF.f_dp_rkkbase = rkkbase.id
                 UNION SELECT
                         cast(1 AS SMALLINT)
                       FROM f_ContentRichText_Rkk CRT
                       WHERE CRT.f_dp_rkkbase = rkkbase.id
                 UNION SELECT
                         cast(1 AS SMALLINT)
                       FROM f_VerifyImage_Rkk VI
                       WHERE VI.f_dp_rkk = rkk.id
               ) t
         )                                   AS hasAttachments,
         CASE
         WHEN contractcommon.CertIsCertified = 1 THEN 'VERIFIED'
         WHEN contractcommon.SignIsSigned = 1 THEN 'SIGNED'
         WHEN contractcommon.SignIsSentTo = 1 THEN 'ONSIGN'
         WHEN contractcommon.SignIsRejected = '1' THEN 'REFUSEDSIGN'
         ELSE ''
         END                                 AS dogSignStatus,
         CASE
         WHEN contractcommon.StatusDog = 'проект' THEN 'PROJECT'
         WHEN contractcommon.StatusDog = 'действующий' THEN 'ACTIVE'
         WHEN contractcommon.StatusDog = 'недействующий' THEN 'ARCHIVED'
         END                                 AS dogStatus,
          contractcommon.StatusDog as dogStatusNotAnIcon,
         CASE
         WHEN contractrkk.Party2Type = 1 THEN
           '<id>' ||
           coalesce(substring(sign2signer.cmjunid, 33, 48) || ':' || substring(sign2signer.cmjunid, 1, 32), '') || '</>'
         ELSE
           '<id>' ||
           coalesce(substring(party2ida.cmjunid, 33, 48) || ':' || substring(party2ida.cmjunid, 1, 32), '')
           || '</>'
         END
         || '<shortName>' ||
         CASE
         WHEN contractrkk.Party2IdB IS NULL AND contractrkk.Party2IdA IS NULL
         THEN '<Не указан>'
         WHEN party2idb.orig_shortName IS NOT NULL
         THEN party2idb.orig_shortName
         WHEN party2ida.orig_shortName IS NOT NULL
         THEN party2ida.orig_shortName
         END
         || '</>'
                                                                        AS dogParty2,

         (SELECT
         coalesce(
             string_agg(
                 '<id>' ||
                 coalesce(
                     nullif(substring(sgnr.cmjunid, 33, 48) || ':' || substring(sgnr.cmjunid, 1, 32), ':')
                     , ''
                 ) || '</><shortName>' ||
                 coalesce(
                     nullif(sgnr.orig_shortname, '')
                     , ''
                 )
                 || '</>'
                 , ',')
             , '<id></><shortName></>'
         )
          FROM so_beard sgnr
          WHERE sgnr.id = contractds.signsigner) AS signer,

         (SELECT
         coalesce(string_agg((case when link.doclinktype='' then '<id></>' else (coalesce('<id>' || link.docreplid || ':' || link.docunid || '</>','<id>' ||to_char(cast((module.id_type * 10^12) as bigint) + module.id, 'FM0000000000000000')|| ':00000000000000000000000000000000'|| '</>') )end), ';'),'<id></>')
          FROM F_DP_RkkWORegAndCtrl_ULnk link
          LEFT JOIN ss_module module ON module.id = rkkbase.module
          WHERE link.owner = contractrkk.id) AS linkedDoc,
         rkkbase.subject                     AS subject,
         case when rkkbase.security_stamp is not null then
             '<iconHint>Есть гриф</><iconId>165</>'
         else ''
         end AS hasGriff
       FROM
         f_dp_contractds contractds
         LEFT JOIN f_dp_contractcommon contractcommon ON contractcommon.id = contractds.id
         LEFT JOIN f_dp_contractrkk contractrkk ON contractrkk.id = contractcommon.hierroot
--rkk2
         LEFT JOIN f_dp_rkk rkk ON rkk.id = contractrkk.id
         LEFT JOIN f_dp_rkkbase rkkbase ON rkkbase.id = contractds.id
         LEFT JOIN SO_Beard sign2signer ON sign2signer.id = contractrkk.Sign2Signer
         LEFT JOIN f_dp_contractds_sgn2sgnid contractsigner ON contractsigner.owner = contractds.id
         LEFT JOIN so_beard party2idb ON contractrkk.Party2IdB = party2idb.id
         LEFT JOIN SO_Beard party2ida ON contractrkk.party2ida = party2ida.id
       WHERE rkkbase.isdeleted <> 1

     ) s
WHERE
  1 = 1
                    ::where-clause
            ]]>
    </prototype>
    <counting-prototype>
        <![CDATA[
            SELECT
            COUNT(*)
            FROM (
            SELECT
            rkkbase.id,
            rkkbase.created_date,
            rkkbase.module                      AS Module
             ,coalesce(rkk.regnumcnt, 0) AS rNumber
             ,contractds.regdate                  AS concludedDatePar
             ,contractds.regdate                  AS regDate
    FROM
    f_dp_contractds contractds
    LEFT JOIN f_dp_contractcommon contractcommon ON contractcommon.id = contractds.id
    LEFT JOIN f_dp_contractrkk contractrkk ON contractrkk.id = contractcommon.hierroot
    --rkk2
    LEFT JOIN f_dp_rkk rkk ON rkk.id = contractrkk.id
    LEFT JOIN f_dp_rkkbase rkkbase ON rkkbase.id = contractds.id
    WHERE rkkbase.isdeleted <> 1

    ) s
    WHERE
    1 = 1
            ::where-clause
    ]]>
    </counting-prototype>
    <filter name="MODULE">
        <criteria placeholder="where-clause">
            <![CDATA[
                    Module = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="self">
        <criteria placeholder="where-clause">
            <![CDATA[
                    Module = {0} and id = {1}
                ]]>
        </criteria>
    </filter>
    <filter name="rNumber">
        <criteria placeholder="where-clause">
            <![CDATA[
                    rNumber = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="rNumber_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    rNumber iLIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="rNumber_L">
        <criteria placeholder="where-clause">
            <![CDATA[
                	rNumber < {0}
                ]]>
        </criteria>
    </filter>
    <filter name="rNumber_GE">
        <criteria placeholder="where-clause">
            <![CDATA[
                    	rNumber >= {0}
                ]]>
        </criteria>
    </filter>
    <filter name="rNumber_Partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    	rNumber LIKE {0}
                ]]>
        </criteria>
    </filter>
    <filter name="regNumberPar">
        <criteria placeholder="where-clause">
            <![CDATA[
                    numberWOTags = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="regNumberPar_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    numberWOTags iLIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="regFullNumber">
        <criteria placeholder="where-clause">
            <![CDATA[
                    regFullNumber = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="regFullNumber_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    regFullNumber iLIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="regDate_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                     ('б/д' ilike '%'||{0}||'%' and (regDate is null))
                ]]>
        </criteria>
    </filter>
    <filter name="concludedDatePar">
        <criteria placeholder="where-clause">
            <![CDATA[
                    cast(concludedDatePar as date) = cast({0} as date)
                ]]>
        </criteria>
    </filter>
    <filter name="concludedDatePar_L">
        <criteria placeholder="where-clause">
            <![CDATA[
                    cast(coalesce(concludedDatePar, '2199-12-31') as date) < cast({0} as date)
                ]]>
        </criteria>
    </filter>
    <filter name="concludedDatePar_GE">
        <criteria placeholder="where-clause">
            <![CDATA[
                    cast(coalesce(concludedDatePar, '2199-12-31') as date) >= cast({0} as date)
                ]]>
        </criteria>
    </filter>
    <filter name="concludedDatePar_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                     ('б/д' ilike '%'||{0}||'%' and (concludedDatePar is null))
                ]]>
        </criteria>
    </filter>
    <filter name="regDate">
        <criteria placeholder="where-clause">
            <![CDATA[
                    cast(regDate as date) = cast({0} as date)
                ]]>
        </criteria>
    </filter>
    <filter name="hasAttachments">
        <criteria placeholder="where-clause">
            <![CDATA[
                    hasAttachments = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="dogSignStatus">
        <criteria placeholder="where-clause">
            <![CDATA[
                    dogSignStatus = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="dogStatus">
        <criteria placeholder="where-clause">
            <![CDATA[
                    dogStatus = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="dogStatus_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    dogStatusNotAnIcon iLIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="signer">
        <criteria placeholder="where-clause">
            <![CDATA[
                    signer = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="signer_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    signer iLIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="linkedDoc">
        <criteria placeholder="where-clause">
            <![CDATA[
                    linkedDoc = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="subject">
        <criteria placeholder="where-clause">
            <![CDATA[
                    subject = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="subject_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    subject iLIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="dogParty2_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    dogParty2 iLIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
</collection>