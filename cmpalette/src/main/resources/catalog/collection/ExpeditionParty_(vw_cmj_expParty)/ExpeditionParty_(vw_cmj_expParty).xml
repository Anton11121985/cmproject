<collection name="ExpeditionParty_(vw_cmj_expParty)" idField="id" replace="runtime">
    <prototype>
        <![CDATA[
			SELECT
				id,
				created_date,
				Module,
				hasAttachments,
				self_1,
				self_2,
				self_3,
				regPlace,
				state,
				rNumber,
				number,
				docNumber,
				postServiceNumber,
				docSendDate
			FROM ( SELECT
			  rkkbase.id,
				rkkbase.created_date,
				rkkbase.module                                   AS Module,
				'<id>'                                           AS self_1,
				':'                                              AS self_2,
				'</>'                                            AS self_3,
				(SELECT
				coalesce(max(a), cast(0 AS SMALLINT))
				FROM (
				SELECT
					cast(1 AS SMALLINT) a
					FROM f_ContentFiles_Rkk CF
					WHERE CF.f_dp_rkkbase = rkk.id
					UNION SELECT
					cast(1 AS SMALLINT)
					FROM f_ContentRichText_Rkk CRT
					WHERE CRT.f_dp_rkkbase = rkk.id
					UNION SELECT
					cast(1 AS SMALLINT)
					FROM f_VerifyImage_Rkk VI
					WHERE VI.f_dp_rkk = rkk.id
					) t
				) AS hasAttachments,

			coalesce(
				 (SELECT
							CASE WHEN regplace.orig_shortname IS NULL THEN 'Не указано'
									 ELSE regplace.orig_shortname
									END
					FROM so_beard RegPlace
					WHERE RegPlace.id = rkkbase.RegCode),
				 CASE WHEN rkkbase.RegCode IS NULL THEN 'Не указано' END
			)  AS regPlace,

			coalesce( (SELECT tfs.value
				FROM tn_field_string tfs
			 left join tn_field tf on tf.owner=rkk.id
				WHERE tf.id = tfs.id and tf.cmjfield ilike '%' || 'patry_status' || '%'
			), 'Не указано')  AS state,

		   coalesce( (SELECT tfs.value
				FROM tn_field_string tfs
			 left join tn_field tf on tf.owner=rkk.id
				WHERE tf.id = tfs.id and tf.cmjfield ilike '%' || 'postServiceNumber' || '%'
			), 'Не указано')  AS postServiceNumber,

		    to_char((SELECT tfd.value
				FROM tn_field_dateonly tfd left join tn_field tf on tf.owner=rkk.id
				WHERE tf.id = tfd.id and tf.cmjfield like '%date_shipment%'
		    ), 'YYYY-MM-DD')  AS docSendDate,

			rkk.regnumcnt AS rNumber,
			coalesce(rkk.prjnumprist, '')|| coalesce(cast(rkk.prjnumcounter as varchar), '') ||  coalesce(rkk.prjnumfin , '') AS number,

			(SELECT tfs.value
				FROM tn_field_string tfs left join tn_field tf on tf.owner=rkk.id
				WHERE tf.id = tfs.id and tf.cmjfield ilike '%' || 'docNumber' || '%'
			)  AS docNumber

			FROM   f_dp_intrkk internalrkk
						JOIN f_dp_rkk rkk ON rkk.id = InternalRkk.id
						JOIN f_dp_rkkbase rkkbase ON rkkbase.id = rkk.id
			where rkkbase.isdeleted = 0) s
			WHERE 1=1
			::where-clause
		]]>
    </prototype>
    <counting-prototype>
        <![CDATA[
			SELECT
				COUNT(1)
			FROM ( SELECT
			  rkkbase.id,
				rkkbase.created_date,
				rkkbase.module                                   AS Module,
				'<id>'                                           AS self_1,
				':'                                              AS self_2,
				'</>'                                            AS self_3,
				(SELECT
				coalesce(max(a), cast(0 AS SMALLINT))
				FROM (
				SELECT
					cast(1 AS SMALLINT) a
					FROM f_ContentFiles_Rkk CF
					WHERE CF.f_dp_rkkbase = rkk.id
					UNION SELECT
					cast(1 AS SMALLINT)
					FROM f_ContentRichText_Rkk CRT
					WHERE CRT.f_dp_rkkbase = rkk.id
					UNION SELECT
					cast(1 AS SMALLINT)
					FROM f_VerifyImage_Rkk VI
					WHERE VI.f_dp_rkk = rkk.id
					) t
				) AS hasAttachments,

			coalesce(
				 (SELECT
							CASE WHEN regplace.orig_shortname IS NULL THEN 'Не указано'
									 ELSE regplace.orig_shortname
									END
					FROM so_beard RegPlace
					WHERE RegPlace.id = rkkbase.RegCode),
				 CASE WHEN rkkbase.RegCode IS NULL THEN 'Не указано' END
			)  AS regPlace,

			coalesce( (SELECT tfs.value
				FROM tn_field_string tfs
			 left join tn_field tf on tf.owner=rkk.id
				WHERE tf.id = tfs.id and tf.cmjfield ilike '%' || 'patry_status' || '%'
			), 'Не указано')  AS state,

			coalesce( (SELECT tfs.value
				FROM tn_field_string tfs
			 left join tn_field tf on tf.owner=rkk.id
				WHERE tf.id = tfs.id and tf.cmjfield ilike '%' || 'postServiceNumber' || '%'
			), 'Не указано')  AS postServiceNumber,

			rkk.regnumcnt AS rNumber,

			prjnumcounter AS number,

			to_char((SELECT tfd.value
				FROM tn_field_dateonly tfd left join tn_field tf on tf.owner=rkk.id
				WHERE tf.id = tfd.id and tf.cmjfield like '%date_shipment%'
		    ), 'YYYY-MM-DD')  AS docSendDate,

			(SELECT tfs.value
				FROM tn_field_string tfs left join tn_field tf on tf.owner=rkk.id
				WHERE tf.id = tfs.id and tf.cmjfield ilike '%' || 'docNumber' || '%'
			)  AS docNumber

			FROM   f_dp_intrkk internalrkk
						JOIN f_dp_rkk rkk ON rkk.id = InternalRkk.id
						JOIN f_dp_rkkbase rkkbase ON rkkbase.id = rkk.id
			where rkkbase.isdeleted = 0) s
			WHERE 1=1
			::where-clause
		]]>
    </counting-prototype>
    <filter name="MODULE">
        <criteria placeholder="where-clause">
            <![CDATA[
                    Module = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="created_date">
        <criteria placeholder="where-clause">
            <![CDATA[
                    created_date = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="self">
        <criteria placeholder="where-clause">
            <![CDATA[
                    Module = {0} and id = {1}
                ]]>
        </criteria>
    </filter>
    <filter name="rNumber">
        <criteria placeholder="where-clause">
            <![CDATA[
                    rNumber = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="rNumber_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    rNumber iLIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="number">
        <criteria placeholder="where-clause">
            <![CDATA[
                    number = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="number_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
					number ilike '%'||{0}||'%'
			]]>
        </criteria>
    </filter>
    <filter name="docSendDate">
        <criteria placeholder="where-clause">
            <![CDATA[
				 cast(docSendDate as date) = cast({0} as date)
			]]>
        </criteria>
    </filter>
    <filter name="state">
        <criteria placeholder="where-clause">
            <![CDATA[
                    state = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="state_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                   state ilike '%'||{0}||'%'
                ]]>
        </criteria>
    </filter>
    <filter name="postServiceNumber">
        <criteria placeholder="where-clause">
            <![CDATA[
                    postServiceNumber = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="postServiceNumber_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                   postServiceNumber ilike '%'||{0}||'%'
                ]]>
        </criteria>
    </filter>
</collection>