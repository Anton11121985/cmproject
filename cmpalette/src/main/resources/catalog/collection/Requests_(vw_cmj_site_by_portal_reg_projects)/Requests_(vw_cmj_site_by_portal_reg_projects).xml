<collection name="Requests_(vw_cmj_site_by_portal_reg_projects)" idField="id" replace="runtime">
    <prototype>
        <![CDATA[
           SELECT
  id,
  created_date,
  Module,
  self_1,
  self_2,
  self_3,
  rNumber,
  regNumber,
  numberWOTags,
  regDate,
  hasAttachments,
  regPlace,
  correspondent,
  addressInfo,
  question,
  linkedDoc,
  subject,
  documentStatus,
  reSolution,
  rkkExecutionStatus,
  resOfRkkExecutionStatus,
  addresseesName,
  projectNumber
FROM (
       SELECT
         coalesce(rkk.regnumprist, '') ||
            coalesce(cast(rkk.regnumcnt as varchar), '') ||
            coalesce(rkk.regnumfin, '') AS numberWOTags,
         request.id                         AS id,
         rkkbase.created_date               AS created_date,
         rkkbase.module                     AS Module,
         '<id>'                             AS self_1,
         ':'                                AS self_2,
         '</>'                              AS self_3,
        CASE
        WHEN (rkk.CtrlDateExecution IS NOT NULL AND Date(rkk.CtrlDeadLine) < Date(rkk.CtrlDateExecution)) THEN 'RKKExpiredExecuted'
         WHEN (rkk.CtrlDateExecution IS NOT NULL) THEN 'executed'
         WHEN (request.CtrlState = '1' AND Date(rkk.CtrlDeadLine) < Date(now())) THEN 'RKKSpecExpired'
         WHEN (request.CtrlState = '2' AND Date(rkk.CtrlDeadLine) < Date(now())) THEN 'RKKExpired'
         WHEN request.CtrlState = '1' THEN 'onSpecControl'
         WHEN request.CtrlState = '2' THEN 'onControl'
         WHEN (request.CtrlState = '3' AND Date(rkk.CtrlDeadLine) < Date(now())) THEN 'RKKQueryExpired'
         WHEN request.CtrlState = '3' THEN 'onQueryControl'
         ELSE ''
         END                  AS               rkkExecutionStatus,
         (SELECT
         coalesce(max(a), cast(0 AS SMALLINT))
          FROM (
                 SELECT
                   cast(1 AS SMALLINT) a
                 FROM f_ContentFiles_Rkk CF
                 WHERE CF.f_dp_rkkbase = rkk.id
                 UNION SELECT
                         cast(1 AS SMALLINT)
                       FROM f_ContentRichText_Rkk CRT
                       WHERE CRT.f_dp_rkkbase = rkk.id
                 UNION SELECT
                         cast(1 AS SMALLINT)
                       FROM f_VerifyImage_Rkk VI
                       WHERE VI.f_dp_rkk = rkk.id
               ) t
         )                                  AS hasAttachments,

                (
		 CASE
		 WHEN AuthorType = '2' THEN 'Без ФИО и адреса'
		 WHEN (request.corr IS NOT NULL) THEN (
    '<id>'||case when request.CorrLastName<>'' then(
	coalesce(
	    nullif((SELECT substring(SO_Beard.cmjunid, 33, 48) || ':' || substring(SO_Beard.cmjunid, 1, 32) FROM SO_Beard WHERE SO_Beard.id = request.Corr), ':'),
            nullif(nullif('$' || (SELECT substring(SO_Beard.cmjunid, 1, 32) FROM SO_Beard WHERE SO_Beard.id = request.Corr), '$'),''),
        nullif((SELECT substring(SO_Beard.cmjunid, 33, 48) || ':' || substring(SO_Beard.cmjunid, 1, 32) FROM SO_Beard WHERE SO_Beard.id = request.CorrOrganization), ':'), '')
    ||'</>'||'<shortName>'||
        CASE
            WHEN request.typerequest = 2 THEN --Юр. лицо, Выводим организацию
              coalesce( (select coalesce(orgname, orig_shortname) from so_beard where id = request.CorrOrganization),'')
	        WHEN AuthorType = '0' THEN  coalesce(request.CorrLastName, '') || ' ' || coalesce(substring(nullif(request.CorrFirstName, ''), 1, 1) || '. ', '')  ||
	            coalesce(substring(nullif(request.CorrMiddleName, ''), 1, 1) || '. ', '')
            WHEN AuthorType = '1' THEN coalesce(request.CorrLastName, '')
            WHEN AuthorType = '2' THEN 'Без ФИО и адреса'
            WHEN AuthorType = '3' THEN request.CorrLastName
            ELSE ''
        END) else
	coalesce(
	    nullif((SELECT substring(SO_Beard.cmjunid, 33, 48) || ':' || substring(SO_Beard.cmjunid, 1, 32) FROM SO_Beard WHERE SO_Beard.id = request.CorrOrganization), ':'),
            nullif('$' || (SELECT substring(SO_Beard.cmjunid, 1, 32) FROM SO_Beard WHERE SO_Beard.id = request.CorrOrganization), '$'),'')
    ||'</>'||'<shortName>'||coalesce((SELECT coalesce(orgname, orig_shortname) FROM SO_Beard WHERE id = request.CorrOrganization),'') end ||'</>'
    )
					end) AS correspondent,
         CASE WHEN request.city != '' AND request.city IS NOT NULL THEN request.city
         WHEN request.city = '' THEN request.locality
         WHEN request.locality != '' AND request.locality IS NOT NULL THEN request.locality
         END                                AS addressInfo,

         rkk.regnumcnt                      AS rNumber,
         '<regNumberPrefix>' || coalesce(rkk.regnumprist, '') || '</>'
         || '<regNumberCounter#Number>' || coalesce(cast(rkk.regnumcnt AS VARCHAR), '') || '</>'
         || '<regNumberSuffix>' || coalesce(rkk.regnumfin, '') || '</>'
                                            AS regNumber,

         rkk.regDate                        AS regDate,
         CASE
                         WHEN (request.resolutionsstate = 'complete') THEN 'Завершен'
                         WHEN (request.resolutionsstate = 'control') THEN 'На контроле'
                         WHEN (request.resolutionsstate = 'old') THEN 'Просрочен'
                         WHEN (request.resolutionsstate = 'work') THEN 'В работе'
                         ELSE ''
                         END                  AS               documentStatus,
         request.solution AS reSolution,

        CASE
         WHEN (request.resolutionsstate = 'complete') THEN 'executed'
         WHEN (request.resolutionsstate = 'control') THEN 'onControl'
         WHEN (request.resolutionsstate = 'old') THEN 'expired'
         WHEN (request.resolutionsstate = 'work') THEN 'exist'
         ELSE ''
         END                  AS               resOfRkkExecutionStatus,

         (SELECT
         string_agg(
         q.Question,';' )
    FROM F_DP_RequestRkk_Question q
    WHERE q.owner = request.id
         )                AS question,
         (SELECT
         coalesce(string_agg(coalesce('<id>' || link.docreplid || ':' || link.docunid || '</>', '<id></>'), ';'), '<id></>')
          FROM F_DP_RkkWORegAndCtrl_ULnk link
          WHERE link.owner = request.id)    AS linkedDoc,
         rkkbase.subject                    AS subject,

         CASE
         WHEN (RegPlace.orig_ShortName IS NULL) THEN 'Не указано'
         ELSE RegPlace.orig_ShortName
         END                                AS regPlace,
         (
            select string_agg(so_beard.orig_shortname, ', ')
            from f_dp_requestrkk_addressee
            JOIN so_beard ON so_beard.id = f_dp_requestrkk_addressee.Addressee
            where f_dp_requestrkk_addressee.owner = request.id
         ) AS addresseesName,
         concat(rkk.prjnumprist, rkk.prjnumcounter, rkk.prjnumfin) as projectNumber

		 FROM F_DP_RequestRkk request
             LEFT JOIN f_dp_rkkbase rkkbase ON rkkbase.id = request.id
             LEFT JOIN f_dp_rkk rkk ON rkk.id = request.id
             LEFT JOIN so_beard RegPlace ON RegPlace.id = rkkbase.RegCode
             JOIN Tn_Field field ON rkkbase.id_type = field.owner_type AND rkkbase.id = field.owner
             JOIN Tn_Field_String fs ON field.id = fs.id
		 WHERE rkk.regnumcnt IS NULL
		    AND rkkbase.IsDeleted <> 1
		    AND field.cmjfield = 'Tn$_receiveWay'
            AND (fs.value = 'Портал' OR rkkbase.sourceDesc='OG_SITE')
     ) s
WHERE
  1 = 1 ::where-clause
            ]]>
    </prototype>
    <counting-prototype>
        <![CDATA[
                SELECT
                    COUNT(*)
                FROM (
                    SELECT
                        request.id                         AS id,
                        rkkbase.created_date               AS created_date,
                        rkkbase.module                     AS Module,
                        CASE
                            WHEN (RegPlace.orig_ShortName IS NULL) THEN 'Не указано'
                            ELSE RegPlace.orig_ShortName
                        END                                AS regPlace
                 FROM F_DP_RequestRkk request
                     LEFT JOIN f_dp_rkkbase rkkbase ON rkkbase.id = request.id
                     LEFT JOIN f_dp_rkk rkk ON rkk.id = request.id
                     LEFT JOIN so_beard RegPlace ON RegPlace.id = rkkbase.RegCode
                     JOIN Tn_Field field ON rkkbase.id_type = field.owner_type AND rkkbase.id = field.owner
                     JOIN Tn_Field_String fs ON field.id = fs.id
                 WHERE rkk.regnumcnt IS NULL
                    AND rkkbase.IsDeleted <> 1
                    AND field.cmjfield = 'Tn$_receiveWay'
                    AND (fs.value = 'Портал' OR rkkbase.sourceDesc='OG_SITE')
                ) s
                WHERE
                    1 = 1
                	::where-clause
        	]]>
    </counting-prototype>
    <filter name="id">
        <criteria placeholder="where-clause">
            1=1
        </criteria>
    </filter>
    <filter name="MODULE">
        <criteria placeholder="where-clause">
            <![CDATA[
                    Module = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="regPlace_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    regPlace iLIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="created_date">
        <criteria placeholder="where-clause">
            <![CDATA[
                    cast(created_date as date) = cast({0} as date)
                ]]>
        </criteria>
    </filter>
    <filter name="created_date_interval">
        <criteria placeholder="where-clause">
            <![CDATA[
                  cast(created_date as date) >= cast({0} as date) and cast(created_date as date) <= cast({1} as date)
                    ]]>
        </criteria>
    </filter>
    <filter name="correspondent">
        <criteria placeholder="where-clause">
            <![CDATA[
                    correspondent = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="correspondent_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    correspondent iLIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="addressInfo">
        <criteria placeholder="where-clause">
            <![CDATA[
                    addressInfo = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="addressInfo_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    addressInfo iLIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="question">
        <criteria placeholder="where-clause">
            <![CDATA[
                            question = {0}
                        ]]>
        </criteria>
    </filter>
    <filter name="question_Partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    question LIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="Subject">
        <criteria placeholder="where-clause">
            <![CDATA[
                        Subject = {0}
                    ]]>
        </criteria>
    </filter>
    <filter name="subject_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                   subject iLIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="correspondent_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    correspondent ilike '%'||{0}||'%'
                ]]>
        </criteria>
    </filter>
    <filter name="rNumber">
        <criteria placeholder="where-clause">
            <![CDATA[
                        rNumber = {0}
                    ]]>
        </criteria>
    </filter>
    <filter name="rNumber_L">
        <criteria placeholder="where-clause">
            <![CDATA[
                        rNumber < {0}
                    ]]>
        </criteria>
    </filter>
    <filter name="rNumber_GE">
        <criteria placeholder="where-clause">
            <![CDATA[
                            rNumber >= {0}
                    ]]>
        </criteria>
    </filter>
    <filter name="regNumber">
        <criteria placeholder="where-clause">
            <![CDATA[
                        regnumber = {0}
                    ]]>
        </criteria>
    </filter>
    <filter name="regNumber_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                        numberWOTags iLIKE ('%'||{0}||'%')
                    ]]>
        </criteria>
    </filter>
    <filter name="regNumber_L">
        <criteria placeholder="where-clause">
            <![CDATA[
                        regNumber < {0}
                    ]]>
        </criteria>
    </filter>
    <filter name="regNumber_GE">
        <criteria placeholder="where-clause">
            <![CDATA[
                            regNumber >= {0}
                    ]]>
        </criteria>
    </filter>
    <filter name="regNumber__Partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                            regNumber iLIKE {0}
                    ]]>
        </criteria>
    </filter>
    <filter name="addresseesName">
        <criteria placeholder="where-clause">
            <![CDATA[
                        addresseesName = {0}
                    ]]>
        </criteria>
    </filter>
    <filter name="addresseesName_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                        addresseesName iLIKE ('%'||{0}||'%')
                    ]]>
        </criteria>
    </filter>
</collection>
