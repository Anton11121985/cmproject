<collection name="Requests_(vw_cmj_personal_reception_projects)" idField="id" replace="runtime">
    <prototype>
        <![CDATA[
           SELECT
  id,
  receipt_date,
  created_date,
  Module,
  isMEDO,
  self_1,
  self_2,
  self_3,
  rNumber,
  hasAttachments,
  regPlace,
  correspondent,
  addressInfo,
  question,
  linkedDoc,
  subject,
  addresseesName,
  projectNumber
FROM (
       SELECT
         request.id                         AS id,
         rkkbase.created_date               AS receipt_date,
         rkkbase.created_date               AS created_date,
         rkkbase.module                     AS Module,
         case when rkkbase.Medo_Doc_Guid<>'' then '<iconHint>МЭДО</><iconId>122</>' else '' end AS isMEDO,
         '<id>'                             AS self_1,
         ':'                                AS self_2,
         '</>'                              AS self_3,

         (SELECT
         coalesce(max(a), cast(0 AS SMALLINT))
          FROM (
                 SELECT
                   cast(1 AS SMALLINT) a
                 FROM f_ContentFiles_Rkk CF
                 WHERE CF.f_dp_rkkbase = rkk.id
                 UNION SELECT
                         cast(1 AS SMALLINT)
                       FROM f_ContentRichText_Rkk CRT
                       WHERE CRT.f_dp_rkkbase = rkk.id
                 UNION SELECT
                         cast(1 AS SMALLINT)
                       FROM f_VerifyImage_Rkk VI
                       WHERE VI.f_dp_rkk = rkk.id
               ) t
         )                                  AS hasAttachments,

    (
    '<id>'||case when request.CorrLastName<>'' then(
	coalesce(
	    nullif((SELECT substring(SO_Beard.cmjunid, 33, 48) || ':' || substring(SO_Beard.cmjunid, 1, 32) FROM SO_Beard WHERE SO_Beard.id = request.Corr), ':'),
            nullif(nullif('$' || (SELECT substring(SO_Beard.cmjunid, 1, 32) FROM SO_Beard WHERE SO_Beard.id = request.Corr), '$'),''),
        nullif((SELECT substring(SO_Beard.cmjunid, 33, 48) || ':' || substring(SO_Beard.cmjunid, 1, 32) FROM SO_Beard WHERE SO_Beard.id = request.CorrOrganization), ':'), '')
    ||'</>'||'<shortName>'||
        CASE
	        WHEN AuthorType = '0' THEN  coalesce(request.CorrLastName, '') || ' ' || coalesce(substring(nullif(request.CorrFirstName, ''), 1, 1) || '. ', '')  ||
	            coalesce(substring(nullif(request.CorrMiddleName, ''), 1, 1) || '. ', '')
            WHEN request.typerequest = 2 THEN --Юр. лицо, Выводим организацию
              coalesce( (select coalesce(orgname, orig_shortname) from so_beard where id = request.CorrOrganization),'')
            WHEN AuthorType = '1' THEN coalesce(request.CorrLastName, '')
            WHEN AuthorType = '2' THEN 'Без ФИО и адреса'
            WHEN AuthorType = '3' THEN request.CorrLastName
            ELSE ''
        END) else
	coalesce(
	    nullif((SELECT substring(SO_Beard.cmjunid, 33, 48) || ':' || substring(SO_Beard.cmjunid, 1, 32) FROM SO_Beard WHERE SO_Beard.id = request.CorrOrganization), ':'),
            nullif('$' || (SELECT substring(SO_Beard.cmjunid, 1, 32) FROM SO_Beard WHERE SO_Beard.id = request.CorrOrganization), '$'),'')
    ||'</>'||'<shortName>'||coalesce((SELECT coalesce(orgname, orig_shortname) FROM SO_Beard WHERE id = request.CorrOrganization),'') end ||'</>'
    ) AS correspondent,

    coalesce(
         CASE
           WHEN request.typerequest = 2 THEN --Юр. лицо, Выводим район/город из карточки организации
             coalesce(
               (SELECT coalesce(city,locality) from SO_AddressData addrData
                JOIN SO_AddressData_Org_F addrDataF ON addrData.id=addrDataF.id
                WHERE addrDataF.owner = (select id from SO_OrgDescriptionNonsys where beard = request.CorrOrganization ) ),
               (SELECT coalesce(city,locality) from SO_AddressData addrData
                JOIN SO_AddressData_Org_J addrDataJ ON addrData.id=addrDataJ.id
                WHERE addrDataJ.owner = (select id from SO_OrgDescriptionNonsys where beard = request.CorrOrganization ) ),
                '')
           WHEN request.city != '' AND request.city IS NOT NULL THEN request.city
           WHEN request.city = ''  and request.locality != '' AND request.locality IS NOT NULL THEN request.locality
         END,'')                               AS addressInfo,

         rkk.regnumcnt                      AS rNumber,

         (SELECT
         string_agg(
         q.Question,';' )
    FROM F_DP_RequestRkk_Question q
    WHERE q.owner = request.id
         )                AS question,
         (SELECT
         coalesce(string_agg((case when link.doclinktype='' then '<id></>' else (coalesce('<id>' || link.docreplid || ':' || link.docunid || '</>','<id>' ||to_char(cast((module.id_type * 10^12) as bigint) + module.id, 'FM0000000000000000')|| ':00000000000000000000000000000000'|| '</>') )end), ';'),'<id></>')
          FROM F_DP_RkkWORegAndCtrl_ULnk link
          LEFT JOIN ss_module module ON module.id = rkkbase.module
          WHERE link.owner = request.id) AS linkedDoc,
         rkkbase.subject                    AS subject,

         CASE
         WHEN (RegPlace.orig_ShortName IS NULL) THEN 'Не указано'
         ELSE RegPlace.orig_ShortName
         END                                AS regPlace,

         (select string_agg(so_beard.orig_shortname, ', ')
         from f_dp_requestrkk_addressee
         LEFT JOIN so_beard ON so_beard.id = f_dp_requestrkk_addressee.Addressee
         where f_dp_requestrkk_addressee.owner = request.id
         ) AS addresseesName,
         concat(rkk.prjnumprist, rkk.prjnumcounter, rkk.prjnumfin) as projectNumber

       FROM F_DP_RequestRkk request
         LEFT JOIN f_dp_rkkbase rkkbase ON rkkbase.id = request.id
         LEFT JOIN f_dp_rkk rkk ON rkk.id = request.id
         LEFT JOIN so_beard RegPlace ON RegPlace.id = rkkbase.RegCode
       WHERE rkk.regnumcnt IS NULL AND rkkbase.IsDeleted <> 1  AND request.appealwayfield = 'Устные/Личный прием'

     ) s
WHERE
  1 = 1
                	::where-clause

            ]]>
    </prototype>
    <counting-prototype>
        <![CDATA[
                SELECT
                    COUNT(*)
FROM (
       SELECT
         request.id                         AS id,
         rkkbase.created_date               AS created_date,
         rkkbase.module                     AS Module,
         case when rkkbase.Medo_Doc_Guid<>'' then '<iconHint>МЭДО</><iconId>122</>' else '' end AS isMEDO,
         '<id>'                             AS self_1,
         ':'                                AS self_2,
         '</>'                              AS self_3,

         (SELECT
         coalesce(max(a), cast(0 AS SMALLINT))
          FROM (
                 SELECT
                   cast(1 AS SMALLINT) a
                 FROM f_ContentFiles_Rkk CF
                 WHERE CF.f_dp_rkkbase = rkk.id
                 UNION SELECT
                         cast(1 AS SMALLINT)
                       FROM f_ContentRichText_Rkk CRT
                       WHERE CRT.f_dp_rkkbase = rkk.id
                 UNION SELECT
                         cast(1 AS SMALLINT)
                       FROM f_VerifyImage_Rkk VI
                       WHERE VI.f_dp_rkk = rkk.id
               ) t
         )                                  AS hasAttachments,

    (
    '<id>'||case when request.CorrLastName<>'' then(
	coalesce(
	    nullif((SELECT substring(SO_Beard.cmjunid, 33, 48) || ':' || substring(SO_Beard.cmjunid, 1, 32) FROM SO_Beard WHERE SO_Beard.id = request.Corr), ':'),
            nullif(nullif('$' || (SELECT substring(SO_Beard.cmjunid, 1, 32) FROM SO_Beard WHERE SO_Beard.id = request.Corr), '$'),''),
        nullif((SELECT substring(SO_Beard.cmjunid, 33, 48) || ':' || substring(SO_Beard.cmjunid, 1, 32) FROM SO_Beard WHERE SO_Beard.id = request.CorrOrganization), ':'), '')
    ||'</>'||'<shortName>'||
        CASE
	        WHEN AuthorType = '0' THEN  coalesce(request.CorrLastName, '') || ' ' || coalesce(substring(nullif(request.CorrFirstName, ''), 1, 1) || '. ', '')  ||
	            coalesce(substring(nullif(request.CorrMiddleName, ''), 1, 1) || '. ', '')
            WHEN request.typerequest = 2 THEN --Юр. лицо, Выводим организацию
              coalesce( (select coalesce(orgname, orig_shortname) from so_beard where id = request.CorrOrganization),'')
            WHEN AuthorType = '1' THEN coalesce(request.CorrLastName, '')
            WHEN AuthorType = '2' THEN 'Без ФИО и адреса'
            WHEN AuthorType = '3' THEN request.CorrLastName
            ELSE ''
        END) else
	coalesce(
	    nullif((SELECT substring(SO_Beard.cmjunid, 33, 48) || ':' || substring(SO_Beard.cmjunid, 1, 32) FROM SO_Beard WHERE SO_Beard.id = request.CorrOrganization), ':'),
            nullif('$' || (SELECT substring(SO_Beard.cmjunid, 1, 32) FROM SO_Beard WHERE SO_Beard.id = request.CorrOrganization), '$'),'')
    ||'</>'||'<shortName>'||coalesce((SELECT coalesce(orgname, orig_shortname) FROM SO_Beard WHERE id = request.CorrOrganization),'') end ||'</>'
    ) AS correspondent,

    coalesce(
         CASE
           WHEN request.typerequest = 2 THEN --Юр. лицо, Выводим район/город из карточки организации
             coalesce(
               (SELECT coalesce(city,locality) from SO_AddressData addrData
                JOIN SO_AddressData_Org_F addrDataF ON addrData.id=addrDataF.id
                WHERE addrDataF.owner = (select id from SO_OrgDescriptionNonsys where beard = request.CorrOrganization ) ),
               (SELECT coalesce(city,locality) from SO_AddressData addrData
                JOIN SO_AddressData_Org_J addrDataJ ON addrData.id=addrDataJ.id
                WHERE addrDataJ.owner = (select id from SO_OrgDescriptionNonsys where beard = request.CorrOrganization ) ),
                '')
           WHEN request.city != '' AND request.city IS NOT NULL THEN request.city
           WHEN request.city = ''  and request.locality != '' AND request.locality IS NOT NULL THEN request.locality
         END,'')                               AS addressInfo,

         rkk.regnumcnt                      AS rNumber,

         (SELECT
         string_agg(
         q.Question,';' )
    FROM F_DP_RequestRkk_Question q
    WHERE q.owner = request.id
         )                AS question,
         (SELECT
         coalesce(string_agg((case when link.doclinktype='' then '<id></>' else (coalesce('<id>' || link.docreplid || ':' || link.docunid || '</>','<id>' ||to_char(cast((module.id_type * 10^12) as bigint) + module.id, 'FM0000000000000000')|| ':00000000000000000000000000000000'|| '</>') )end), ';'),'<id></>')
          FROM F_DP_RkkWORegAndCtrl_ULnk link
          LEFT JOIN ss_module module ON module.id = rkkbase.module
          WHERE link.owner = request.id) AS linkedDoc,
         rkkbase.subject                    AS subject,

         CASE
         WHEN (RegPlace.orig_ShortName IS NULL) THEN 'Не указано'
         ELSE RegPlace.orig_ShortName
         END                                AS regPlace,

         (select string_agg(so_beard.orig_shortname, ', ')
         from f_dp_requestrkk_addressee
         LEFT JOIN so_beard ON so_beard.id = f_dp_requestrkk_addressee.Addressee
         where f_dp_requestrkk_addressee.owner = request.id
         ) AS addresseesName

       FROM F_DP_RequestRkk request

         LEFT JOIN f_dp_rkkbase rkkbase ON rkkbase.id = request.id
         LEFT JOIN f_dp_rkk rkk ON rkk.id = request.id
         LEFT JOIN so_beard RegPlace ON RegPlace.id = rkkbase.RegCode
       WHERE rkk.regnumcnt IS NULL AND rkkbase.IsDeleted <> 1  AND request.appealwayfield = 'Устные/Личный прием'

     ) s
WHERE
  1 = 1
                	::where-clause
        	]]>
    </counting-prototype>
    <filter name="id">
        <criteria placeholder="where-clause">
            1=1
        </criteria>
    </filter>
    <filter name="MODULE">
        <criteria placeholder="where-clause">
            <![CDATA[
                    Module = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="regPlace">
        <criteria placeholder="where-clause">
            <![CDATA[
                    regPlace = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="regPlace_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    regPlace iLIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="regPlace_L">
        <criteria placeholder="where-clause">
            <![CDATA[
                	regPlace < {0}
                ]]>
        </criteria>
    </filter>
    <filter name="regPlace_GE">
        <criteria placeholder="where-clause">
            <![CDATA[
                    	regPlace >= {0}
                ]]>
        </criteria>
    </filter>
    <filter name="regPlace__Partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    	regPlace LIKE ({0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="rNumber_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    	rNumber iLIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="correspondent_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    	correspondent iLIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="addressInfo_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    addressInfo iLIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="question_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    question iLIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="subject_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    subject iLIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="addresseesName_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    UPPER(addresseesName) LIKE UPPER('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
</collection>
