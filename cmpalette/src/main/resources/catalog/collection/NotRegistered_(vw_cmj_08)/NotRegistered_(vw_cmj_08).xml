<collection name="NotRegistered_(vw_cmj_08)" idField="id" replace="runtime">
    <prototype>
        <![CDATA[
                 SELECT
                  id,
                  created_date,
                  Module,
                  hasAttachments,
                  rkkExecutionStatus,
                  resOfRkkExecutionStatus,
                  self_1,
                  self_2,
                  self_3,
                  docNumber,
                  docDate,
                  regNumber,
                  rNumber,
                  correspondentOrganization,
                  linkedDoc,
                  subject
                FROM (
                       SELECT
                         rkkbase.id,
                         rkkbase.created_date,
                         rkkbase.module                                                 AS Module,
                         (SELECT
                         coalesce(max(a), cast(0 AS SMALLINT))
                          FROM (
                                 SELECT
                                   cast(1 AS SMALLINT) a
                                 FROM f_ContentFiles_Rkk CF
                                 WHERE CF.f_dp_rkkbase = rkk.id
                                 UNION SELECT
                                         cast(1 AS SMALLINT)
                                       FROM f_ContentRichText_Rkk CRT
                                       WHERE CRT.f_dp_rkkbase = rkk.id
                                 UNION SELECT
                                         cast(1 AS SMALLINT)
                                       FROM f_VerifyImage_Rkk VI
                                       WHERE VI.f_dp_rkk = rkk.id
                               ) t
                         )                                                              AS hasAttachments,
                         CASE
                         WHEN (rkk.CtrlDateExecution IS NOT NULL) THEN 'executed'
                         WHEN (rkk.CtrlDeadline IS NOT NULL AND Date(rkk.CtrlDeadline) < Date(now())) THEN 'RKKExpired'
                         WHEN (rkk.RkkCtrlState > 0) THEN 'onControl'
                         ELSE ''
                         END                                                            AS rkkExecutionStatus,
                         CASE
                         WHEN (inputrkk.resolutionsstate = 'complete') THEN 'executed'
                         WHEN (inputrkk.resolutionsstate = 'control') THEN 'onControl'
                         WHEN (inputrkk.resolutionsstate = 'old') THEN 'expired'
                         WHEN (inputrkk.resolutionsstate = 'work') THEN 'exist'
                         ELSE ''
                         END                                                            AS resOfRkkExecutionStatus,
                         '<id>'                                                         AS self_1,
                         ':'                                                            AS self_2,
                         '</>'                                                          AS self_3,
                         '<regNumberPrefix>' || coalesce(rkk.regnumprist, '') || '</>'
                         || '<regNumberCounter#Number>' || coalesce(cast(rkk.regnumcnt AS VARCHAR), '') || '</>'
                         || '<regNumberSuffix>' || coalesce(rkk.regnumfin, '') || '</>' AS regNumber,
                         rkk.regnumcnt rNumber,
                         CASE
                         WHEN inputrkk.foreignnumber IS NULL THEN 'н/у'
                         ELSE inputrkk.foreignnumber
                         END                                                            AS docNumber,
                         CASE
                          WHEN inputrkk.foreignregdate  is null then date('1900-01-01')
                          ELSE inputrkk.foreignregdate
                          END AS docDate,
                        coalesce((
                                SELECT '<id>' || coalesce(nullif(inputrkk.fromsorepid, '$'), nullif('$' || (substring(firmid.cmjunid, 1, 32)), '$')) || '</><shortName>' || firmid.orig_shortname || '</>' --Корреспондент Организация
                                FROM so_beard firmid
                                WHERE firmid.id = inputrkk.fromid
                            ),
                            (
                                SELECT string_agg('<id>' ||  nullif(substring(userFromId.cmjunid, 33, 48) || ':' || substring(userFromId.cmjunid, 1, 32), ':') || '</>'
                                    || '<shortName>' || coalesce(userFromId.orig_shortname, '') || '</>'
                                , '')
                                FROM f_dp_inputrkk_author inputrkk_author
                                LEFT JOIN so_beard userFromId ON userFromId.id = inputrkk_author.author
                                WHERE inputrkk_author.OWNER = inputrkk.id
                                --Корреспондент физическое лицо
                            ),
                            (
                                SELECT string_agg('<id></><shortName>' || coalesce(nullif(inputrkk_authorplain.authorplain, ''), 'Не указан') || '</>', '')
                                FROM F_DP_InputRkk_AuthorPlain inputrkk_authorplain
                                WHERE inputrkk_authorplain.OWNER = inputrkk.id
                                --Корреспондент физическое лицо(Автор из справочника физических лиц) или не указан(Вводим в ручную)
                            ),
                            '<id></><shortName></>'
                        ) AS correspondentOrganization,

                         (SELECT
                            coalesce(string_agg((case when link.doclinktype='' then '<id></>' else (coalesce('<id>' || link.docreplid || ':' || link.docunid || '</>','<id>' ||to_char(cast((module.id_type * 10^12) as bigint) + module.id, 'FM0000000000000000')|| ':00000000000000000000000000000000'|| '</>') )end), ';'),'<id></>')
                         FROM F_DP_RkkWORegAndCtrl_ULnk link
                         LEFT JOIN ss_module module ON module.id = rkkbase.module
                         WHERE link.owner = rkk.id) AS linkedDoc,
                         rkkbase.subject AS subject
                       FROM f_dp_inputrkk inputrkk
                         JOIN f_dp_rkk rkk ON rkk.id = inputrkk.id
                         JOIN f_dp_rkkbase rkkbase ON rkkbase.id = rkk.id
                       WHERE
                            rkkbase.isdeleted <> 1
                     ) s
                WHERE
                  1 = 1
                    ::where-clause
            ]]>
    </prototype>
    <counting-prototype>
        <![CDATA[
                SELECT
                  COUNT(1)
                FROM (
                       SELECT
                         rkkbase.id,
                         rkkbase.created_date,
                         rkkbase.module                                                 AS Module,
                         (SELECT
                         coalesce(max(a), cast(0 AS SMALLINT))
                          FROM (
                                 SELECT
                                   cast(1 AS SMALLINT) a
                                 FROM f_ContentFiles_Rkk CF
                                 WHERE CF.f_dp_rkkbase = rkk.id
                                 UNION SELECT
                                         cast(1 AS SMALLINT)
                                       FROM f_ContentRichText_Rkk CRT
                                       WHERE CRT.f_dp_rkkbase = rkk.id
                                 UNION SELECT
                                         cast(1 AS SMALLINT)
                                       FROM f_VerifyImage_Rkk VI
                                       WHERE VI.f_dp_rkk = rkk.id
                               ) t
                         )                                                              AS hasAttachments,
                         CASE
                         WHEN (rkk.CtrlDateExecution IS NOT NULL) THEN 'executed'
                         WHEN (rkk.CtrlDeadline IS NOT NULL AND Date(rkk.CtrlDeadline) < Date(now())) THEN 'RKKExpired'
                         WHEN (rkk.RkkCtrlState > 0) THEN 'onControl'
                         ELSE ''
                         END                                                            AS rkkExecutionStatus,
                         CASE
                         WHEN (inputrkk.resolutionsstate = 'complete') THEN 'executed'
                         WHEN (inputrkk.resolutionsstate = 'control') THEN 'onControl'
                         WHEN (inputrkk.resolutionsstate = 'old') THEN 'expired'
                         WHEN (inputrkk.resolutionsstate = 'work') THEN 'exist'
                         ELSE ''
                         END                                                            AS resOfRkkExecutionStatus,
                         '<regNumberPrefix>' || coalesce(rkk.regnumprist, '') || '</>'
                         || '<regNumberCounter#Number>' || coalesce(cast(rkk.regnumcnt AS VARCHAR), '') || '</>'
                         || '<regNumberSuffix>' || coalesce(rkk.regnumfin, '') || '</>' AS regNumber,

                         CASE
                         WHEN inputrkk.foreignnumber IS NULL THEN 'н/у'
                         ELSE inputrkk.foreignnumber
                         END                                                            AS docNumber,

                         coalesce(inputrkk.foreignregdate, date('1900-01-01'))          AS docDate,

                        coalesce((
                                SELECT '<id>' || coalesce(nullif(inputrkk.fromsorepid, '$'), nullif('$' || (substring(firmid.cmjunid, 1, 32)), '$')) || '</><shortName>' || firmid.orig_shortname || '</>' --Корреспондент Организация
                                FROM so_beard firmid
                                WHERE firmid.id = inputrkk.fromid
                            ),
                            (
                                SELECT string_agg('<id>' ||  nullif(substring(userFromId.cmjunid, 33, 48) || ':' || substring(userFromId.cmjunid, 1, 32), ':') || '</>'
                                    || '<shortName>' || coalesce(userFromId.orig_shortname, '') || '</>'
                                , '')
                                FROM f_dp_inputrkk_author inputrkk_author
                                LEFT JOIN so_beard userFromId ON userFromId.id = inputrkk_author.author
                                WHERE inputrkk_author.OWNER = inputrkk.id
                                --Корреспондент физическое лицо
                            ),
                            (
                                SELECT string_agg('<id></><shortName>' || coalesce(nullif(inputrkk_authorplain.authorplain, ''), 'Не указан') || '</>', '')
                                FROM F_DP_InputRkk_AuthorPlain inputrkk_authorplain
                                WHERE inputrkk_authorplain.OWNER = inputrkk.id
                                --Корреспондент физическое лицо(Автор из справочника физических лиц) или не указан(Вводим в ручную)
                            ),
                            '<id></><shortName></>'
                        ) AS correspondentOrganization,

                         rkkbase.subject                                                AS subject
                       FROM f_dp_inputrkk inputrkk
                         JOIN f_dp_rkk rkk ON rkk.id = inputrkk.id
                         JOIN f_dp_rkkbase rkkbase ON rkkbase.id = rkk.id
                       WHERE
                         rkkbase.isdeleted <> 1
                     ) s
                WHERE
                  1 = 1
                ::where-clause
            ]]>
    </counting-prototype>
    <filter name="MODULE">
        <criteria placeholder="where-clause">
            <![CDATA[
                    Module = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="docNumber">
        <criteria placeholder="where-clause">
            <![CDATA[
                    docNumber = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="docDate">
        <criteria placeholder="where-clause">
            <![CDATA[
                    cast(docDate as date) = cast({0} as date)
                ]]>
        </criteria>
    </filter>
    <filter name="docDate_L">
        <criteria placeholder="where-clause">
            <![CDATA[
                    cast(docDate as date) < cast({0} as date)
                ]]>
        </criteria>
    </filter>
    <filter name="docDate_partial"> <!-- Функционал фильра другой, но называть их по как хочется не разрешает схема валидации -->
        <criteria placeholder="where-clause">
            <![CDATA[
                     ('б/д' ilike '%'||{0}||'%' and (docDate is null))
                ]]>
        </criteria>
    </filter>
    <filter name="docDate_GE">
        <criteria placeholder="where-clause">
            <![CDATA[
                    cast(docDate as date) >= cast({0} as date)
                ]]>
        </criteria>
    </filter>
    <filter name="hasAttachments">
        <criteria placeholder="where-clause">
            <![CDATA[
                    hasAttachments = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="rkkExecutionStatus">
        <criteria placeholder="where-clause">
            <![CDATA[
                    rkkExecutionStatus = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="resOfRkkExecutionStatus">
        <criteria placeholder="where-clause">
            <![CDATA[
                    rkkOfRkkExecutionStatus = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="self">
        <criteria placeholder="where-clause">
            <![CDATA[
                    Module = {0} and id = {1}
                ]]>
        </criteria>
    </filter>
    <filter name="regNumber">
        <criteria placeholder="where-clause">
            <![CDATA[
                    regNumber = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="correspondentOrganization">
        <criteria placeholder="where-clause">
            <![CDATA[
                    correspondentOrganization = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="correspondentOrganization_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    correspondentOrganization ~* ('(^|\W)*'||trim({0}))
                ]]>
        </criteria>
    </filter>
    <filter name="linkedDoc">
        <criteria placeholder="where-clause">
            <![CDATA[
                    linkedDoc = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="subject">
        <criteria placeholder="where-clause">
            <![CDATA[
                    subject = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="subject_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    subject ~* ('(^|\W)*'||trim({0}))
                ]]>
        </criteria>
    </filter>
    <filter name="regNumber_L">
        <criteria placeholder="where-clause">
            <![CDATA[
                    regNumber < {0}
                ]]>
        </criteria>
    </filter>
    <filter name="regNumber_GE">
        <criteria placeholder="where-clause">
            <![CDATA[
                        regNumber >= {0}
                ]]>
        </criteria>
    </filter>
    <filter name="regNumber_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                        regNumber ~* ('(^|\W)*'||trim({0}))
                ]]>
        </criteria>
    </filter>
    <filter name="docNumber_L">
        <criteria placeholder="where-clause">
            <![CDATA[
                	docNumber < {0}
                ]]>
        </criteria>
    </filter>
    <filter name="docNumber_GE">
        <criteria placeholder="where-clause">
            <![CDATA[
                    	docNumber >= {0}
                ]]>
        </criteria>
    </filter>
    <filter name="docNumber_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    	docNumber ~* ('(^|\W)*'||trim({0}))
                ]]>
        </criteria>
    </filter>
</collection>