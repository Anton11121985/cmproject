<collection name="Missions_(by_stage)" idField="id" replace="runtime">
    <prototype>
        <![CDATA[
        WITH approveIssueFixing as (
                    SELECT "replica"
                    FROM SS_Module sm
                    JOIN ss_moduletype sm_type ON sm_type.id = sm."type" AND sm_type.id_type = sm."type_type"
                    WHERE alias = 'ApproveIssueFixing')
    SELECT
        id,
        self_1,
        self_2,
        self_3,
        Module,
        created_date,
        hasGriff,
        hasAttachments,
        projectNumber,
        projectNumberCounter,
        regNumber,
        registrationNumberCounter,
        regDate,
        reqType,
        signerName,
        subject,
        linkedDoc,
        regPlace,
        executorName,
        theme,
        stageStatus,
        fullRegNumber
    FROM (
     with tempTable as (
             SELECT ordrstate, id
             FROM (
                      SELECT 'На ознакомлении' AS ordrstate,
                             ordrkk.id
                      FROM f_dp_ordrkk ordrkk
                               JOIN f_dp_rkk rkk ON rkk.id = ordrkk.id
				      WHERE rkk.reviewisunder = 1
                      UNION ALL
                      SELECT CASE
                                 WHEN (rkk.regnumcnt IS NOT NULL) THEN 'Зарегистрирован'
                                 WHEN (rkk.regisinprocess = 1) THEN 'На регистрации'
                                 WHEN (rkk.regisrejected = 1) THEN 'Отказано в регистрации'
                                 WHEN (rkk.isonrework = 1) THEN 'На доработке'
                                 END AS ordrstate,
                             ordrkk.id
                      FROM f_dp_ordrkk ordrkk
                               JOIN f_dp_rkk rkk ON rkk.id = ordrkk.id
                      UNION ALL
                      SELECT CASE
                                 WHEN (ordrkk.signissigned = 1) THEN 'Подписан'
                                 WHEN (ordrkk.signissentto = 1) THEN 'На подписании'
                                 WHEN (ordrkk.signisrejected = 1) THEN 'В подписании отказано'
                                 WHEN (ordrkk.signissentto = 0 and ordrkk.signsenttodt is not null)
                                     THEN 'Отозван с подписания'
                                 END AS ordrstate,
                             ordrkk.id
                      FROM f_dp_ordrkk ordrkk
                      UNION ALL
                      SELECT CASE
                                 WHEN (ordrkk.appraddstatus = 'APPROVED_COMMENTS' or ordrkk.appraddstatus = 'APPROVED_POSITIVE' and exists (select 1
                                       from apr_voresult vo
                                       where vo.HierRoot = ordrkk.id and IsVisa = 1 and not interruptedBy is null
                                       LIMIT 1
                                      ))
                                     THEN 'Снятие замечаний завершено или прекращено'
                                 WHEN ordrkk.isAfterApproving = 1 THEN 'Обработка согласования'
                                 WHEN (ordrkk.apprisunder = 1 and (ordrkk.appraddstatus = 'APPROVED_POSITIVE'
                                     or ordrkk.appraddstatus = 'APPROVED_COMMENTS')) THEN 'Снятие замечаний'
                                 WHEN (ordrkk.apprisunder = 1) THEN 'На согласовании'
                                 END AS ordrstate,
                             ordrkk.id
                      FROM f_dp_ordrkk ordrkk
                      UNION ALL
                      SELECT CASE
                                 WHEN (rkk.ctrldateexecution IS NOT NULL) THEN 'Исполнен'
                                 WHEN (SELECT COUNT(*) FROM F_DP_Resolution resRkk
                     WHERE rkk.id = resRkk.HierRoot AND resRkk.ctrldateexecution is null
                       AND rkk.ctrldateexecution is null AND resRkk.isproject <> 1) > 0 THEN 'На исполнении'
                                 END AS ordrstate,
                             ordrkk.id
                      FROM f_dp_ordrkk ordrkk
                               JOIN f_dp_rkk rkk ON rkk.id = ordrkk.id
                  ) s WHERE ordrstate is not null
             )
         SELECT
             rkkbase.id                                             AS id,
             rkkbase.created_date                                   AS created_date,
             rkkbase.type                                           AS reqType,
             rkkbase.module                                         AS Module,
             '<id>'                                                 AS self_1,
             ':'                                                    AS self_2,
             '</>'                                                  AS self_3,
             rkk.regdate                                            AS regDate,
case when rkkbase.security_stamp is not null then
                             '<iconHint>Есть гриф</><iconId>165</>'
             else ''
             end AS hasGriff,
(SELECT
                  coalesce(max(a), cast(0 AS SMALLINT))
              FROM (
                       SELECT
                           cast(1 AS SMALLINT) a
                       FROM f_ContentFiles_Rkk CF
                       WHERE CF.f_dp_rkkbase = rkk.id
                       UNION ALL SELECT
                           cast(1 AS SMALLINT)
                       FROM f_ContentRichText_Rkk CRT
                       WHERE CRT.f_dp_rkkbase = rkk.id
                       UNION ALL SELECT
                           cast(1 AS SMALLINT)
                       FROM f_VerifyImage_Rkk VI
                       WHERE VI.f_dp_rkk = rkk.id
                   ) t
             )                                                AS hasAttachments,
coalesce( ordrstate, 'Инициирование') AS stageStatus,
'<regNumberPrefix>' || coalesce(rkk.regnumprist, '') || '</>'
                 || '<regNumberCounter#Number>' || coalesce(cast(rkk.regnumcnt as varchar), '') || '</>'
                 || '<regNumberSuffix>' || coalesce(rkk.regnumfin, '') || '</>' AS regNumber,
rkk.regnumcnt                                                      AS registrationNumberCounter,
CASE
                 WHEN (rkkbase.signingmode = 0) THEN signerName.orig_shortname
                 ELSE
                     (SELECT array_to_string(array_agg(orig_shortname), ' ', '')
                     FROM F_DP_Rkk_SigningInfo
                         JOIN so_beard on F_DP_Rkk_SigningInfo.signer = So_beard.id
                     WHERE ordrkk.id = F_DP_Rkk_SigningInfo.owner)
                 END AS signerName,
rkkbase.subject                                                    AS subject,
(SELECT COALESCE(string_agg((CASE
                                            WHEN link.doclinktype = '' THEN '<id></>'
                                            ELSE (COALESCE(
                                                                    '<id>' || link.docreplid || ':' || link.docunid || '</>',
                                                                    '<id>' || to_char(
                                                                                cast((rkkbase.module_type * 10 ^ 12) as bigint) + rkkbase.module,
                                                                                'FM0000000000000000') ||
                                                                    ':00000000000000000000000000000000' || '</>')) END), ';'),
                            '<id></>')
            FROM F_DP_RkkWORegAndCtrl_ULnk link
            WHERE link.owner = rkk.id)                                         AS linkedDoc,
COALESCE((SELECT string_agg(beardExec.Orig_ShortName, ',') AS Orig_ShortName
              FROM f_dp_ordrkk_Executor ordexec
              LEFT JOIN so_beard beardExec ON beardExec.id = ordexec.Executor
              WHERE ordexec.owner = rkkbase.id), '<Не указано>')       AS executorName,
coalesce(
                     (SELECT
                          CASE WHEN regplace.orig_shortname IS NULL THEN 'Не указано'
                               ELSE regplace.orig_shortname
                              END
                      FROM so_beard RegPlace
                      WHERE RegPlace.id = rkkbase.RegCode),
                     CASE WHEN rkkbase.RegCode IS NULL THEN 'Не указано' END
                 )  AS regPlace,
concat(rkk.prjnumprist, rkk.prjnumcounter, rkk.prjnumfin) as projectNumber,
rkk.prjnumcounter                                         as projectNumberCounter,
(select
                  array_to_string(array_agg( theme), ';', '')
              from f_dp_rkkbase_theme themes
              where themes.owner = rkkbase.id) as theme,
coalesce(rkk.regnumprist, '') || coalesce(cast(rkk.regnumcnt as varchar), '') || coalesce(rkk.regnumfin, '') AS fullRegNumber
FROM
             f_dp_ordrkk ordrkk
                 NATURAL JOIN f_dp_rkk rkk
                 NATURAL JOIN f_dp_rkkbase rkkbase
                 LEFT JOIN So_BEARD signerName ON signerName.id = ordrkk.SignSigner
                 LEFT JOIN tempTable ON tempTable.id = ordrkk.id
         WHERE rkkbase.isdeleted = 0
     ) as s
      WHERE 1=1
            ::where-clause
        ]]>
    </prototype>
    <counting-prototype>
        <![CDATA[
            WITH approveIssueFixing as (
                    SELECT "replica"
                    FROM SS_Module sm
                    JOIN ss_moduletype sm_type ON sm_type.id = sm."type" AND sm_type.id_type = sm."type_type"
                    WHERE alias = 'ApproveIssueFixing')
            SELECT
                    COUNT(1)
                FROM (
     with tempTable as (
             SELECT ordrstate, id
             FROM (
                      SELECT 'На ознакомлении' AS ordrstate,
                             ordrkk.id
                      FROM f_dp_ordrkk ordrkk
                               JOIN f_dp_rkk rkk ON rkk.id = ordrkk.id
				      WHERE rkk.reviewisunder = 1
                      UNION ALL
                      SELECT CASE
                                 WHEN (rkk.regnumcnt IS NOT NULL) THEN 'Зарегистрирован'
                                 WHEN (rkk.regisinprocess = 1) THEN 'На регистрации'
                                 WHEN (rkk.regisrejected = 1) THEN 'Отказано в регистрации'
                                 WHEN (rkk.isonrework = 1) THEN 'На доработке'
                                 END AS ordrstate,
                             ordrkk.id
                      FROM f_dp_ordrkk ordrkk
                               JOIN f_dp_rkk rkk ON rkk.id = ordrkk.id
                      UNION ALL
                      SELECT CASE
                                 WHEN (ordrkk.signissigned = 1) THEN 'Подписан'
                                 WHEN (ordrkk.signissentto = 1) THEN 'На подписании'
                                 WHEN (ordrkk.signisrejected = 1) THEN 'В подписании отказано'
                                 WHEN (ordrkk.signissentto = 0 and ordrkk.signsenttodt is not null)
                                     THEN 'Отозван с подписания'
                                 END AS ordrstate,
                             ordrkk.id
                      FROM f_dp_ordrkk ordrkk
                      UNION ALL
                      SELECT CASE
                                 WHEN (ordrkk.appraddstatus = 'APPROVED_COMMENTS' or ordrkk.appraddstatus = 'APPROVED_POSITIVE' and exists (select 1
                                       from apr_voresult vo
                                       where vo.HierRoot = ordrkk.id and IsVisa = 1 and not interruptedBy is null
                                       LIMIT 1
                                      ))
                                     THEN 'Снятие замечаний завершено или прекращено'
                                 WHEN ordrkk.isAfterApproving = 1 THEN 'Обработка согласования'
                                 WHEN (ordrkk.apprisunder = 1 and (ordrkk.appraddstatus = 'APPROVED_POSITIVE'
                                     or ordrkk.appraddstatus = 'APPROVED_COMMENTS')) THEN 'Снятие замечаний'
                                 WHEN (ordrkk.apprisunder = 1) THEN 'На согласовании'
                                 END AS ordrstate,
                             ordrkk.id
                      FROM f_dp_ordrkk ordrkk
                      UNION ALL
                      SELECT CASE
                                 WHEN (rkk.ctrldateexecution IS NOT NULL) THEN 'Исполнен'
                                 WHEN (SELECT COUNT(*) FROM F_DP_Resolution resRkk
                     WHERE rkk.id = resRkk.HierRoot AND resRkk.ctrldateexecution is null
                       AND rkk.ctrldateexecution is null AND resRkk.isproject <> 1) > 0 THEN 'На исполнении'
                                 END AS ordrstate,
                             ordrkk.id
                      FROM f_dp_ordrkk ordrkk
                               JOIN f_dp_rkk rkk ON rkk.id = ordrkk.id
                  ) s WHERE ordrstate is not null
             )
         SELECT
             rkkbase.id                                             AS id,
             rkkbase.created_date                                   AS created_date,
             rkkbase.type                                           AS reqType,
             rkkbase.module                                         AS Module,
             '<id>'                                                 AS self_1,
             ':'                                                    AS self_2,
             '</>'                                                  AS self_3,
             rkk.regdate                                            AS regDate,
case when rkkbase.security_stamp is not null then
                             '<iconHint>Есть гриф</><iconId>165</>'
             else ''
             end AS hasGriff,
(SELECT
                  coalesce(max(a), cast(0 AS SMALLINT))
              FROM (
                       SELECT
                           cast(1 AS SMALLINT) a
                       FROM f_ContentFiles_Rkk CF
                       WHERE CF.f_dp_rkkbase = rkk.id
                       UNION ALL SELECT
                           cast(1 AS SMALLINT)
                       FROM f_ContentRichText_Rkk CRT
                       WHERE CRT.f_dp_rkkbase = rkk.id
                       UNION ALL SELECT
                           cast(1 AS SMALLINT)
                       FROM f_VerifyImage_Rkk VI
                       WHERE VI.f_dp_rkk = rkk.id
                   ) t
             )                                                AS hasAttachments,
coalesce( ordrstate, 'Инициирование') AS stageStatus,
'<regNumberPrefix>' || coalesce(rkk.regnumprist, '') || '</>'
                 || '<regNumberCounter#Number>' || coalesce(cast(rkk.regnumcnt as varchar), '') || '</>'
                 || '<regNumberSuffix>' || coalesce(rkk.regnumfin, '') || '</>' AS regNumber,
rkk.regnumcnt                                                      AS registrationNumberCounter,
CASE
                 WHEN (rkkbase.signingmode = 0) THEN signerName.orig_shortname
                 ELSE
                     (SELECT array_to_string(array_agg(orig_shortname), ' ', '')
                     FROM F_DP_Rkk_SigningInfo
                         JOIN so_beard on F_DP_Rkk_SigningInfo.signer = So_beard.id
                     WHERE ordrkk.id = F_DP_Rkk_SigningInfo.owner)
                 END AS signerName,
rkkbase.subject                                                    AS subject,
(SELECT COALESCE(string_agg((CASE
                                            WHEN link.doclinktype = '' THEN '<id></>'
                                            ELSE (COALESCE(
                                                                    '<id>' || link.docreplid || ':' || link.docunid || '</>',
                                                                    '<id>' || to_char(
                                                                                cast((rkkbase.module_type * 10 ^ 12) as bigint) + rkkbase.module,
                                                                                'FM0000000000000000') ||
                                                                    ':00000000000000000000000000000000' || '</>')) END), ';'),
                            '<id></>')
            FROM F_DP_RkkWORegAndCtrl_ULnk link
            WHERE link.owner = rkk.id)                                         AS linkedDoc,
COALESCE((SELECT string_agg(beardExec.Orig_ShortName, ',') AS Orig_ShortName
              FROM f_dp_ordrkk_Executor ordexec
              LEFT JOIN so_beard beardExec ON beardExec.id = ordexec.Executor
              WHERE ordexec.owner = rkkbase.id), '<Не указано>')       AS executorName,
coalesce(
                     (SELECT
                          CASE WHEN regplace.orig_shortname IS NULL THEN 'Не указано'
                               ELSE regplace.orig_shortname
                              END
                      FROM so_beard RegPlace
                      WHERE RegPlace.id = rkkbase.RegCode),
                     CASE WHEN rkkbase.RegCode IS NULL THEN 'Не указано' END
                 )  AS regPlace,
concat(rkk.prjnumprist, rkk.prjnumcounter, rkk.prjnumfin) as projectNumber,
rkk.prjnumcounter                                         as projectNumberCounter,
(select
                  array_to_string(array_agg( theme), ';', '')
              from f_dp_rkkbase_theme themes
              where themes.owner = rkkbase.id) as theme,
coalesce(rkk.regnumprist, '') || coalesce(cast(rkk.regnumcnt as varchar), '') || coalesce(rkk.regnumfin, '') AS fullRegNumber
FROM
             f_dp_ordrkk ordrkk
                 NATURAL JOIN f_dp_rkk rkk
                 NATURAL JOIN f_dp_rkkbase rkkbase
                 LEFT JOIN So_BEARD signerName ON signerName.id = ordrkk.SignSigner
                 LEFT JOIN tempTable ON tempTable.id = ordrkk.id
         WHERE rkkbase.isdeleted = 0
     ) as s
      WHERE 1=1
            ::where-clause
        ]]>
    </counting-prototype>
    <filter name="self">
        <criteria placeholder="where-clause">
            <![CDATA[
                        Module = {0} and id = {1}
                    ]]>
        </criteria>
    </filter>
    <filter name="MODULE">
        <criteria placeholder="where-clause">
            <![CDATA[
				Module = {0}
			]]>
        </criteria>
    </filter>
    <filter name="hasAttachments">
        <criteria placeholder="where-clause">
            <![CDATA[
                    hasAttachments = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="stageStatus">
        <criteria placeholder="where-clause">
            <![CDATA[
                    stageStatus = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="stageStatus_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    stageStatus iLIKE '%'||{0}||'%'
                ]]>
        </criteria>
    </filter>
    <filter name="regDate">
        <criteria placeholder="where-clause">
            <![CDATA[
                    cast(regDate as date) = cast({0} as date)
                ]]>
        </criteria>
    </filter>
    <filter name="regDate_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                     ('б/д' ilike '%'||{0}||'%' and (regDate is null))
                ]]>
        </criteria>
    </filter>
    <filter name="regDate_interval">
        <criteria placeholder="where-clause">
            <![CDATA[
              cast(regDate as date) >= cast({0} as date) and cast(regDate as date) <= cast({1} as date)
                ]]>
        </criteria>
    </filter>
    <filter name="reqType">
        <criteria placeholder="where-clause">
            <![CDATA[
                	reqType = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="reqType_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                        reqType ilike '%'||{0}||'%'
                    ]]>
        </criteria>
    </filter>
    <filter name="signerName">
        <criteria placeholder="where-clause">
            <![CDATA[
                    signerName = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="signerName_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                signerName iLIKE ('%'||{0}||'%')
            ]]>
        </criteria>
    </filter>
    <filter name="linkedDoc">
        <criteria placeholder="where-clause">
            <![CDATA[
                    linkedDoc = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="subject">
        <criteria placeholder="where-clause">
            <![CDATA[
                    subject = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="subject_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    subject iLIKE '%'||{0}||'%'
                ]]>
        </criteria>
    </filter>
    <filter name="regPlace">
        <criteria placeholder="where-clause">
            <![CDATA[
                    regPlace = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="regPlace_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    regplace iLIKE '%'||{0}||'%'
                ]]>
        </criteria>
    </filter>
    <filter name="executorName">
        <criteria placeholder="where-clause">
            <![CDATA[
                    executorName = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="iexecutorName_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                executorName iLIKE ('%'||{0}||'%')
            ]]>
        </criteria>
    </filter>
    <filter name="executorName">
        <criteria placeholder="where-clause">
            <![CDATA[
                    executorName = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="executorName_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                executorName iLIKE ('%'||{0}||'%')
            ]]>
        </criteria>
    </filter>
    <filter name="projectNumber">
        <criteria placeholder="where-clause">
            <![CDATA[
                projectNumber = {0}
            ]]>
        </criteria>
    </filter>
    <filter name="theme">
        <criteria placeholder="where-clause">
            <![CDATA[
                    theme = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="theme_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                    theme iLIKE ('%'||{0}||'%')
                ]]>
        </criteria>
    </filter>
    <filter name="regNumber">
        <criteria placeholder="where-clause">
            <![CDATA[
                    fullRegNumber = {0}
                ]]>
        </criteria>
    </filter>
    <filter name="regNumber_partial">
        <criteria placeholder="where-clause">
            <![CDATA[
                fullRegNumber iLIKE ('%'||{0}||'%')
            ]]>
        </criteria>
    </filter>
</collection>