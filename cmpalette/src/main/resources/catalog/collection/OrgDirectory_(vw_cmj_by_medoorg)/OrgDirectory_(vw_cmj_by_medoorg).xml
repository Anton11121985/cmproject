<collection name="OrgDirectory_(vw_cmj_by_medoorg)" idField="id">
	<prototype>
		<![CDATA[SELECT
	                temp.id,
	                temp.id_type,
	                '<id>' as self_1,
		            ':' as self_2,
		            '</>' as self_3,
	                temp.created_date,
	                temp.Module,
	                temp.iconId,
	                temp.iconHint,
					CONCAT ('<id>',substring(temp.cmjunid, 33, 48),':',substring(temp.cmjunid, 1, 32),'</>') self,
		            temp.updated_date as updated_date,
		            temp.shortNameULIP as soShortName,
		            temp.fullNameOrganization as soFullName,
		            temp.origShortName as soLeaderShortName,
		            temp.region as soMix2,
		            temp.street,
                temp.streettype,
                temp.house,
				 				temp.corp,
								temp.building,
								temp.office,
 								case
					    		when  temp.settlement is null then ''
					    		else  temp.settlement
								end as settlement,
								temp.city,
								temp.locality,
								temp.region,
								temp.country,
								temp.zipcode,

		            case
							when (temp.street IS NOT NULL AND temp.street <> '')
							then coalesce(NULLIF(temp.streettype, ''), 'ул.') || ' ' || temp.street
							else ''
						end
						||
					case when (temp.sparkId is not null and temp.sparkId<>'')
					then coalesce(' ' || NULLIF(temp.house, ''), '')
						|| coalesce(' корп. ' || NULLIF(temp.corp, ''), '')
						|| coalesce(' стр. ' || NULLIF(temp.building, ''), '')
						|| coalesce(' офис ' || NULLIF(temp.office, ''), '')
						|| coalesce(' н/п ' || NULLIF(temp.settlement, ''), '')
						|| coalesce(' ' || NULLIF(temp.city, ''), '')
						|| coalesce(' ' || NULLIF(temp.locality, ''), '')
					else coalesce(' д. ' || NULLIF(temp.house, ''), '')
						|| coalesce(' корп. ' || NULLIF(temp.corp, ''), '')
						|| coalesce(' стр. ' || NULLIF(temp.building, ''), '')
						|| coalesce(' офис ' || NULLIF(temp.office, ''), '')
						|| coalesce(' н/п ' || NULLIF(temp.settlement, ''), '')
						|| coalesce(' г. ' || NULLIF(temp.city, ''), '')
						|| coalesce(' р-н. ' || NULLIF(temp.locality, ''), '')
					end
						|| coalesce(' ' || NULLIF(temp.region, ''), '')
						|| coalesce(' ' || NULLIF(temp.country, ''), '')
						|| coalesce(' ' || NULLIF(temp.zipcode, ''), '') as soAddress,
					temp.phone as soPhone,
					coalesce(temp.email, '') as soEmail
                FROM(
                    SELECT
                        org.id,
                        org.id_type as id_type,
                        beard.cmjunid,
                        orgdesc.created_date,
                        orgdesc.updated_date,
                        orgdesc.Module,
                        orgdesc.replacedWith,
                        orgdesc.edited,
                        orgdesc.isRequest,
                        orgdesc.RequestState,
                        orgdesc.isDeleted,
                        adrs.street,
                        adrs.streettype,
                        adrs.house,
						adrs.corp,
						adrs.building,
						adrs.office,
						adrs.settlement,
						adrs.city,
						adrs.locality,
						adrs.region,
						adrs.country,
						adrs.zipcode,
                        case when org.shortName='' then org.fullName else org.shortName end as shortNameULIP,
						case
			    			when orgdesc.isRequest = 1 then '01'
			    			else ''
						end as iconId,
						case
						    when orgdesc.isRequest = 1 then 'Заявка'
						    else ''
						end as iconHint,
                        org.fullName as fullNameOrganization,
						(SELECT DISTINCT coalesce(string_agg(phone, '; '), '')
            					FROM( SELECT phone.phone as phone
                  						FROM so_phone_org phoneorg
										join so_phone phone on phone.id= phoneorg.id
                  				WHERE phoneorg.owner = org.id
								) q
            			) as phone,
						(SELECT DISTINCT coalesce(string_agg(email,E'\n'), '')
            					FROM( SELECT email.email as email
                  						FROM so_email_org emailorg
										join so_email email on email.id= emailorg.id
                  						WHERE emailorg.owner = org.id
								) q
            			) as email,
            			(select cast(tfs."value" as varchar) as v
        from tn_field_decimal tfd
        join tn_field on tn_field.id = tfd.id
        where tn_field."owner" = orgdesc.id
        and tn_field.owner_type = orgdesc.id_type
        and tn_field.cmjfield = 'sparkId') as sparkId,
            			 coalesce (orgdesc.medoGuid, '') as medoOrgGuid,
                        coalesce (orgdesc.medoAddress, '') as medoAddress,
						concat_ws(',',so_personnonsysorg .origShortName) as origShortName,
                        orgdesc.topic as thematic,
						tfs.value as counterparty
							FROM so_orgdescriptionnonsys org
							left join so_beard beard on beard.id=org.beard
							inner join so_orgdescription orgdesc on org.id = orgdesc.id
							left join so_addressdata_org_f orgadrs on orgadrs.owner = orgdesc.id
                        	left join so_addressdata adrs on adrs.id = orgadrs.id
                        	left join so_orgcategory_sch orgcat on orgcat.owner = orgdesc.id
							left join (select
										organization, string_agg(pers.lastName || (case when length(pers.firstname) > 0 then ' ' || pers.firstname else '' end) ||
										(case when length(pers.middlename) > 0 then ' ' || pers.middlename else '' end), ', ') as origShortName
											FROM so_personnonsysorg
											JOIN so_personnonsys ON so_personnonsysorg.id = so_personnonsys.id and so_personnonsys.IsLiquidated<>1
											join so_person pers on so_personnonsysorg.id = pers.id and pers.isdeleted <> 1
											where so_personnonsysorg.postrole=1
											GROUP BY organization
									) as so_personnonsysorg  on  so_personnonsysorg .organization  = org.id
							left join tn_field tf on tf.owner = orgdesc.id and tf.owner_type = orgdesc.id_type and tf.cmjfield ='counterparty'
							left join tn_field_string tfs on tfs.id=tf.id
							left join so_orgdescription orgdescription on org.id = orgdescription.id
                )temp
                where
                temp.edited is null AND temp.replacedWith is null AND (temp.RequestState is null OR temp.RequestState = 0)
                    AND (temp.medoOrgGuid <> '' OR temp.medoAddress <> '') AND temp.isDeleted <> 1
                    ::where-clause
            ]]>
	</prototype>
	<filter name="MODULE">
		<criteria placeholder="where-clause">
			<![CDATA[
                    temp.Module = {0}
                ]]>
		</criteria>
	</filter>
	<filter name="soShortName_partial">
		<criteria placeholder="where-clause">
			<![CDATA[
                    lower(temp.shortNameULIP) like lower('%' || {0} || '%')
                ]]>
		</criteria>
	</filter>
	<filter name="soFullName_partial">
		<criteria placeholder="where-clause">
			<![CDATA[
                    lower(temp.fullNameOrganization) like lower('%' || {0} || '%')
                ]]>
		</criteria>
	</filter>
	<filter name="soLeaderShortName_partial">
		<criteria placeholder="where-clause">
			<![CDATA[
                    lower(temp.origShortName) like lower('%' || {0} || '%')
                ]]>
		</criteria>
	</filter>
	<filter name="soPhone_partial">
		<criteria placeholder="where-clause">
			<![CDATA[
						 case
					    when  temp.phone is null then ''
					    else  temp.phone
					 end like ('%' || {0} || '%')
                ]]>
		</criteria>
	</filter>
	<filter name="soEmail_partial">
		<criteria placeholder="where-clause">
			<![CDATA[
						 case
					    when  temp.email is null then ''
					    else  temp.email
					 end like ('%' || {0} || '%')
                ]]>
		</criteria>
	</filter>
	<filter name="soMix2_partial">
		<criteria placeholder="where-clause">
			<![CDATA[
                    lower(temp.region) like lower('%' || {0} || '%')
                ]]>
		</criteria>
	</filter>
	<filter name="soAddress_partial">
		<criteria placeholder="where-clause">
			<![CDATA[
                    lower(concat(temp.street,
							temp.streettype,
							temp.house,
							temp.corp,
							temp.building,
							temp.office,
							temp.settlement,
							temp.city,
							temp.locality,
							temp.region,
							temp.country,
							temp.zipcode)) like lower ('%' || {0} || '%')
                ]]>
		</criteria>
	</filter>
</collection>