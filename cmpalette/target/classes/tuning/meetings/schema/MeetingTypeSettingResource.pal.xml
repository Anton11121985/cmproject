<?xml version='1.0' encoding='UTF-8'?>
<schemas xmlns="http://www.intertrust.ru/schema/palette/tn-schema">
  <schema extends="MeetingTypeSettingActions" name="MeetingTypeSettingResource">
    <meta>
      <category name="Система\Заседания"/>
    </meta>
    <actor name="chairman" system="true">
      <storage-field name="chairmanBeard" display="chairmanFIO"/>
    </actor>
    <actor name="secretary" system="true">
      <storage-field name="secretaryBeard" display="secretaryFIO"/>
    </actor>
    <actor array="true" name="secretariat" system="true">
      <storage-field name="secretariatBeards" display="secretariatFIOs"/>
    </actor>
    <actor array="true" required="true" name="agendaAffirmPeople" system="true">
      <storage-field name="agendaAffirmBeards"/>
    </actor>
    <time name="eventTime" system="true">
      <storage-field name="eventTime"/>
    </time>
    <string name="eventPlace" system="true">
      <storage-field name="eventPlace"/>
    </string>
    <string name="typeRP" system="true">
      <storage-field name="typeRP"/>
    </string>
    <string name="rkkType" system="true">
      <storage-field name="missionsRKKType"/>
    </string>
    <actor name="rkkRegplace" system="true">
      <storage-field name="missionsRKKRegplaceBeard" display="missionsRKKRegplaceName"/>
    </actor>
    <actor array="true" name="permanent" system="true"/>
    <actor array="true" name="permanentExt" system="true">
      <storage-field name="PParticipantsBeardsExt" display="PParticipantsExtFIOs"/>
    </actor>
    <actor array="true" name="hasVoteAccess" system="true">
      <storage-field name="VoteAccess" display="VoteAccessFIO"/>
    </actor>
    <actor array="true" name="Readers">
      <storage-field name="readersBeards"/>
    </actor>
    <enum-ref ref="AgendaSendToIPad" required="true" name="sendToIPadAgenda" system="true">
      <storage-field name="sendToIPadAgenda"/>
    </enum-ref>
    <enum-ref ref="MinutesSendToIPad" required="true" name="sendToIPadProtocol" system="true">
      <storage-field name="sendToIPadProtocol"/>
    </enum-ref>
    <string array="true" name="voteOption" system="true">
      <storage-field name="voteOption"/>
    </string>
    <boolean name="canVoteAfterExpiration" system="true">
      <storage-field name="canVoteAfterExpiration"/>
    </boolean>
    <boolean name="useDirective" system="true">
      <storage-field name="useDirective"/>
    </boolean>
    <actor name="directiveAffirmBeard" system="true">
      <storage-field name="directiveAffirmBeard" display="DirectiveAffirmFIO"/>
    </actor>
    <string name="directiveText" system="true">
      <storage-field name="directiveText"/>
    </string>
    <boolean name="usePreambula" system="true">
      <storage-field name="usePreambula"/>
    </boolean>
    <boolean name="useVotingAbsentee" system="true">
      <storage-field name="useVoting"/>
    </boolean>
    <boolean name="useVotingIntramural" system="true">
      <storage-field name="useVotingIntramural"/>
    </boolean>
    <integer array="true" name="voteNoticeIntervalsIntramural" system="true">
      <storage-field name="voteNoticeIntervals_intramural"/>
      <default-values>
        <default-value>0</default-value>
      </default-values>
    </integer>
    <integer array="true" name="voteNoticeIntervalsAbsentee" system="true">
      <storage-field name="voteNoticeIntervals_absentee"/>
      <default-values>
        <default-value>0</default-value>
      </default-values>
    </integer>
    <string name="VotingDaysToNotifyText" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Уведомлять за [']]></script>
      </calc-values>
      <default-values>
        <default-value>Уведомлять за [</default-value>
      </default-values>
    </string>
    <string name="ExtramuralVotingDaysToNotifyText2" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['] дней до даты передачи бюллетеней']]></script>
      </calc-values>
      <default-values>
        <default-value>] дней до даты передачи бюллетеней</default-value>
      </default-values>
    </string>
    <string name="IntramuralVotingDaysToNotifyText2" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['] дней до даты заседания']]></script>
      </calc-values>
      <default-values>
        <default-value>] дней до даты заседания</default-value>
      </default-values>
    </string>
    <schema-ref ref="AgendaPrintForm" name="agendaPrintForm" system="true"/>
    <schema-ref ref="AgendaAbsPrintForm" name="agendaAbsenteePrintForm" system="true"/>
    <schema-ref ref="MinutesPrintForm" name="minutesPrintForm" system="true"/>
    <schema-ref ref="MinutesAbsPrintForm" name="minutesAbsenteePrintForm" system="true"/>
    <schema-ref ref="ExtractPrintForm" name="extractPrintForm" system="true"/>
    <schema-ref ref="ExtractAbsPrintForm" name="extractAbsenteePrintForm" system="true"/>
    <schema-ref ref="BulletinPrintForm" name="bulletinPrintForm" system="true"/>
    <boolean name="canCreateMinutesWithoutAgenda" system="true">
      <storage-field name="canCreateMinWithoutAgenda"/>
    </boolean>
    <boolean name="canCreateInvitation" system="true">
      <storage-field name="canCreateInvitation"/>
    </boolean>
    <boolean name="canRedirectAgenda" system="true">
      <storage-field name="canRedirectAgenda"/>
    </boolean>
    <boolean name="canCreateSubPoint" system="true">
      <storage-field name="canCreateSubPoint"/>
    </boolean>
    <boolean name="canCreateNextPoint" system="true">
      <storage-field name="canCreateNextPoint"/>
    </boolean>
    <boolean name="canNotifyResponsibles" system="true">
      <storage-field name="canNotifyResponsibles"/>
    </boolean>
    <string name="showType" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Настройки заседания']]></script>
      </calc-values>
    </string>
    <string required="true" name="meetingType" system="true">
      <storage-field name="type"/>
    </string>
    <schema-ref ref="BulletinAbsPrintForm" name="bulletinAbsenteePrintForm" system="true"/>
    <boolean name="multilingual" system="true">
      <storage-field name="MultiLingual"/>
    </boolean>
    <integer name="quorumCount" system="true">
      <storage-field name="quorumCount"/>
    </integer>
    <actor array="true" name="permanentInvited" system="true"/>
    <boolean name="minutesReportOff" system="true"/>
    <boolean name="votingIsOn" system="true"/>
    <actor array="true" name="targetGroup" system="true"/>
    <actor array="true" name="agendaAffirmTargetGroup" system="true" createlog="true"/>
    <boolean name="useMeetingNumber" system="true" createlog="true"/>
    <boolean name="$enableMeetingNumeration" createlog="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#use.meeting.numeration'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <custom-event-handler lang="JavaScript"><![CDATA[function querySave(object, document) {
    return true;
}

function recalc(rkk, changedField) {
  if(changedField=="votingIsOn" && rkk.isNew()){
    if(rkk.votingIsOn()){
 	rkk.setUseVotingAbsentee(true);
    }
  }

  if( changedField=="chairman" || 
                    changedField=="permanent" ||
                    changedField=="permanentExt" ||
                    changedField=="permanentInvited" ||
                    changedField=="permanentSecond"){
         if(changedField=="chairman"){
             if(rkk.chairman().get()!=null && !rkk.voteAccess().contains(rkk.chairman().get())){
                 rkk.voteAccess().add(rkk.chairman().get());
             }
         }else{
             var changedList = null;
             switch(changedField){
               case "permanent": changedList = rkk.permanentParticipants(); break;
               case "permanentExt": changedList = rkk.getPermanentExtParticipants(); break;
               case "permanentInvited": changedList = rkk.getPermanentInvitedBeards(); break;
               case "permanentSecond": changedList = rkk.permanentSecond(); break;
             }
             if(changedList!=null){
             for(var i= 0; i<changedList.size();i++){
                   var el = changedList.get(i);
                   if (!rkk.voteAccess().contains(el))
                      rkk.voteAccess().add(el);
                  }
             }
         }
  }

}

function postSave(object, document) {}]]></custom-event-handler>
  </schema>
</schemas>