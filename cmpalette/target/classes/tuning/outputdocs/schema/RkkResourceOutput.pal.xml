<?xml version='1.0' encoding='UTF-8'?>
<schemas xmlns="http://www.intertrust.ru/schema/palette/tn-schema">
  <schema extends="RkkResource" name="RkkResourceOutput">
    <meta>
      <category name="Система\Делопроизводство"/>
      <documentation>основная схема "Исходящего документа"</documentation>
    </meta>
    <string name="pagename" createlog="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[registration.number==null ? 'ИсхД проект' : 'Исхд № '+registration.number.prefix+registration.number.number+registration.number.suffix]]></script>
      </calc-values>
    </string>
    <actor array="true" name="advSigner" system="true"/>
    <actor array="true" name="executor" system="true"/>
    <actor array="true" name="addressee" system="true"/>
    <actor name="f_read_allowbyctx" array="true" computed="true" >
      <calc-values>
        <script event="save" lang="SPEL"><![CDATA[#joinCols(#toCol(signature?.signer), signature?.signers?.?[#this != null]?.![signer], advSigner)]]></script>
      </calc-values>
    </actor>
    <schema-ref ref="Organization" array="true" name="correspondent" system="true"/>
    <schema-ref ref="Sending" name="sending" system="true"/>
    <string name="showIdent" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Исходящий']]></script>
      </calc-values>
    </string>
    <schema-ref ref="ShowSignInfo" name="showSignInfo" temporal="true"/>
    <boolean name="$canVerify" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#verify'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <schema-ref ref="MedoPart" name="medoPart" system="true"/>
    <schema-ref ref="Sending" name="digitalsending" system="true"/>
    <string name="$MedoNotSentToAll" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Отправлено не всем адресатам']]></script>
      </calc-values>
    </string>
    <boolean name="$canPrintMedoImage" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#print.image'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$CanSendToMedo" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[(link.?[rel=='http://intertrust.ru/cmj/relations#sendToMEDO'].size() > 0)]]></script>
      </calc-values>
    </boolean>
    <string name="$medoProcessingStatus" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[medoInfo.status=='2'?'Идет восстановление основного файла документа':medoInfo.status=='1'?'Идет конвертация/валидация основного файла документа':'']]></script>
      </calc-values>
    </string>
    <string array="true" name="$medoSelected">
      <storage-field name="MEDOSELECTED"/>
    </string>
    <boolean name="$hasMedoSelected" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.tuning()!=null && #this.tuning().getValues()!=null && #this.tuning().getValues().get("$medoSelected")!=null &&  #this.tuning().getValues().get("$medoSelected").getValues()!=null &&  !#this.tuning().getValues().get("$medoSelected").getValues().isEmpty()]]></script>
      </calc-values>
    </boolean>
    <string name="mainFileName" system="true"/>
    <boolean name="$isMainFileDefined" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[(mainFileName!=null && !mainFileName.isEmpty() &&
( 
   (medoInfo!=null && medoInfo.status!=null && !medoInfo.status.isEmpty() && medoInfo.status.equals("1")) ||
   (signature!=null && signature.state!=null && signature.state.status!=null && !signature.state.status.isEmpty() && !signature.state.status.equals("rejected") )
)) || 
(medoInfo!=null && medoInfo.errorInfo!=null && !medoInfo.errorInfo.equals(''))]]></script>
      </calc-values>
    </boolean>
    <string name="$medoConvertError" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[medoInfo==null?null:
(medoInfo.status!=null && !medoInfo.status.equals(''))?null:
medoInfo.errorInfo]]></script>
      </calc-values>
    </string>
    <schema-ref ref="MovingCopiesTable" array="true" name="movingCopiesTable" createlog="true"/>
    <string name="dialogueCommentReg" createlog="true">
      <storage-field name="dialogueCommentReg"/>
    </string>
    <string name="dialogueComment" createlog="true">
      <storage-field name="dialogueComment"/>
    </string>
    <string temporal="true" name="DOPName">
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA['F_DP_OutputRkk']]></script>
      </calc-values>
    </string>
    <boolean name="$hideSignLink" temporal="true">
      <meta>
        <documentation>Управление видимостью кнопок подписания</documentation>
      </meta>
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[
        medoInfo.status=='1' ?
         (link.?[rel=='http://intertrust.ru/cmj/relations#sign'].size()>0 ?
link.remove(link.?[rel=='http://intertrust.ru/cmj/relations#sign'].get(0)) : true) &&
         (link.?[rel=='http://intertrust.ru/cmj/relations#sign.locker.sign'].size()>0 ?
link.remove(link.?[rel=='http://intertrust.ru/cmj/relations#sign.locker.sign'].get(0)) : true) &&
         (link.?[rel=='http://intertrust.ru/cmj/relations#sign.group'].size()>0 ?
link.remove(link.?[rel=='http://intertrust.ru/cmj/relations#sign.group'].get(0)) : true) &&
         (link.?[rel=='http://intertrust.ru/cmj/relations#group.locker.sign'].size()>0 ?
link.remove(link.?[rel=='http://intertrust.ru/cmj/relations#group.locker.sign'].get(0)) : true) &&
         (link.?[rel=='http://intertrust.ru/cmj/relations#sign.and.register'].size()>0 ?
link.remove(link.?[rel=='http://intertrust.ru/cmj/relations#sign.and.register'].get(0)) : true) &&
         (link.?[rel=='http://intertrust.ru/cmj/relations#sign.and.register.locker.sign'].size()>0 ?
link.remove(link.?[rel=='http://intertrust.ru/cmj/relations#sign.and.register.locker.sign'].get(0)) : true) &&
         (link.?[rel=='http://intertrust.ru/cmj/relations#filesigning'].size()>0 ?
link.remove(link.?[rel=='http://intertrust.ru/cmj/relations#filesigning'].get(0)) : true) &&
         (link.?[rel=='http://intertrust.ru/cmj/relations#filesigning.locker.sign'].size()>0 ?
link.remove(link.?[rel=='http://intertrust.ru/cmj/relations#filesigning.locker.sign'].get(0)) : true)
         : true]]></script>
      </calc-values>
    </boolean>
    <boolean name="tDeleted" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[T(java.lang.Boolean).TRUE.equals(status.deleted)]]></script>
      </calc-values>
    </boolean>
    <custom-event-handler lang="JavaScript"><![CDATA[importPackage(Packages.ru.intertrust.cmj.af.so);
importPackage(Packages.ru.intertrust.cmj.af.tuning.impl);
importPackage(Packages.ru.intertrust.cmj.af.tuning);
importPackage(Packages.ru.intertrust.cmj.rest.tuning);
importClass(Packages.ru.intertrust.cmj.af.core.AFCMDomino);
importClass(Packages.ru.intertrust.cmj.af.history.FieldBase);
importClass(Packages.ru.intertrust.cmj.af.history.HasHistory);
importClass(Packages.ru.intertrust.cmj.af.history.emb.HistoryEmb);
importClass(Packages.ru.intertrust.cmj.af.history.record.BasicText);
importClass(Packages.ru.intertrust.cmj.af.history.record.NameList);
importClass(Packages.ru.intertrust.cmj.af.history.record.TextList);
importClass(Packages.ru.intertrust.cmj.af.so.SOAppointment);
importClass(Packages.ru.intertrust.cmj.af.so.SOBeard);
importClass(Packages.ru.intertrust.cmj.af.so.SOParty);
importClass(Packages.ru.intertrust.cmj.af.so.SOUnitParent);
importClass(Packages.ru.intertrust.cmj.af.so.SOUnitPost);
importClass(Packages.ru.intertrust.cmj.af.so.SOUnitPostHead);
importClass(Packages.ru.intertrust.cmj.af.so.SOUnitStructure);
importClass(Packages.ru.intertrust.cmj.af.utils.BeansUtils);
importClass(Packages.ru.intertrust.cmj.af.utils.Utils);
importClass(Packages.ru.intertrust.cmj.dp.DPException);
importClass(Packages.ru.intertrust.cmj.dp.DPM);
importClass(Packages.ru.intertrust.cmj.dp.DPMPurchaseContracts);
importClass(Packages.ru.intertrust.cmj.dp._stdimpl.dao.ActionInfo);
importClass(Packages.ru.intertrust.cmj.dp._stdimpl.dao.ActionInfoComment);
importClass(Packages.ru.intertrust.cmj.dp._stdimpl.dao.entity.Entity_);
importClass(Packages.ru.intertrust.cmj.dp._stdimpl.dao.entity.rkk.RKKSigning);
importClass(Packages.ru.intertrust.cmj.af.pkd.EventCode);
importClass(Packages.ru.intertrust.cmj.af.prvz.AFHasHead);
importClass(Packages.ru.intertrust.cmj.dp._stdimpl.dao.SaveListener);
importClass(Packages.ru.intertrust.cmj.dp._stdimpl.dao.entity.rkk.full.RKKFSigning);
importClass(Packages.ru.intertrust.cmj.dp._stdimpl.operations.Helper);
importClass(Packages.ru.intertrust.cmj.pkd.domain.PkdEntity);
importClass(Packages.ru.intertrust.cmj.pkd.domain.events.EventEntity.TaskEntity.Status);
importClass(Packages.ru.intertrust.cmj.pkd.session.PkdSession);
importClass(Packages.ru.intertrust.cmj.pkd.session.TaskChangeInfo);
importClass(Packages.java.util.List);
importClass(Packages.ru.intertrust.cmj.dp._stdimpl.dao.entity.rkk.full.RKKFRegistration);
importClass(Packages.ru.intertrust.cmj.dp._stdimpl.dao.entity.rkk.full.RKKFRegistration.Operation.Recall);
importClass(Packages.ru.intertrust.cmj.dp._stdimpl.operations.entity.rkk.full.RKKFRegistrationRegistrate);

function querySave(object, document) {	
	if (object.isDeleted()) {
		return true;
	}
	if (document.getItemValueString("medostatus") == "1") {
		throw "Идет конвертация/валидация основного файла документа. Редактирование запрещено.";
	}
	if (document.getItemValueString("medostatus") == "2") {
		throw "Идет восстановление основного файла документа. Редактирование запрещено.";
	}
	var medoGateState = object.getMedoGateState();
	if (medoGateState != null) {
		TuningHelper.processProperty(object.tuning().getValues(), "MedoGateState", medoGateState, object.tuning().getSchema().getProperty("MedoGateState"));
	}	
	if ((object.registration().getState() == DPM.RKK.Registration.State.SENT) && object.signing().wasUnSigned) {
		object.registration().recall();
	}

  if (object.MedoSending.needSend()) {
    var dx = object.history().getRecord("doc.send.medo");
    dx.update(null, null, null);
    dx.setUpdated(true);
  }

	return true;
}

function postSave(object, document) {		
	if (object.signing().wasUnSigned) {
		var to = RKKFRegistrationRegistrate.getDPs(object);
		if (!to.isEmpty()) {
			new PkdSession().deleteEvent(to, EventCode.getByString("RGST1_11"), object);
		}
	}
}]]></custom-event-handler>
  </schema>
</schemas>