<?xml version='1.0' encoding='UTF-8'?>
<schemas xmlns="http://www.intertrust.ru/schema/palette/tn-schema">
  <schema name="ResolutionTasksResource">
    <meta>
      <category name="Система\Поручения"/>
    </meta>
    <string name="pagename" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#isObjectContains(#this, 'registration') ? (registration.number==null ? 'Поручение проект' : ('Поручение № '+registration.number.prefix+registration.number.number+registration.number.suffix)) : 'Поручение проект']]></script>
      </calc-values>
    </string>
    <string array="true" name="category" system="true"/>
    <schema-ref ref="DeadlineDeferHistoryResource" name="deadlineDefer" system="true"/>
    <integer name="priority" system="true" temporal="true"/>
    <date name="resdeadline" system="true"/>
    <string name="$controlAction" system="true" temporal="true"/>
    <string name="$executionAction" system="true" temporal="true"/>
    <boolean name="isAccessFromLink" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='self'].size() > 0 && T(org.springframework.web.util.UriComponentsBuilder).fromUriString(link.?[rel=='self'].get(0).getHref()).build().getQueryParams().get( 'access') != null]]></script>
      </calc-values>
    </boolean>
    <string name="objectLabel" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Поручение']]></script>
      </calc-values>
    </string>
    <string name="$titleHeader" system="true"/>
    <string name="showProject" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Проект']]></script>
      </calc-values>
    </string>
    <schema-ref ref="RegistrationInfo" name="registration" system="true"/>
    <schema-ref ref="ShowRegInfoTask" name="showRegInfo" temporal="true"/>
    <schema-ref ref="ShowAuthorInfoTask" name="showAuthor" temporal="true"/>
    <schema-ref ref="ControlCardResource" name="control" system="true"/>
    <string name="$OrderExecution" system="true" temporal="true"/>
    <date name="date" system="true"/>
    <actor name="author" system="true"/>
    <string name="authorLabel" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Автор:']]></script>
      </calc-values>
    </string>
    <string name="dateLabel" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA['Дата:']]></script>
      </calc-values>
    </string>
    <schema-ref ref="ExecutorResource" array="true" name="executor" system="true"/>
    <string name="$reminder" system="true"/>
    <schema-ref ref="ExecNoticeResource" name="execNotice" system="true"/>
    <string name="resOnControl" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[(control != null ) ? "1" : ""]]></script>
      </calc-values>
    </string>
    <schema-ref ref="ResTaskStatus" name="status" system="true"/>
    <boolean name="disableLinkAccess" system="true"/>
    <schema-ref ref="CompletionResourceResolution" name="complete" system="true" createlog="true" temporal="true"/>
    <boolean name="$canDiscuss" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#discussion'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <string name="PaperDocNumbers" createlog="true">
        <storage-field name="paperDocNumbers"/>
    </string>
    <string name="securityStamp" system="true" createlog="true"/>
    <boolean name="showSecurityStampField" createlog="true" temporal="true">
        <calc-values>
          <script lang="SPEL" event="open"><![CDATA[(securityStamp != null && securityStamp != "") ||
          (docReasonWithdrawlObj != null && ( docReasonWithdrawlObj.id != null || docReasonWithdrawlObj.docType != null || docReasonWithdrawlObj.withdrawStampReasonText != null) && (securityStamp == null || securityStamp == '')) ||
          (supportSecurityStamp) ||
          ( T(ru.intertrust.cmj.af.utils.BeansUtils).getBean('securityStampImpl').isSupportSecurityStamp('F_DP_TasksResolution') && T(ru.intertrust.cmj.af.core.AFCMDomino).getDbInfoByReplicaID(id.substring(0,16)).usedSecurityStamp)]]></script>
        </calc-values>
    </boolean>
    <boolean name="supportSecurityStamp" system="true" createlog="true" temporal="true"/>
    <string temporal="true" name="DOPName">
        <calc-values>
            <script lang="SPEL" event="open"><![CDATA['F_DP_TasksResolution']]></script>
        </calc-values>
    </string>
    <boolean name="securityStampIsNotEmpty" createlog="true" temporal="true">
        <calc-values>
            <script event="open" lang="SPEL"><![CDATA[securityStamp != null && securityStamp != ""]]></script>
        </calc-values>
    </boolean>
    <string array="true" temporal="true" name="personGrifs">
        <calc-values>
            <script lang="SPEL" event="open"><![CDATA[T(ru.intertrust.cmj.af.core.AFSession).get().currentUser().getPerson().getPersonStampGrifs()]]></script>
        </calc-values>
    </string>
    <string computed="true" createlog="true" name="editSecurityStampField">
      <storage-field name="editSecurityStampField"/>
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA[(editSecurityStampField == null || editSecurityStampField == '') ? (securityStampIsNotEmpty ? 'No' : 'Yes') : editSecurityStampField]]></script>
      </calc-values>
    </string>
    <schema-ref null-empty="true" ref="ReasonDoc" createlog="true" name="docReasonWithdrawlObj" />
    <string computed="true" temporal="true" name="securityStampText">
      <calc-values>
        <script lang="SPEL" event="open">
          <![CDATA[(docReasonWithdrawlObj != null && (docReasonWithdrawlObj.id != null || docReasonWithdrawlObj.docType!=null) && (securityStamp == null || securityStamp == '')) ? 'Гриф доступа снят' : securityStamp]]></script>
      </calc-values>
    </string>
    <schema-ref name="addLinkedDocGrif" ref="SelectGrifLinkedDocDialogResource" temporal="true"/>
    <boolean default-value="false" temporal="true" name="docReasonWithdrawalIsView">
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA[(docReasonWithdrawlObj != null && docReasonWithdrawlObj.id != null
        && T(ru.intertrust.cmj.af.core.AFEntityStorage).getEntityByUNID(docReasonWithdrawlObj.id)!=null
        && (securityStamp == null || securityStamp == ''))]]></script>
      </calc-values>
    </boolean>
    <boolean default-value="false" temporal="true" name="docReasonWithdrawalManualIsView">
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA[(docReasonWithdrawlObj != null &&
        (docReasonWithdrawlObj.id == null || T(ru.intertrust.cmj.af.core.AFEntityStorage).getEntityByUNID(docReasonWithdrawlObj.id)==null )
        && docReasonWithdrawlObj.docType != null && (securityStamp == null || securityStamp == ''))]]></script>
      </calc-values>
    </boolean>
    <boolean default-value="false" temporal="true" name="docReasonWithdrawalReasonIsView">
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA[(docReasonWithdrawlObj != null && docReasonWithdrawlObj.id == null && docReasonWithdrawlObj.docType == null && docReasonWithdrawlObj.withdrawStampReasonText!=null && (securityStamp == null || securityStamp == ''))]]></script>
      </calc-values>
    </boolean>
    <boolean default-value="false" temporal="true" name="supportSecurityStampCalc">
      <calc-values>
        <script lang="SPEL" event="open"><![CDATA[(supportSecurityStamp) || ( T(ru.intertrust.cmj.af.utils.BeansUtils).getBean('securityStampImpl').isSupportSecurityStamp('F_DP_TasksResolution') && T(ru.intertrust.cmj.af.core.AFCMDomino).getDbInfoByReplicaID(id.substring(0,16)).usedSecurityStamp)]]></script>
      </calc-values>
    </boolean>
    <boolean name="isPeriodicResolutionsEnabled" system="true" createlog="true" temporal="true"/>
    <boolean name="isPeriodic" system="true"/>
    <schema-ref name="periodicParameters" ref="PeriodicParametersResource" system="true"/>
    <boolean name="isPeriodTypeDates" temporal="true" system="true">
      <calc-values>
        <script event="open"><![CDATA[periodicParameters != null && periodicParameters.periodType == T(ru.intertrust.cmj.dp.ResolutionPeriodType).DATES]]></script>
      </calc-values>
    </boolean>
    <boolean name="isPeriodTypeMonthly" temporal="true" system="true">
      <calc-values>
        <script event="open"><![CDATA[periodicParameters != null && periodicParameters.periodType == T(ru.intertrust.cmj.dp.ResolutionPeriodType).MONTHLY]]></script>
      </calc-values>
    </boolean>
    <boolean name="isSchedulePresent" temporal="true" system="true">
      <calc-values>
        <script event="open"><![CDATA[periodicParameters != null && (periodicParameters.periodType == T(ru.intertrust.cmj.dp.ResolutionPeriodType).DATES || periodicParameters.resolutionDatesSchedule != null && periodicParameters.resolutionDatesSchedule.size() != 0)]]></script>
      </calc-values>
    </boolean>
    <string name="fillSchedule" temporal="true">
      <recalc-processing-class>ru.intertrust.cmj.rest.tuning.RecalcForResolutionFillSchedule</recalc-processing-class>
    </string>
    <boolean name="isAutoCreated" system="true" temporal="true"/>
    <boolean name="$canTrash" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[link.?[rel=='http://intertrust.ru/cmj/relations#move.to.trash'].size() > 0]]></script>
      </calc-values>
    </boolean>
    <boolean name="$IsNewResolution" system="true" temporal="true">
      <calc-values>
        <script event="open" lang="SPEL"><![CDATA[#this.new!=null && #this.new]]></script>
      </calc-values>
    </boolean>
    <string name="$delete" system="true" temporal="true"/>
    <custom-event-handler lang="JavaScript"><![CDATA[importPackage(Packages.ru.intertrust.cmj.af.tuning.impl);
        importPackage(Packages.ru.intertrust.cmj.af.tuning);
        importPackage(Packages.ru.intertrust.cmj.rest.tuning);
        importClass(Packages.ru.intertrust.cmj.tunable.object.common.TunableObjectHelper);
        importClass(Packages.ru.intertrust.cmj.dp.DPApplication);
        importClass(Packages.ru.intertrust.cmj.tunable.object.common.TunableObjectHelper);
        importClass(Packages.ru.intertrust.cmj.af.misc.AFDate);
        importClass(Packages.ru.intertrust.cmj.af.core.AFSession);
        importClass(Packages.org.springframework.util.StringUtils);

        function querySave(object, document) {
	      if(object.tuning()!= null && object.tuning().getValues()!= null){
              var securityStamp = object.getSecurityStamp();
              var editSecurityStampField = securityStamp != null && securityStamp != "" ? "No" : "Yes";
              object.tuning().getValues().put("editSecurityStampField",TuningHelper.createPropertyValue(editSecurityStampField, object.tuning().getSchema().getProperty("editSecurityStampField")));
          }

          if (StringUtils.isEmpty(object.getSecurityStamp()) && !StringUtils.isEmpty(document.getItemValueString("security_stamp_name"))) {
            var needGrifWarning = !object.isProject();
            if (needGrifWarning) {
              var reasonWithdraw = TunableObjectHelper.getAFInstanceTypedValue(object.tuning(), "docReasonWithdrawlObj.description");
              needGrifWarning = reasonWithdraw==null || reasonWithdraw=="" || reasonWithdraw=="null";
            }
            if (needGrifWarning) {
              throw "Для удаления грифа доступа воспользуйтесь кнопкой \"Снять гриф доступа\".";
            }
          }

          return true;
        }

        function postSave(object, document) {
	    }

    function recalc(object, changedField) {
      if ("author".equals(changedField)) {
        var author = object.getAuthor();
        TunableObjectHelper.putAFInstanceValue(object.control().tuning(), "current_author", author);
      }
      if (changedField == 'addLinkedDocGrif') {
        var values = object.tuning().getValues();
        var addLinkedDoc = values.get('addLinkedDocGrif');
        var ids = addLinkedDoc.getValues().get("ids") != null? addLinkedDoc.getValues().get("ids").getValues(): null;
        var docGrifUnid = (ids==null || ids.isEmpty())?null:getIdFromHref(ids.get(0).getValue());
        var docGrifSubject = null;
        var docGrifType = null;
        var docGrifRegDate = null;
        var docGrifRNum = null;
        if (docGrifUnid!=null && !docGrifUnid.equals("")) {
          var appdp = AFSession.get().getApplication(DPApplication.class);
          var grifRkk = appdp.getEntityByUNID(docGrifUnid);
          docGrifSubject = grifRkk.getSubject();
          docGrifType = grifRkk.getType();
          docGrifRNum = grifRkk.registration().getRegisteredInfo().getNumber().toString();
          docGrifRegDate = AFDate.fromJavaDate(grifRkk.registration().getDate()).toString();
        } else {
        // ручной ввод реквизитов
          var manDoc = addLinkedDoc.getValues().get("manualDoc");
          docGrifSubject = TunableObjectHelper.getAFInstanceTypedValue(manDoc, "subject");
          docGrifType = TunableObjectHelper.getAFInstanceTypedValue(manDoc, "docInfo");
        }
        if ((docGrifUnid!=null && docGrifUnid!="") || (docGrifType!=null && docGrifType!="")){
          TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.id", docGrifUnid);
          TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.docType", docGrifType);
          TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.subject", docGrifSubject);
          TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.docNumber", docGrifRNum);
          TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.regDate", docGrifRegDate);
          TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.withdrawStampReasonText", null);
          object.setSecurityStamp("");
        }
        TunableObjectHelper.putAFInstanceValue(object.tuning(), "addLinkedDocGrif", null);
      }

      if(changedField=='docReasonWithdrawlObj.withdrawStampReasonText') {
        TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.id", null);
        TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.docType", null);
        TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.subject", null);
        TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.docNumber", null);
        TunableObjectHelper.putAFInstanceValue(object.tuning(), "docReasonWithdrawlObj.regDate", null);
        object.setSecurityStamp("");
      }
    }

    function getIdFromHref(href) {
        var index = href.lastIndexOf("/", href.length())+1;
      if (index < 0) {
        return href;
      } else {
        return href.substring(index);
      }
    }
]]></custom-event-handler>
  </schema>
</schemas>